
    export let wifcapi = " * from \"./ifc-schema\";\nimport { Properties } from \"./helpers/properties\";\n * from \"./ifc_schema_helper\";\n declare const UNKNOWN = 0;\n declare const STRING = 1;\n declare const LABEL = 2;\n declare const ENUM = 3;\n declare const REAL = 4;\n declare const REF = 5;\n declare const EMPTY = 6;\n declare const SET_BEGIN = 7;\n declare const SET_END = 8;\n declare const LINE_END = 9;\n interface LoaderSettings {\n    COORDINATE_TO_ORIGIN?: boolean;\n    USE_FAST_BOOLS?: boolean;\n    CIRCLE_SEGMENTS_LOW?: number;\n    CIRCLE_SEGMENTS_MEDIUM?: number;\n    CIRCLE_SEGMENTS_HIGH?: number;\n    BOOL_ABORT_THRESHOLD?: number;\n}\n declare enum LogLevel {\n    DEBUG = 0,\n    INFO = 1,\n    WARN = 2,\n    ERROR = 3,\n    OFF = 4\n}\n interface Vector<T> {\n    get(index: number): T;\n    size(): number;\n}\n interface Color {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n}\n interface PlacedGeometry {\n    color: Color;\n    geometryExpressID: number;\n    flatTransformation: Array<number>;\n}\n interface FlatMesh {\n    geometries: Vector<PlacedGeometry>;\n    expressID: number;\n}\n interface RawLineData {\n    ID: number;\n    type: number;\n    arguments: any[];\n}\n interface LoaderError {\n    type: string;\n    message: string;\n    expressID: number;\n    ifcType: number;\n}\n interface IfcGeometry {\n    GetVertexData(): number;\n    GetVertexDataSize(): number;\n    GetIndexData(): number;\n    GetIndexDataSize(): number;\n}\n interface ifcType {\n    typeID: number;\n    typeName: string;\n}\n declare function ms(): number;\n declare type LocateFileHandlerFn = (path: string, prefix: string) => string;\n declare class IfcAPI {\n    wasmModule: undefined | any;\n    fs: undefined | any;\n    wasmPath: string;\n    isWasmPathAbsolute: boolean;\n    modelSchemaList: string[];\n    ifcGuidMap: Map<number, Map<string | number, string | number>>;\n    /**\n     * Contains all the logic and methods regarding properties, psets, qsets, etc.\n     */\n    properties: Properties;\n    logLevel: LogLevel;\n    /**\n     * Initializes the WASM module (WebIFCWasm), required before using any other functionality.\n     *\n     * @param customLocateFileHandler An optional locateFile function that let's\n     * you override the path from which the wasm module is loaded.\n     */\n    Init(customLocateFileHandler?: LocateFileHandlerFn): Promise<void>;\n    /**\n     * Opens a model and returns a modelID number\n     * @data Buffer containing IFC data (bytes)\n     * @data Settings settings for loading the model\n    */\n    OpenModel(data: Uint8Array, settings?: LoaderSettings): number;\n    /**\n     * Fetches the schema version of a given model\n     *\n    */\n    GetModelSchema(modelID: number): string;\n    /**\n     * Creates a new model and returns a modelID number\n     * @data Settings settings for generating data the model\n    */\n    CreateModel(settings?: LoaderSettings): number;\n    ExportFileAsIFC(modelID: number): Uint8Array;\n    Serialize(paths: any, serializedFileName: any, storeSerialized: (buffer: any) => void, ramLimit?: number): Promise<void>;\n    OpenSerialized(paths: any, settings?: LoaderSettings, ramLimit?: number): number;\n    /**\n     * Opens a model and returns a modelID number\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\n     * @data Buffer containing IFC data (bytes)\n    */\n    GetGeometry(modelID: number, geometryExpressID: number): IfcGeometry;\n    GetHeaderLine(modelID: number, headerType: number): any;\n    GetAllTypesOfModel(modelID: number): ifcType[];\n    GetLine(modelID: number, expressID: number, flatten?: boolean, inverse?: boolean): any;\n    GetAndClearErrors(modelID: number): Vector<LoaderError>;\n    WriteLine(modelID: number, lineObject: any): void;\n    FlattenLine(modelID: number, line: any): void;\n    GetRawLineData(modelID: number, expressID: number): RawLineData;\n    WriteRawLineData(modelID: number, data: RawLineData): any;\n    GetLineIDsWithType(modelID: number, type: number, includeInherited?: boolean): Vector<number>;\n    GetAllLines(modelID: Number): Vector<number>;\n    SetGeometryTransformation(modelID: number, transformationMatrix: Array<number>): void;\n    GetCoordinationMatrix(modelID: number): Array<number>;\n    GetVertexArray(ptr: number, size: number): Float32Array;\n    GetIndexArray(ptr: number, size: number): Uint32Array;\n    getSubArray(heap: any, startPtr: any, sizeBytes: any): any;\n    /**\n     * Closes a model and frees all related memory\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\n    */\n    CloseModel(modelID: number): void;\n    StreamAllMeshes(modelID: number, meshCallback: (mesh: FlatMesh) => void): void;\n    StreamAllMeshesWithTypes(modelID: number, types: Array<number>, meshCallback: (mesh: FlatMesh) => void): void;\n    /**\n     * Checks if a specific model ID is open or closed\n     * @modelID Model handle retrieved by OpenModel\n    */\n    IsModelOpen(modelID: number): boolean;\n    /**\n     * Load all geometry in a model\n     * @modelID Model handle retrieved by OpenModel\n    */\n    LoadAllGeometry(modelID: number): Vector<FlatMesh>;\n    /**\n     * Load geometry for a single element\n     * @modelID Model handle retrieved by OpenModel\n    */\n    GetFlatMesh(modelID: number, expressID: number): FlatMesh;\n    /**\n         * Returns the maximum ExpressID value in the IFC file, ex.- #9999999\n         * @param modelID Model handle retrieved by OpenModel\n         * @returns Express numerical value\n         */\n    GetMaxExpressID(modelID: number): any;\n    /**\n         * Returns the type of a given ifc entity in the fiule.\n         * @param modelID Model handle retrieved by OpenModel\n         * @param expressID Line Number\n         * @returns IFC Type Code\n         */\n    GetLineType(modelID: number, expressID: number): any;\n    /**\n     * Creates a map between element ExpressIDs and GlobalIDs.\n     * Each element has two entries, (ExpressID -> GlobalID) and (GlobalID -> ExpressID).\n     * @modelID Model handle retrieved by OpenModel\n     */\n    CreateIfcGuidToExpressIdMapping(modelID: number): void;\n    SetWasmPath(path: string, absolute?: boolean): void;\n    SetLogLevel(level: LogLevel): void;\n    LogDebug(...msg: string[]): void;\n    LogInfo(...msg: string[]): void;\n    LogWarn(...msg: string[]): void;\n    LogError(...msg: string[]): void;\n}\n";
    export let ifc_schema_helper = " declare class Handle<T> {\n    value: number;\n    constructor(id: number);\n    toTape(args: any[]): void;\n}\n declare function Value(type: string, value: any): any;\n declare let FromRawLineData: {};\n declare let InversePropertyDef: {};\n declare let InheritanceDef: {};\n declare namespace IFC2x3 {\n    class IfcAbsorbedDoseMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAccelerationMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAmountOfSubstanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAngularVelocityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAreaMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcBoolean {\n        value: boolean;\n        constructor(v: boolean);\n    }\n    class IfcBoxAlignment {\n        value: IfcLabel;\n        constructor(v: IfcLabel);\n    }\n    type IfcComplexNumber = Array<number>;\n    type IfcCompoundPlaneAngleMeasure = Array<number>;\n    class IfcContextDependentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcCountMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcCurvatureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDayInMonthNumber {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDaylightSavingHour {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDescriptiveMeasure {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcDimensionCount {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDoseEquivalentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDynamicViscosityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricCapacitanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricChargeMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricConductanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricCurrentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricResistanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricVoltageMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcEnergyMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcFontStyle {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcFontVariant {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcFontWeight {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcForceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcFrequencyMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcGloballyUniqueId {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcHeatFluxDensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcHeatingValueMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcHourInDay {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIdentifier {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcIlluminanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcInductanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcInteger {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIntegerCountRateMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIonConcentrationMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIsothermalMoistureCapacityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcKinematicViscosityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLabel {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcLengthMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLinearForceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLinearMomentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLinearStiffnessMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLinearVelocityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLogical {\n        value: boolean;\n        constructor(v: boolean);\n    }\n    class IfcLuminousFluxMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLuminousIntensityDistributionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLuminousIntensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMagneticFluxDensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMagneticFluxMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassDensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassFlowRateMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassPerLengthMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMinuteInHour {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfElasticityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfLinearSubgradeReactionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfRotationalSubgradeReactionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfSubgradeReactionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMoistureDiffusivityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMolecularWeightMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMomentOfInertiaMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMonetaryMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMonthInYearNumber {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcNormalisedRatioMeasure {\n        value: IfcRatioMeasure;\n        constructor(v: IfcRatioMeasure);\n    }\n    class IfcNumericMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPHMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcParameterValue {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPlanarForceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPlaneAngleMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPositiveLengthMeasure {\n        value: IfcLengthMeasure;\n        constructor(v: IfcLengthMeasure);\n    }\n    class IfcPositivePlaneAngleMeasure {\n        value: IfcPlaneAngleMeasure;\n        constructor(v: IfcPlaneAngleMeasure);\n    }\n    class IfcPositiveRatioMeasure {\n        value: IfcRatioMeasure;\n        constructor(v: IfcRatioMeasure);\n    }\n    class IfcPowerMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPresentableText {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcPressureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRadioActivityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRatioMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcReal {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRotationalFrequencyMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRotationalMassMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRotationalStiffnessMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSecondInMinute {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSectionModulusMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSectionalAreaIntegralMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcShearModulusMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSolidAngleMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSoundPowerMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSoundPressureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSpecificHeatCapacityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSpecularExponent {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSpecularRoughness {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTemperatureGradientMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcText {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextAlignment {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextDecoration {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextFontName {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextTransformation {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcThermalAdmittanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalConductivityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalExpansionCoefficientMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalResistanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalTransmittanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermodynamicTemperatureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTimeMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTimeStamp {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTorqueMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcVaporPermeabilityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcVolumeMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcVolumetricFlowRateMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcWarpingConstantMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcWarpingMomentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcYearNumber {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcActionSourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DEAD_LOAD_G: string;\n        static COMPLETION_G1: string;\n        static LIVE_LOAD_Q: string;\n        static SNOW_S: string;\n        static WIND_W: string;\n        static PRESTRESSING_P: string;\n        static SETTLEMENT_U: string;\n        static TEMPERATURE_T: string;\n        static EARTHQUAKE_E: string;\n        static FIRE: string;\n        static IMPULSE: string;\n        static IMPACT: string;\n        static TRANSPORT: string;\n        static ERECTION: string;\n        static PROPPING: string;\n        static SYSTEM_IMPERFECTION: string;\n        static SHRINKAGE: string;\n        static CREEP: string;\n        static LACK_OF_FIT: string;\n        static BUOYANCY: string;\n        static ICE: string;\n        static CURRENT: string;\n        static WAVE: string;\n        static RAIN: string;\n        static BRAKES: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcActionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PERMANENT_G: string;\n        static VARIABLE_Q: string;\n        static EXTRAORDINARY_A: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcActuatorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ELECTRICACTUATOR: string;\n        static HANDOPERATEDACTUATOR: string;\n        static HYDRAULICACTUATOR: string;\n        static PNEUMATICACTUATOR: string;\n        static THERMOSTATICACTUATOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAddressTypeEnum {\n        value: string;\n        constructor(v: string);\n        static OFFICE: string;\n        static SITE: string;\n        static HOME: string;\n        static DISTRIBUTIONPOINT: string;\n        static USERDEFINED: string;\n    }\n    class IfcAheadOrBehind {\n        value: string;\n        constructor(v: string);\n        static AHEAD: string;\n        static BEHIND: string;\n    }\n    class IfcAirTerminalBoxTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONSTANTFLOW: string;\n        static VARIABLEFLOWPRESSUREDEPENDANT: string;\n        static VARIABLEFLOWPRESSUREINDEPENDANT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAirTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static GRILLE: string;\n        static REGISTER: string;\n        static DIFFUSER: string;\n        static EYEBALL: string;\n        static IRIS: string;\n        static LINEARGRILLE: string;\n        static LINEARDIFFUSER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAirToAirHeatRecoveryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FIXEDPLATECOUNTERFLOWEXCHANGER: string;\n        static FIXEDPLATECROSSFLOWEXCHANGER: string;\n        static FIXEDPLATEPARALLELFLOWEXCHANGER: string;\n        static ROTARYWHEEL: string;\n        static RUNAROUNDCOILLOOP: string;\n        static HEATPIPE: string;\n        static TWINTOWERENTHALPYRECOVERYLOOPS: string;\n        static THERMOSIPHONSEALEDTUBEHEATEXCHANGERS: string;\n        static THERMOSIPHONCOILTYPEHEATEXCHANGERS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAlarmTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BELL: string;\n        static BREAKGLASSBUTTON: string;\n        static LIGHT: string;\n        static MANUALPULLBOX: string;\n        static SIREN: string;\n        static WHISTLE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAnalysisModelTypeEnum {\n        value: string;\n        constructor(v: string);\n        static IN_PLANE_LOADING_2D: string;\n        static OUT_PLANE_LOADING_2D: string;\n        static LOADING_3D: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAnalysisTheoryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FIRST_ORDER_THEORY: string;\n        static SECOND_ORDER_THEORY: string;\n        static THIRD_ORDER_THEORY: string;\n        static FULL_NONLINEAR_THEORY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcArithmeticOperatorEnum {\n        value: string;\n        constructor(v: string);\n        static ADD: string;\n        static DIVIDE: string;\n        static MULTIPLY: string;\n        static SUBTRACT: string;\n    }\n    class IfcAssemblyPlaceEnum {\n        value: string;\n        constructor(v: string);\n        static SITE: string;\n        static FACTORY: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBSplineCurveForm {\n        value: string;\n        constructor(v: string);\n        static POLYLINE_FORM: string;\n        static CIRCULAR_ARC: string;\n        static ELLIPTIC_ARC: string;\n        static PARABOLIC_ARC: string;\n        static HYPERBOLIC_ARC: string;\n        static UNSPECIFIED: string;\n    }\n    class IfcBeamTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEAM: string;\n        static JOIST: string;\n        static LINTEL: string;\n        static T_BEAM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBenchmarkEnum {\n        value: string;\n        constructor(v: string);\n        static GREATERTHAN: string;\n        static GREATERTHANOREQUALTO: string;\n        static LESSTHAN: string;\n        static LESSTHANOREQUALTO: string;\n        static EQUALTO: string;\n        static NOTEQUALTO: string;\n    }\n    class IfcBoilerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static WATER: string;\n        static STEAM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBooleanOperator {\n        value: string;\n        constructor(v: string);\n        static UNION: string;\n        static INTERSECTION: string;\n        static DIFFERENCE: string;\n    }\n    class IfcBuildingElementProxyTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCableCarrierFittingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEND: string;\n        static CROSS: string;\n        static REDUCER: string;\n        static TEE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCableCarrierSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CABLELADDERSEGMENT: string;\n        static CABLETRAYSEGMENT: string;\n        static CABLETRUNKINGSEGMENT: string;\n        static CONDUITSEGMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCableSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CABLESEGMENT: string;\n        static CONDUCTORSEGMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcChangeActionEnum {\n        value: string;\n        constructor(v: string);\n        static NOCHANGE: string;\n        static MODIFIED: string;\n        static ADDED: string;\n        static DELETED: string;\n        static MODIFIEDADDED: string;\n        static MODIFIEDDELETED: string;\n    }\n    class IfcChillerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRCOOLED: string;\n        static WATERCOOLED: string;\n        static HEATRECOVERY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCoilTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DXCOOLINGCOIL: string;\n        static WATERCOOLINGCOIL: string;\n        static STEAMHEATINGCOIL: string;\n        static WATERHEATINGCOIL: string;\n        static ELECTRICHEATINGCOIL: string;\n        static GASHEATINGCOIL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcColumnTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COLUMN: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCompressorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DYNAMIC: string;\n        static RECIPROCATING: string;\n        static ROTARY: string;\n        static SCROLL: string;\n        static TROCHOIDAL: string;\n        static SINGLESTAGE: string;\n        static BOOSTER: string;\n        static OPENTYPE: string;\n        static HERMETIC: string;\n        static SEMIHERMETIC: string;\n        static WELDEDSHELLHERMETIC: string;\n        static ROLLINGPISTON: string;\n        static ROTARYVANE: string;\n        static SINGLESCREW: string;\n        static TWINSCREW: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCondenserTypeEnum {\n        value: string;\n        constructor(v: string);\n        static WATERCOOLEDSHELLTUBE: string;\n        static WATERCOOLEDSHELLCOIL: string;\n        static WATERCOOLEDTUBEINTUBE: string;\n        static WATERCOOLEDBRAZEDPLATE: string;\n        static AIRCOOLED: string;\n        static EVAPORATIVECOOLED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcConnectionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ATPATH: string;\n        static ATSTART: string;\n        static ATEND: string;\n        static NOTDEFINED: string;\n    }\n    class IfcConstraintEnum {\n        value: string;\n        constructor(v: string);\n        static HARD: string;\n        static SOFT: string;\n        static ADVISORY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcControllerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLOATING: string;\n        static PROPORTIONAL: string;\n        static PROPORTIONALINTEGRAL: string;\n        static PROPORTIONALINTEGRALDERIVATIVE: string;\n        static TIMEDTWOPOSITION: string;\n        static TWOPOSITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCooledBeamTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACTIVE: string;\n        static PASSIVE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCoolingTowerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static NATURALDRAFT: string;\n        static MECHANICALINDUCEDDRAFT: string;\n        static MECHANICALFORCEDDRAFT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCostScheduleTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BUDGET: string;\n        static COSTPLAN: string;\n        static ESTIMATE: string;\n        static TENDER: string;\n        static PRICEDBILLOFQUANTITIES: string;\n        static UNPRICEDBILLOFQUANTITIES: string;\n        static SCHEDULEOFRATES: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCoveringTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CEILING: string;\n        static FLOORING: string;\n        static CLADDING: string;\n        static ROOFING: string;\n        static INSULATION: string;\n        static MEMBRANE: string;\n        static SLEEVING: string;\n        static WRAPPING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCurrencyEnum {\n        value: string;\n        constructor(v: string);\n        static AED: string;\n        static AES: string;\n        static ATS: string;\n        static AUD: string;\n        static BBD: string;\n        static BEG: string;\n        static BGL: string;\n        static BHD: string;\n        static BMD: string;\n        static BND: string;\n        static BRL: string;\n        static BSD: string;\n        static BWP: string;\n        static BZD: string;\n        static CAD: string;\n        static CBD: string;\n        static CHF: string;\n        static CLP: string;\n        static CNY: string;\n        static CYS: string;\n        static CZK: string;\n        static DDP: string;\n        static DEM: string;\n        static DKK: string;\n        static EGL: string;\n        static EST: string;\n        static EUR: string;\n        static FAK: string;\n        static FIM: string;\n        static FJD: string;\n        static FKP: string;\n        static FRF: string;\n        static GBP: string;\n        static GIP: string;\n        static GMD: string;\n        static GRX: string;\n        static HKD: string;\n        static HUF: string;\n        static ICK: string;\n        static IDR: string;\n        static ILS: string;\n        static INR: string;\n        static IRP: string;\n        static ITL: string;\n        static JMD: string;\n        static JOD: string;\n        static JPY: string;\n        static KES: string;\n        static KRW: string;\n        static KWD: string;\n        static KYD: string;\n        static LKR: string;\n        static LUF: string;\n        static MTL: string;\n        static MUR: string;\n        static MXN: string;\n        static MYR: string;\n        static NLG: string;\n        static NZD: string;\n        static OMR: string;\n        static PGK: string;\n        static PHP: string;\n        static PKR: string;\n        static PLN: string;\n        static PTN: string;\n        static QAR: string;\n        static RUR: string;\n        static SAR: string;\n        static SCR: string;\n        static SEK: string;\n        static SGD: string;\n        static SKP: string;\n        static THB: string;\n        static TRL: string;\n        static TTD: string;\n        static TWD: string;\n        static USD: string;\n        static VEB: string;\n        static VND: string;\n        static XEU: string;\n        static ZAR: string;\n        static ZWD: string;\n        static NOK: string;\n    }\n    class IfcCurtainWallTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDamperTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONTROLDAMPER: string;\n        static FIREDAMPER: string;\n        static SMOKEDAMPER: string;\n        static FIRESMOKEDAMPER: string;\n        static BACKDRAFTDAMPER: string;\n        static RELIEFDAMPER: string;\n        static BLASTDAMPER: string;\n        static GRAVITYDAMPER: string;\n        static GRAVITYRELIEFDAMPER: string;\n        static BALANCINGDAMPER: string;\n        static FUMEHOODEXHAUST: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDataOriginEnum {\n        value: string;\n        constructor(v: string);\n        static MEASURED: string;\n        static PREDICTED: string;\n        static SIMULATED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDerivedUnitEnum {\n        value: string;\n        constructor(v: string);\n        static ANGULARVELOCITYUNIT: string;\n        static COMPOUNDPLANEANGLEUNIT: string;\n        static DYNAMICVISCOSITYUNIT: string;\n        static HEATFLUXDENSITYUNIT: string;\n        static INTEGERCOUNTRATEUNIT: string;\n        static ISOTHERMALMOISTURECAPACITYUNIT: string;\n        static KINEMATICVISCOSITYUNIT: string;\n        static LINEARVELOCITYUNIT: string;\n        static MASSDENSITYUNIT: string;\n        static MASSFLOWRATEUNIT: string;\n        static MOISTUREDIFFUSIVITYUNIT: string;\n        static MOLECULARWEIGHTUNIT: string;\n        static SPECIFICHEATCAPACITYUNIT: string;\n        static THERMALADMITTANCEUNIT: string;\n        static THERMALCONDUCTANCEUNIT: string;\n        static THERMALRESISTANCEUNIT: string;\n        static THERMALTRANSMITTANCEUNIT: string;\n        static VAPORPERMEABILITYUNIT: string;\n        static VOLUMETRICFLOWRATEUNIT: string;\n        static ROTATIONALFREQUENCYUNIT: string;\n        static TORQUEUNIT: string;\n        static MOMENTOFINERTIAUNIT: string;\n        static LINEARMOMENTUNIT: string;\n        static LINEARFORCEUNIT: string;\n        static PLANARFORCEUNIT: string;\n        static MODULUSOFELASTICITYUNIT: string;\n        static SHEARMODULUSUNIT: string;\n        static LINEARSTIFFNESSUNIT: string;\n        static ROTATIONALSTIFFNESSUNIT: string;\n        static MODULUSOFSUBGRADEREACTIONUNIT: string;\n        static ACCELERATIONUNIT: string;\n        static CURVATUREUNIT: string;\n        static HEATINGVALUEUNIT: string;\n        static IONCONCENTRATIONUNIT: string;\n        static LUMINOUSINTENSITYDISTRIBUTIONUNIT: string;\n        static MASSPERLENGTHUNIT: string;\n        static MODULUSOFLINEARSUBGRADEREACTIONUNIT: string;\n        static MODULUSOFROTATIONALSUBGRADEREACTIONUNIT: string;\n        static PHUNIT: string;\n        static ROTATIONALMASSUNIT: string;\n        static SECTIONAREAINTEGRALUNIT: string;\n        static SECTIONMODULUSUNIT: string;\n        static SOUNDPOWERUNIT: string;\n        static SOUNDPRESSUREUNIT: string;\n        static TEMPERATUREGRADIENTUNIT: string;\n        static THERMALEXPANSIONCOEFFICIENTUNIT: string;\n        static WARPINGCONSTANTUNIT: string;\n        static WARPINGMOMENTUNIT: string;\n        static USERDEFINED: string;\n    }\n    class IfcDimensionExtentUsage {\n        value: string;\n        constructor(v: string);\n        static ORIGIN: string;\n        static TARGET: string;\n    }\n    class IfcDirectionSenseEnum {\n        value: string;\n        constructor(v: string);\n        static POSITIVE: string;\n        static NEGATIVE: string;\n    }\n    class IfcDistributionChamberElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FORMEDDUCT: string;\n        static INSPECTIONCHAMBER: string;\n        static INSPECTIONPIT: string;\n        static MANHOLE: string;\n        static METERCHAMBER: string;\n        static SUMP: string;\n        static TRENCH: string;\n        static VALVECHAMBER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDocumentConfidentialityEnum {\n        value: string;\n        constructor(v: string);\n        static PUBLIC: string;\n        static RESTRICTED: string;\n        static CONFIDENTIAL: string;\n        static PERSONAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDocumentStatusEnum {\n        value: string;\n        constructor(v: string);\n        static DRAFT: string;\n        static FINALDRAFT: string;\n        static FINAL: string;\n        static REVISION: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorPanelOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SWINGING: string;\n        static DOUBLE_ACTING: string;\n        static SLIDING: string;\n        static FOLDING: string;\n        static REVOLVING: string;\n        static ROLLINGUP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorPanelPositionEnum {\n        value: string;\n        constructor(v: string);\n        static LEFT: string;\n        static MIDDLE: string;\n        static RIGHT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorStyleConstructionEnum {\n        value: string;\n        constructor(v: string);\n        static ALUMINIUM: string;\n        static HIGH_GRADE_STEEL: string;\n        static STEEL: string;\n        static WOOD: string;\n        static ALUMINIUM_WOOD: string;\n        static ALUMINIUM_PLASTIC: string;\n        static PLASTIC: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorStyleOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SINGLE_SWING_LEFT: string;\n        static SINGLE_SWING_RIGHT: string;\n        static DOUBLE_DOOR_SINGLE_SWING: string;\n        static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT: string;\n        static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT: string;\n        static DOUBLE_SWING_LEFT: string;\n        static DOUBLE_SWING_RIGHT: string;\n        static DOUBLE_DOOR_DOUBLE_SWING: string;\n        static SLIDING_TO_LEFT: string;\n        static SLIDING_TO_RIGHT: string;\n        static DOUBLE_DOOR_SLIDING: string;\n        static FOLDING_TO_LEFT: string;\n        static FOLDING_TO_RIGHT: string;\n        static DOUBLE_DOOR_FOLDING: string;\n        static REVOLVING: string;\n        static ROLLINGUP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDuctFittingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEND: string;\n        static CONNECTOR: string;\n        static ENTRY: string;\n        static EXIT: string;\n        static JUNCTION: string;\n        static OBSTRUCTION: string;\n        static TRANSITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDuctSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static RIGIDSEGMENT: string;\n        static FLEXIBLESEGMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDuctSilencerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLATOVAL: string;\n        static RECTANGULAR: string;\n        static ROUND: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricApplianceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COMPUTER: string;\n        static DIRECTWATERHEATER: string;\n        static DISHWASHER: string;\n        static ELECTRICCOOKER: string;\n        static ELECTRICHEATER: string;\n        static FACSIMILE: string;\n        static FREESTANDINGFAN: string;\n        static FREEZER: string;\n        static FRIDGE_FREEZER: string;\n        static HANDDRYER: string;\n        static INDIRECTWATERHEATER: string;\n        static MICROWAVE: string;\n        static PHOTOCOPIER: string;\n        static PRINTER: string;\n        static REFRIGERATOR: string;\n        static RADIANTHEATER: string;\n        static SCANNER: string;\n        static TELEPHONE: string;\n        static TUMBLEDRYER: string;\n        static TV: string;\n        static VENDINGMACHINE: string;\n        static WASHINGMACHINE: string;\n        static WATERHEATER: string;\n        static WATERCOOLER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricCurrentEnum {\n        value: string;\n        constructor(v: string);\n        static ALTERNATING: string;\n        static DIRECT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricDistributionPointFunctionEnum {\n        value: string;\n        constructor(v: string);\n        static ALARMPANEL: string;\n        static CONSUMERUNIT: string;\n        static CONTROLPANEL: string;\n        static DISTRIBUTIONBOARD: string;\n        static GASDETECTORPANEL: string;\n        static INDICATORPANEL: string;\n        static MIMICPANEL: string;\n        static MOTORCONTROLCENTRE: string;\n        static SWITCHBOARD: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricFlowStorageDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BATTERY: string;\n        static CAPACITORBANK: string;\n        static HARMONICFILTER: string;\n        static INDUCTORBANK: string;\n        static UPS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricGeneratorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricHeaterTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ELECTRICPOINTHEATER: string;\n        static ELECTRICCABLEHEATER: string;\n        static ELECTRICMATHEATER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricMotorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DC: string;\n        static INDUCTION: string;\n        static POLYPHASE: string;\n        static RELUCTANCESYNCHRONOUS: string;\n        static SYNCHRONOUS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricTimeControlTypeEnum {\n        value: string;\n        constructor(v: string);\n        static TIMECLOCK: string;\n        static TIMEDELAY: string;\n        static RELAY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElementAssemblyTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACCESSORY_ASSEMBLY: string;\n        static ARCH: string;\n        static BEAM_GRID: string;\n        static BRACED_FRAME: string;\n        static GIRDER: string;\n        static REINFORCEMENT_UNIT: string;\n        static RIGID_FRAME: string;\n        static SLAB_FIELD: string;\n        static TRUSS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElementCompositionEnum {\n        value: string;\n        constructor(v: string);\n        static COMPLEX: string;\n        static ELEMENT: string;\n        static PARTIAL: string;\n    }\n    class IfcEnergySequenceEnum {\n        value: string;\n        constructor(v: string);\n        static PRIMARY: string;\n        static SECONDARY: string;\n        static TERTIARY: string;\n        static AUXILIARY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcEnvironmentalImpactCategoryEnum {\n        value: string;\n        constructor(v: string);\n        static COMBINEDVALUE: string;\n        static DISPOSAL: string;\n        static EXTRACTION: string;\n        static INSTALLATION: string;\n        static MANUFACTURE: string;\n        static TRANSPORTATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcEvaporativeCoolerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER: string;\n        static DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER: string;\n        static DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER: string;\n        static DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER: string;\n        static DIRECTEVAPORATIVEAIRWASHER: string;\n        static INDIRECTEVAPORATIVEPACKAGEAIRCOOLER: string;\n        static INDIRECTEVAPORATIVEWETCOIL: string;\n        static INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER: string;\n        static INDIRECTDIRECTCOMBINATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcEvaporatorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DIRECTEXPANSIONSHELLANDTUBE: string;\n        static DIRECTEXPANSIONTUBEINTUBE: string;\n        static DIRECTEXPANSIONBRAZEDPLATE: string;\n        static FLOODEDSHELLANDTUBE: string;\n        static SHELLANDCOIL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFanTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CENTRIFUGALFORWARDCURVED: string;\n        static CENTRIFUGALRADIAL: string;\n        static CENTRIFUGALBACKWARDINCLINEDCURVED: string;\n        static CENTRIFUGALAIRFOIL: string;\n        static TUBEAXIAL: string;\n        static VANEAXIAL: string;\n        static PROPELLORAXIAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFilterTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRPARTICLEFILTER: string;\n        static ODORFILTER: string;\n        static OILFILTER: string;\n        static STRAINER: string;\n        static WATERFILTER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFireSuppressionTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BREECHINGINLET: string;\n        static FIREHYDRANT: string;\n        static HOSEREEL: string;\n        static SPRINKLER: string;\n        static SPRINKLERDEFLECTOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFlowDirectionEnum {\n        value: string;\n        constructor(v: string);\n        static SOURCE: string;\n        static SINK: string;\n        static SOURCEANDSINK: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFlowInstrumentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PRESSUREGAUGE: string;\n        static THERMOMETER: string;\n        static AMMETER: string;\n        static FREQUENCYMETER: string;\n        static POWERFACTORMETER: string;\n        static PHASEANGLEMETER: string;\n        static VOLTMETER_PEAK: string;\n        static VOLTMETER_RMS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFlowMeterTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ELECTRICMETER: string;\n        static ENERGYMETER: string;\n        static FLOWMETER: string;\n        static GASMETER: string;\n        static OILMETER: string;\n        static WATERMETER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFootingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FOOTING_BEAM: string;\n        static PAD_FOOTING: string;\n        static PILE_CAP: string;\n        static STRIP_FOOTING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcGasTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static GASAPPLIANCE: string;\n        static GASBOOSTER: string;\n        static GASBURNER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcGeometricProjectionEnum {\n        value: string;\n        constructor(v: string);\n        static GRAPH_VIEW: string;\n        static SKETCH_VIEW: string;\n        static MODEL_VIEW: string;\n        static PLAN_VIEW: string;\n        static REFLECTED_PLAN_VIEW: string;\n        static SECTION_VIEW: string;\n        static ELEVATION_VIEW: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcGlobalOrLocalEnum {\n        value: string;\n        constructor(v: string);\n        static GLOBAL_COORDS: string;\n        static LOCAL_COORDS: string;\n    }\n    class IfcHeatExchangerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PLATE: string;\n        static SHELLANDTUBE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcHumidifierTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STEAMINJECTION: string;\n        static ADIABATICAIRWASHER: string;\n        static ADIABATICPAN: string;\n        static ADIABATICWETTEDELEMENT: string;\n        static ADIABATICATOMIZING: string;\n        static ADIABATICULTRASONIC: string;\n        static ADIABATICRIGIDMEDIA: string;\n        static ADIABATICCOMPRESSEDAIRNOZZLE: string;\n        static ASSISTEDELECTRIC: string;\n        static ASSISTEDNATURALGAS: string;\n        static ASSISTEDPROPANE: string;\n        static ASSISTEDBUTANE: string;\n        static ASSISTEDSTEAM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcInternalOrExternalEnum {\n        value: string;\n        constructor(v: string);\n        static INTERNAL: string;\n        static EXTERNAL: string;\n        static NOTDEFINED: string;\n    }\n    class IfcInventoryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ASSETINVENTORY: string;\n        static SPACEINVENTORY: string;\n        static FURNITUREINVENTORY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcJunctionBoxTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLampTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COMPACTFLUORESCENT: string;\n        static FLUORESCENT: string;\n        static HIGHPRESSUREMERCURY: string;\n        static HIGHPRESSURESODIUM: string;\n        static METALHALIDE: string;\n        static TUNGSTENFILAMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLayerSetDirectionEnum {\n        value: string;\n        constructor(v: string);\n        static AXIS1: string;\n        static AXIS2: string;\n        static AXIS3: string;\n    }\n    class IfcLightDistributionCurveEnum {\n        value: string;\n        constructor(v: string);\n        static TYPE_A: string;\n        static TYPE_B: string;\n        static TYPE_C: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLightEmissionSourceEnum {\n        value: string;\n        constructor(v: string);\n        static COMPACTFLUORESCENT: string;\n        static FLUORESCENT: string;\n        static HIGHPRESSUREMERCURY: string;\n        static HIGHPRESSURESODIUM: string;\n        static LIGHTEMITTINGDIODE: string;\n        static LOWPRESSURESODIUM: string;\n        static LOWVOLTAGEHALOGEN: string;\n        static MAINVOLTAGEHALOGEN: string;\n        static METALHALIDE: string;\n        static TUNGSTENFILAMENT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLightFixtureTypeEnum {\n        value: string;\n        constructor(v: string);\n        static POINTSOURCE: string;\n        static DIRECTIONSOURCE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLoadGroupTypeEnum {\n        value: string;\n        constructor(v: string);\n        static LOAD_GROUP: string;\n        static LOAD_CASE: string;\n        static LOAD_COMBINATION_GROUP: string;\n        static LOAD_COMBINATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLogicalOperatorEnum {\n        value: string;\n        constructor(v: string);\n        static LOGICALAND: string;\n        static LOGICALOR: string;\n    }\n    class IfcMemberTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BRACE: string;\n        static CHORD: string;\n        static COLLAR: string;\n        static MEMBER: string;\n        static MULLION: string;\n        static PLATE: string;\n        static POST: string;\n        static PURLIN: string;\n        static RAFTER: string;\n        static STRINGER: string;\n        static STRUT: string;\n        static STUD: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcMotorConnectionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BELTDRIVE: string;\n        static COUPLING: string;\n        static DIRECTDRIVE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcNullStyle {\n        value: string;\n        constructor(v: string);\n        static NULL: string;\n    }\n    class IfcObjectTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PRODUCT: string;\n        static PROCESS: string;\n        static CONTROL: string;\n        static RESOURCE: string;\n        static ACTOR: string;\n        static GROUP: string;\n        static PROJECT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcObjectiveEnum {\n        value: string;\n        constructor(v: string);\n        static CODECOMPLIANCE: string;\n        static DESIGNINTENT: string;\n        static HEALTHANDSAFETY: string;\n        static REQUIREMENT: string;\n        static SPECIFICATION: string;\n        static TRIGGERCONDITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcOccupantTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ASSIGNEE: string;\n        static ASSIGNOR: string;\n        static LESSEE: string;\n        static LESSOR: string;\n        static LETTINGAGENT: string;\n        static OWNER: string;\n        static TENANT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcOutletTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AUDIOVISUALOUTLET: string;\n        static COMMUNICATIONSOUTLET: string;\n        static POWEROUTLET: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPermeableCoveringOperationEnum {\n        value: string;\n        constructor(v: string);\n        static GRILL: string;\n        static LOUVER: string;\n        static SCREEN: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPhysicalOrVirtualEnum {\n        value: string;\n        constructor(v: string);\n        static PHYSICAL: string;\n        static VIRTUAL: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPileConstructionEnum {\n        value: string;\n        constructor(v: string);\n        static CAST_IN_PLACE: string;\n        static COMPOSITE: string;\n        static PRECAST_CONCRETE: string;\n        static PREFAB_STEEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPileTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COHESION: string;\n        static FRICTION: string;\n        static SUPPORT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPipeFittingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEND: string;\n        static CONNECTOR: string;\n        static ENTRY: string;\n        static EXIT: string;\n        static JUNCTION: string;\n        static OBSTRUCTION: string;\n        static TRANSITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPipeSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLEXIBLESEGMENT: string;\n        static RIGIDSEGMENT: string;\n        static GUTTER: string;\n        static SPOOL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPlateTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CURTAIN_PANEL: string;\n        static SHEET: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProcedureTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ADVICE_CAUTION: string;\n        static ADVICE_NOTE: string;\n        static ADVICE_WARNING: string;\n        static CALIBRATION: string;\n        static DIAGNOSTIC: string;\n        static SHUTDOWN: string;\n        static STARTUP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProfileTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CURVE: string;\n        static AREA: string;\n    }\n    class IfcProjectOrderRecordTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CHANGE: string;\n        static MAINTENANCE: string;\n        static MOVE: string;\n        static PURCHASE: string;\n        static WORK: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProjectOrderTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CHANGEORDER: string;\n        static MAINTENANCEWORKORDER: string;\n        static MOVEORDER: string;\n        static PURCHASEORDER: string;\n        static WORKORDER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProjectedOrTrueLengthEnum {\n        value: string;\n        constructor(v: string);\n        static PROJECTED_LENGTH: string;\n        static TRUE_LENGTH: string;\n    }\n    class IfcPropertySourceEnum {\n        value: string;\n        constructor(v: string);\n        static DESIGN: string;\n        static DESIGNMAXIMUM: string;\n        static DESIGNMINIMUM: string;\n        static SIMULATED: string;\n        static ASBUILT: string;\n        static COMMISSIONING: string;\n        static MEASURED: string;\n        static USERDEFINED: string;\n        static NOTKNOWN: string;\n    }\n    class IfcProtectiveDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FUSEDISCONNECTOR: string;\n        static CIRCUITBREAKER: string;\n        static EARTHFAILUREDEVICE: string;\n        static RESIDUALCURRENTCIRCUITBREAKER: string;\n        static RESIDUALCURRENTSWITCH: string;\n        static VARISTOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPumpTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CIRCULATOR: string;\n        static ENDSUCTION: string;\n        static SPLITCASE: string;\n        static VERTICALINLINE: string;\n        static VERTICALTURBINE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRailingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static HANDRAIL: string;\n        static GUARDRAIL: string;\n        static BALUSTRADE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRampFlightTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT: string;\n        static SPIRAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRampTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT_RUN_RAMP: string;\n        static TWO_STRAIGHT_RUN_RAMP: string;\n        static QUARTER_TURN_RAMP: string;\n        static TWO_QUARTER_TURN_RAMP: string;\n        static HALF_TURN_RAMP: string;\n        static SPIRAL_RAMP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcReflectanceMethodEnum {\n        value: string;\n        constructor(v: string);\n        static BLINN: string;\n        static FLAT: string;\n        static GLASS: string;\n        static MATT: string;\n        static METAL: string;\n        static MIRROR: string;\n        static PHONG: string;\n        static PLASTIC: string;\n        static STRAUSS: string;\n        static NOTDEFINED: string;\n    }\n    class IfcReinforcingBarRoleEnum {\n        value: string;\n        constructor(v: string);\n        static MAIN: string;\n        static SHEAR: string;\n        static LIGATURE: string;\n        static STUD: string;\n        static PUNCHING: string;\n        static EDGE: string;\n        static RING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcReinforcingBarSurfaceEnum {\n        value: string;\n        constructor(v: string);\n        static PLAIN: string;\n        static TEXTURED: string;\n    }\n    class IfcResourceConsumptionEnum {\n        value: string;\n        constructor(v: string);\n        static CONSUMED: string;\n        static PARTIALLYCONSUMED: string;\n        static NOTCONSUMED: string;\n        static OCCUPIED: string;\n        static PARTIALLYOCCUPIED: string;\n        static NOTOCCUPIED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRibPlateDirectionEnum {\n        value: string;\n        constructor(v: string);\n        static DIRECTION_X: string;\n        static DIRECTION_Y: string;\n    }\n    class IfcRoleEnum {\n        value: string;\n        constructor(v: string);\n        static SUPPLIER: string;\n        static MANUFACTURER: string;\n        static CONTRACTOR: string;\n        static SUBCONTRACTOR: string;\n        static ARCHITECT: string;\n        static STRUCTURALENGINEER: string;\n        static COSTENGINEER: string;\n        static CLIENT: string;\n        static BUILDINGOWNER: string;\n        static BUILDINGOPERATOR: string;\n        static MECHANICALENGINEER: string;\n        static ELECTRICALENGINEER: string;\n        static PROJECTMANAGER: string;\n        static FACILITIESMANAGER: string;\n        static CIVILENGINEER: string;\n        static COMISSIONINGENGINEER: string;\n        static ENGINEER: string;\n        static OWNER: string;\n        static CONSULTANT: string;\n        static CONSTRUCTIONMANAGER: string;\n        static FIELDCONSTRUCTIONMANAGER: string;\n        static RESELLER: string;\n        static USERDEFINED: string;\n    }\n    class IfcRoofTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLAT_ROOF: string;\n        static SHED_ROOF: string;\n        static GABLE_ROOF: string;\n        static HIP_ROOF: string;\n        static HIPPED_GABLE_ROOF: string;\n        static GAMBREL_ROOF: string;\n        static MANSARD_ROOF: string;\n        static BARREL_ROOF: string;\n        static RAINBOW_ROOF: string;\n        static BUTTERFLY_ROOF: string;\n        static PAVILION_ROOF: string;\n        static DOME_ROOF: string;\n        static FREEFORM: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSIPrefix {\n        value: string;\n        constructor(v: string);\n        static EXA: string;\n        static PETA: string;\n        static TERA: string;\n        static GIGA: string;\n        static MEGA: string;\n        static KILO: string;\n        static HECTO: string;\n        static DECA: string;\n        static DECI: string;\n        static CENTI: string;\n        static MILLI: string;\n        static MICRO: string;\n        static NANO: string;\n        static PICO: string;\n        static FEMTO: string;\n        static ATTO: string;\n    }\n    class IfcSIUnitName {\n        value: string;\n        constructor(v: string);\n        static AMPERE: string;\n        static BECQUEREL: string;\n        static CANDELA: string;\n        static COULOMB: string;\n        static CUBIC_METRE: string;\n        static DEGREE_CELSIUS: string;\n        static FARAD: string;\n        static GRAM: string;\n        static GRAY: string;\n        static HENRY: string;\n        static HERTZ: string;\n        static JOULE: string;\n        static KELVIN: string;\n        static LUMEN: string;\n        static LUX: string;\n        static METRE: string;\n        static MOLE: string;\n        static NEWTON: string;\n        static OHM: string;\n        static PASCAL: string;\n        static RADIAN: string;\n        static SECOND: string;\n        static SIEMENS: string;\n        static SIEVERT: string;\n        static SQUARE_METRE: string;\n        static STERADIAN: string;\n        static TESLA: string;\n        static VOLT: string;\n        static WATT: string;\n        static WEBER: string;\n    }\n    class IfcSanitaryTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BATH: string;\n        static BIDET: string;\n        static CISTERN: string;\n        static SHOWER: string;\n        static SINK: string;\n        static SANITARYFOUNTAIN: string;\n        static TOILETPAN: string;\n        static URINAL: string;\n        static WASHHANDBASIN: string;\n        static WCSEAT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSectionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static UNIFORM: string;\n        static TAPERED: string;\n    }\n    class IfcSensorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CO2SENSOR: string;\n        static FIRESENSOR: string;\n        static FLOWSENSOR: string;\n        static GASSENSOR: string;\n        static HEATSENSOR: string;\n        static HUMIDITYSENSOR: string;\n        static LIGHTSENSOR: string;\n        static MOISTURESENSOR: string;\n        static MOVEMENTSENSOR: string;\n        static PRESSURESENSOR: string;\n        static SMOKESENSOR: string;\n        static SOUNDSENSOR: string;\n        static TEMPERATURESENSOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSequenceEnum {\n        value: string;\n        constructor(v: string);\n        static START_START: string;\n        static START_FINISH: string;\n        static FINISH_START: string;\n        static FINISH_FINISH: string;\n        static NOTDEFINED: string;\n    }\n    class IfcServiceLifeFactorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static A_QUALITYOFCOMPONENTS: string;\n        static B_DESIGNLEVEL: string;\n        static C_WORKEXECUTIONLEVEL: string;\n        static D_INDOORENVIRONMENT: string;\n        static E_OUTDOORENVIRONMENT: string;\n        static F_INUSECONDITIONS: string;\n        static G_MAINTENANCELEVEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcServiceLifeTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACTUALSERVICELIFE: string;\n        static EXPECTEDSERVICELIFE: string;\n        static OPTIMISTICREFERENCESERVICELIFE: string;\n        static PESSIMISTICREFERENCESERVICELIFE: string;\n        static REFERENCESERVICELIFE: string;\n    }\n    class IfcSlabTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLOOR: string;\n        static ROOF: string;\n        static LANDING: string;\n        static BASESLAB: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSoundScaleEnum {\n        value: string;\n        constructor(v: string);\n        static DBA: string;\n        static DBB: string;\n        static DBC: string;\n        static NC: string;\n        static NR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSpaceHeaterTypeEnum {\n        value: string;\n        constructor(v: string);\n        static SECTIONALRADIATOR: string;\n        static PANELRADIATOR: string;\n        static TUBULARRADIATOR: string;\n        static CONVECTOR: string;\n        static BASEBOARDHEATER: string;\n        static FINNEDTUBEUNIT: string;\n        static UNITHEATER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSpaceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStackTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BIRDCAGE: string;\n        static COWL: string;\n        static RAINWATERHOPPER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStairFlightTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT: string;\n        static WINDER: string;\n        static SPIRAL: string;\n        static CURVED: string;\n        static FREEFORM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStairTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT_RUN_STAIR: string;\n        static TWO_STRAIGHT_RUN_STAIR: string;\n        static QUARTER_WINDING_STAIR: string;\n        static QUARTER_TURN_STAIR: string;\n        static HALF_WINDING_STAIR: string;\n        static HALF_TURN_STAIR: string;\n        static TWO_QUARTER_WINDING_STAIR: string;\n        static TWO_QUARTER_TURN_STAIR: string;\n        static THREE_QUARTER_WINDING_STAIR: string;\n        static THREE_QUARTER_TURN_STAIR: string;\n        static SPIRAL_STAIR: string;\n        static DOUBLE_RETURN_STAIR: string;\n        static CURVED_RUN_STAIR: string;\n        static TWO_CURVED_RUN_STAIR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStateEnum {\n        value: string;\n        constructor(v: string);\n        static READWRITE: string;\n        static READONLY: string;\n        static LOCKED: string;\n        static READWRITELOCKED: string;\n        static READONLYLOCKED: string;\n    }\n    class IfcStructuralCurveTypeEnum {\n        value: string;\n        constructor(v: string);\n        static RIGID_JOINED_MEMBER: string;\n        static PIN_JOINED_MEMBER: string;\n        static CABLE: string;\n        static TENSION_MEMBER: string;\n        static COMPRESSION_MEMBER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStructuralSurfaceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BENDING_ELEMENT: string;\n        static MEMBRANE_ELEMENT: string;\n        static SHELL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSurfaceSide {\n        value: string;\n        constructor(v: string);\n        static POSITIVE: string;\n        static NEGATIVE: string;\n        static BOTH: string;\n    }\n    class IfcSurfaceTextureEnum {\n        value: string;\n        constructor(v: string);\n        static BUMP: string;\n        static OPACITY: string;\n        static REFLECTION: string;\n        static SELFILLUMINATION: string;\n        static SHININESS: string;\n        static SPECULAR: string;\n        static TEXTURE: string;\n        static TRANSPARENCYMAP: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSwitchingDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONTACTOR: string;\n        static EMERGENCYSTOP: string;\n        static STARTER: string;\n        static SWITCHDISCONNECTOR: string;\n        static TOGGLESWITCH: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTankTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PREFORMED: string;\n        static SECTIONAL: string;\n        static EXPANSION: string;\n        static PRESSUREVESSEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTendonTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAND: string;\n        static WIRE: string;\n        static BAR: string;\n        static COATED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTextPath {\n        value: string;\n        constructor(v: string);\n        static LEFT: string;\n        static RIGHT: string;\n        static UP: string;\n        static DOWN: string;\n    }\n    class IfcThermalLoadSourceEnum {\n        value: string;\n        constructor(v: string);\n        static PEOPLE: string;\n        static LIGHTING: string;\n        static EQUIPMENT: string;\n        static VENTILATIONINDOORAIR: string;\n        static VENTILATIONOUTSIDEAIR: string;\n        static RECIRCULATEDAIR: string;\n        static EXHAUSTAIR: string;\n        static AIREXCHANGERATE: string;\n        static DRYBULBTEMPERATURE: string;\n        static RELATIVEHUMIDITY: string;\n        static INFILTRATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcThermalLoadTypeEnum {\n        value: string;\n        constructor(v: string);\n        static SENSIBLE: string;\n        static LATENT: string;\n        static RADIANT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTimeSeriesDataTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONTINUOUS: string;\n        static DISCRETE: string;\n        static DISCRETEBINARY: string;\n        static PIECEWISEBINARY: string;\n        static PIECEWISECONSTANT: string;\n        static PIECEWISECONTINUOUS: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTimeSeriesScheduleTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ANNUAL: string;\n        static MONTHLY: string;\n        static WEEKLY: string;\n        static DAILY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTransformerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CURRENT: string;\n        static FREQUENCY: string;\n        static VOLTAGE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTransitionCode {\n        value: string;\n        constructor(v: string);\n        static DISCONTINUOUS: string;\n        static CONTINUOUS: string;\n        static CONTSAMEGRADIENT: string;\n        static CONTSAMEGRADIENTSAMECURVATURE: string;\n    }\n    class IfcTransportElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ELEVATOR: string;\n        static ESCALATOR: string;\n        static MOVINGWALKWAY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTrimmingPreference {\n        value: string;\n        constructor(v: string);\n        static CARTESIAN: string;\n        static PARAMETER: string;\n        static UNSPECIFIED: string;\n    }\n    class IfcTubeBundleTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FINNED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcUnitEnum {\n        value: string;\n        constructor(v: string);\n        static ABSORBEDDOSEUNIT: string;\n        static AMOUNTOFSUBSTANCEUNIT: string;\n        static AREAUNIT: string;\n        static DOSEEQUIVALENTUNIT: string;\n        static ELECTRICCAPACITANCEUNIT: string;\n        static ELECTRICCHARGEUNIT: string;\n        static ELECTRICCONDUCTANCEUNIT: string;\n        static ELECTRICCURRENTUNIT: string;\n        static ELECTRICRESISTANCEUNIT: string;\n        static ELECTRICVOLTAGEUNIT: string;\n        static ENERGYUNIT: string;\n        static FORCEUNIT: string;\n        static FREQUENCYUNIT: string;\n        static ILLUMINANCEUNIT: string;\n        static INDUCTANCEUNIT: string;\n        static LENGTHUNIT: string;\n        static LUMINOUSFLUXUNIT: string;\n        static LUMINOUSINTENSITYUNIT: string;\n        static MAGNETICFLUXDENSITYUNIT: string;\n        static MAGNETICFLUXUNIT: string;\n        static MASSUNIT: string;\n        static PLANEANGLEUNIT: string;\n        static POWERUNIT: string;\n        static PRESSUREUNIT: string;\n        static RADIOACTIVITYUNIT: string;\n        static SOLIDANGLEUNIT: string;\n        static THERMODYNAMICTEMPERATUREUNIT: string;\n        static TIMEUNIT: string;\n        static VOLUMEUNIT: string;\n        static USERDEFINED: string;\n    }\n    class IfcUnitaryEquipmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRHANDLER: string;\n        static AIRCONDITIONINGUNIT: string;\n        static SPLITSYSTEM: string;\n        static ROOFTOPUNIT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcValveTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRRELEASE: string;\n        static ANTIVACUUM: string;\n        static CHANGEOVER: string;\n        static CHECK: string;\n        static COMMISSIONING: string;\n        static DIVERTING: string;\n        static DRAWOFFCOCK: string;\n        static DOUBLECHECK: string;\n        static DOUBLEREGULATING: string;\n        static FAUCET: string;\n        static FLUSHING: string;\n        static GASCOCK: string;\n        static GASTAP: string;\n        static ISOLATING: string;\n        static MIXING: string;\n        static PRESSUREREDUCING: string;\n        static PRESSURERELIEF: string;\n        static REGULATING: string;\n        static SAFETYCUTOFF: string;\n        static STEAMTRAP: string;\n        static STOPCOCK: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcVibrationIsolatorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COMPRESSION: string;\n        static SPRING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWallTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STANDARD: string;\n        static POLYGONAL: string;\n        static SHEAR: string;\n        static ELEMENTEDWALL: string;\n        static PLUMBINGWALL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWasteTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLOORTRAP: string;\n        static FLOORWASTE: string;\n        static GULLYSUMP: string;\n        static GULLYTRAP: string;\n        static GREASEINTERCEPTOR: string;\n        static OILINTERCEPTOR: string;\n        static PETROLINTERCEPTOR: string;\n        static ROOFDRAIN: string;\n        static WASTEDISPOSALUNIT: string;\n        static WASTETRAP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowPanelOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SIDEHUNGRIGHTHAND: string;\n        static SIDEHUNGLEFTHAND: string;\n        static TILTANDTURNRIGHTHAND: string;\n        static TILTANDTURNLEFTHAND: string;\n        static TOPHUNG: string;\n        static BOTTOMHUNG: string;\n        static PIVOTHORIZONTAL: string;\n        static PIVOTVERTICAL: string;\n        static SLIDINGHORIZONTAL: string;\n        static SLIDINGVERTICAL: string;\n        static REMOVABLECASEMENT: string;\n        static FIXEDCASEMENT: string;\n        static OTHEROPERATION: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowPanelPositionEnum {\n        value: string;\n        constructor(v: string);\n        static LEFT: string;\n        static MIDDLE: string;\n        static RIGHT: string;\n        static BOTTOM: string;\n        static TOP: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowStyleConstructionEnum {\n        value: string;\n        constructor(v: string);\n        static ALUMINIUM: string;\n        static HIGH_GRADE_STEEL: string;\n        static STEEL: string;\n        static WOOD: string;\n        static ALUMINIUM_WOOD: string;\n        static PLASTIC: string;\n        static OTHER_CONSTRUCTION: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowStyleOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SINGLE_PANEL: string;\n        static DOUBLE_PANEL_VERTICAL: string;\n        static DOUBLE_PANEL_HORIZONTAL: string;\n        static TRIPLE_PANEL_VERTICAL: string;\n        static TRIPLE_PANEL_BOTTOM: string;\n        static TRIPLE_PANEL_TOP: string;\n        static TRIPLE_PANEL_LEFT: string;\n        static TRIPLE_PANEL_RIGHT: string;\n        static TRIPLE_PANEL_HORIZONTAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWorkControlTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACTUAL: string;\n        static BASELINE: string;\n        static PLANNED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    type IfcActorSelect = (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization);\n    type IfcAppliedValueSelect = (Handle<IfcRatioMeasure> | IfcRatioMeasure) | (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | (Handle<IfcMonetaryMeasure> | IfcMonetaryMeasure);\n    type IfcAxis2Placement = (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\n    type IfcBooleanOperand = (Handle<IfcSolidModel> | IfcSolidModel) | (Handle<IfcHalfSpaceSolid> | IfcHalfSpaceSolid) | (Handle<IfcBooleanResult> | IfcBooleanResult) | (Handle<IfcCsgPrimitive3D> | IfcCsgPrimitive3D);\n    type IfcCharacterStyleSelect = (Handle<IfcTextStyleForDefinedFont> | IfcTextStyleForDefinedFont);\n    type IfcClassificationNotationSelect = (Handle<IfcClassificationNotation> | IfcClassificationNotation) | (Handle<IfcClassificationReference> | IfcClassificationReference);\n    type IfcColour = (Handle<IfcColourSpecification> | IfcColourSpecification) | (Handle<IfcPreDefinedColour> | IfcPreDefinedColour);\n    type IfcColourOrFactor = (Handle<IfcColourRgb> | IfcColourRgb) | (Handle<IfcNormalisedRatioMeasure> | IfcNormalisedRatioMeasure);\n    type IfcConditionCriterionSelect = (Handle<IfcLabel> | IfcLabel) | (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit);\n    type IfcCsgSelect = (Handle<IfcBooleanResult> | IfcBooleanResult) | (Handle<IfcCsgPrimitive3D> | IfcCsgPrimitive3D);\n    type IfcCurveFontOrScaledCurveFontSelect = (Handle<IfcCurveStyleFontSelect> | IfcCurveStyleFontSelect) | (Handle<IfcCurveStyleFontAndScaling> | IfcCurveStyleFontAndScaling);\n    type IfcCurveOrEdgeCurve = (Handle<IfcBoundedCurve> | IfcBoundedCurve) | (Handle<IfcEdgeCurve> | IfcEdgeCurve);\n    type IfcCurveStyleFontSelect = (Handle<IfcPreDefinedCurveFont> | IfcPreDefinedCurveFont) | (Handle<IfcCurveStyleFont> | IfcCurveStyleFont);\n    type IfcDateTimeSelect = (Handle<IfcCalendarDate> | IfcCalendarDate) | (Handle<IfcLocalTime> | IfcLocalTime) | (Handle<IfcDateAndTime> | IfcDateAndTime);\n    type IfcDefinedSymbolSelect = (Handle<IfcPreDefinedSymbol> | IfcPreDefinedSymbol) | (Handle<IfcExternallyDefinedSymbol> | IfcExternallyDefinedSymbol);\n    type IfcDerivedMeasureValue = (Handle<IfcVolumetricFlowRateMeasure> | IfcVolumetricFlowRateMeasure) | (Handle<IfcTimeStamp> | IfcTimeStamp) | (Handle<IfcThermalTransmittanceMeasure> | IfcThermalTransmittanceMeasure) | (Handle<IfcThermalResistanceMeasure> | IfcThermalResistanceMeasure) | (Handle<IfcThermalAdmittanceMeasure> | IfcThermalAdmittanceMeasure) | (Handle<IfcPressureMeasure> | IfcPressureMeasure) | (Handle<IfcPowerMeasure> | IfcPowerMeasure) | (Handle<IfcMassFlowRateMeasure> | IfcMassFlowRateMeasure) | (Handle<IfcMassDensityMeasure> | IfcMassDensityMeasure) | (Handle<IfcLinearVelocityMeasure> | IfcLinearVelocityMeasure) | (Handle<IfcKinematicViscosityMeasure> | IfcKinematicViscosityMeasure) | (Handle<IfcIntegerCountRateMeasure> | IfcIntegerCountRateMeasure) | (Handle<IfcHeatFluxDensityMeasure> | IfcHeatFluxDensityMeasure) | (Handle<IfcFrequencyMeasure> | IfcFrequencyMeasure) | (Handle<IfcEnergyMeasure> | IfcEnergyMeasure) | (Handle<IfcElectricVoltageMeasure> | IfcElectricVoltageMeasure) | (Handle<IfcDynamicViscosityMeasure> | IfcDynamicViscosityMeasure) | (Handle<IfcCompoundPlaneAngleMeasure> | IfcCompoundPlaneAngleMeasure) | (Handle<IfcAngularVelocityMeasure> | IfcAngularVelocityMeasure) | (Handle<IfcThermalConductivityMeasure> | IfcThermalConductivityMeasure) | (Handle<IfcMolecularWeightMeasure> | IfcMolecularWeightMeasure) | (Handle<IfcVaporPermeabilityMeasure> | IfcVaporPermeabilityMeasure) | (Handle<IfcMoistureDiffusivityMeasure> | IfcMoistureDiffusivityMeasure) | (Handle<IfcIsothermalMoistureCapacityMeasure> | IfcIsothermalMoistureCapacityMeasure) | (Handle<IfcSpecificHeatCapacityMeasure> | IfcSpecificHeatCapacityMeasure) | (Handle<IfcMonetaryMeasure> | IfcMonetaryMeasure) | (Handle<IfcMagneticFluxDensityMeasure> | IfcMagneticFluxDensityMeasure) | (Handle<IfcMagneticFluxMeasure> | IfcMagneticFluxMeasure) | (Handle<IfcLuminousFluxMeasure> | IfcLuminousFluxMeasure) | (Handle<IfcForceMeasure> | IfcForceMeasure) | (Handle<IfcInductanceMeasure> | IfcInductanceMeasure) | (Handle<IfcIlluminanceMeasure> | IfcIlluminanceMeasure) | (Handle<IfcElectricResistanceMeasure> | IfcElectricResistanceMeasure) | (Handle<IfcElectricConductanceMeasure> | IfcElectricConductanceMeasure) | (Handle<IfcElectricChargeMeasure> | IfcElectricChargeMeasure) | (Handle<IfcDoseEquivalentMeasure> | IfcDoseEquivalentMeasure) | (Handle<IfcElectricCapacitanceMeasure> | IfcElectricCapacitanceMeasure) | (Handle<IfcAbsorbedDoseMeasure> | IfcAbsorbedDoseMeasure) | (Handle<IfcRadioActivityMeasure> | IfcRadioActivityMeasure) | (Handle<IfcRotationalFrequencyMeasure> | IfcRotationalFrequencyMeasure) | (Handle<IfcTorqueMeasure> | IfcTorqueMeasure) | (Handle<IfcAccelerationMeasure> | IfcAccelerationMeasure) | (Handle<IfcLinearForceMeasure> | IfcLinearForceMeasure) | (Handle<IfcLinearStiffnessMeasure> | IfcLinearStiffnessMeasure) | (Handle<IfcModulusOfSubgradeReactionMeasure> | IfcModulusOfSubgradeReactionMeasure) | (Handle<IfcModulusOfElasticityMeasure> | IfcModulusOfElasticityMeasure) | (Handle<IfcMomentOfInertiaMeasure> | IfcMomentOfInertiaMeasure) | (Handle<IfcPlanarForceMeasure> | IfcPlanarForceMeasure) | (Handle<IfcRotationalStiffnessMeasure> | IfcRotationalStiffnessMeasure) | (Handle<IfcShearModulusMeasure> | IfcShearModulusMeasure) | (Handle<IfcLinearMomentMeasure> | IfcLinearMomentMeasure) | (Handle<IfcLuminousIntensityDistributionMeasure> | IfcLuminousIntensityDistributionMeasure) | (Handle<IfcCurvatureMeasure> | IfcCurvatureMeasure) | (Handle<IfcMassPerLengthMeasure> | IfcMassPerLengthMeasure) | (Handle<IfcModulusOfLinearSubgradeReactionMeasure> | IfcModulusOfLinearSubgradeReactionMeasure) | (Handle<IfcModulusOfRotationalSubgradeReactionMeasure> | IfcModulusOfRotationalSubgradeReactionMeasure) | (Handle<IfcRotationalMassMeasure> | IfcRotationalMassMeasure) | (Handle<IfcSectionalAreaIntegralMeasure> | IfcSectionalAreaIntegralMeasure) | (Handle<IfcSectionModulusMeasure> | IfcSectionModulusMeasure) | (Handle<IfcTemperatureGradientMeasure> | IfcTemperatureGradientMeasure) | (Handle<IfcThermalExpansionCoefficientMeasure> | IfcThermalExpansionCoefficientMeasure) | (Handle<IfcWarpingConstantMeasure> | IfcWarpingConstantMeasure) | (Handle<IfcWarpingMomentMeasure> | IfcWarpingMomentMeasure) | (Handle<IfcSoundPowerMeasure> | IfcSoundPowerMeasure) | (Handle<IfcSoundPressureMeasure> | IfcSoundPressureMeasure) | (Handle<IfcHeatingValueMeasure> | IfcHeatingValueMeasure) | (Handle<IfcPHMeasure> | IfcPHMeasure) | (Handle<IfcIonConcentrationMeasure> | IfcIonConcentrationMeasure);\n    type IfcDocumentSelect = (Handle<IfcDocumentReference> | IfcDocumentReference) | (Handle<IfcDocumentInformation> | IfcDocumentInformation);\n    type IfcDraughtingCalloutElement = (Handle<IfcAnnotationCurveOccurrence> | IfcAnnotationCurveOccurrence) | (Handle<IfcAnnotationTextOccurrence> | IfcAnnotationTextOccurrence) | (Handle<IfcAnnotationSymbolOccurrence> | IfcAnnotationSymbolOccurrence);\n    type IfcFillAreaStyleTileShapeSelect = (Handle<IfcFillAreaStyleTileSymbolWithStyle> | IfcFillAreaStyleTileSymbolWithStyle);\n    type IfcFillStyleSelect = (Handle<IfcFillAreaStyleHatching> | IfcFillAreaStyleHatching) | (Handle<IfcFillAreaStyleTiles> | IfcFillAreaStyleTiles) | (Handle<IfcColour> | IfcColour) | (Handle<IfcExternallyDefinedHatchStyle> | IfcExternallyDefinedHatchStyle);\n    type IfcGeometricSetSelect = (Handle<IfcPoint> | IfcPoint) | (Handle<IfcCurve> | IfcCurve) | (Handle<IfcSurface> | IfcSurface);\n    type IfcHatchLineDistanceSelect = (Handle<IfcOneDirectionRepeatFactor> | IfcOneDirectionRepeatFactor) | (Handle<IfcPositiveLengthMeasure> | IfcPositiveLengthMeasure);\n    type IfcLayeredItem = (Handle<IfcRepresentationItem> | IfcRepresentationItem) | (Handle<IfcRepresentation> | IfcRepresentation);\n    type IfcLibrarySelect = (Handle<IfcLibraryReference> | IfcLibraryReference) | (Handle<IfcLibraryInformation> | IfcLibraryInformation);\n    type IfcLightDistributionDataSourceSelect = (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcLightIntensityDistribution> | IfcLightIntensityDistribution);\n    type IfcMaterialSelect = (Handle<IfcMaterial> | IfcMaterial) | (Handle<IfcMaterialList> | IfcMaterialList) | (Handle<IfcMaterialLayerSetUsage> | IfcMaterialLayerSetUsage) | (Handle<IfcMaterialLayerSet> | IfcMaterialLayerSet) | (Handle<IfcMaterialLayer> | IfcMaterialLayer);\n    type IfcMeasureValue = (Handle<IfcVolumeMeasure> | IfcVolumeMeasure) | (Handle<IfcTimeMeasure> | IfcTimeMeasure) | (Handle<IfcThermodynamicTemperatureMeasure> | IfcThermodynamicTemperatureMeasure) | (Handle<IfcSolidAngleMeasure> | IfcSolidAngleMeasure) | (Handle<IfcPositiveRatioMeasure> | IfcPositiveRatioMeasure) | (Handle<IfcRatioMeasure> | IfcRatioMeasure) | (Handle<IfcPositivePlaneAngleMeasure> | IfcPositivePlaneAngleMeasure) | (Handle<IfcPlaneAngleMeasure> | IfcPlaneAngleMeasure) | (Handle<IfcParameterValue> | IfcParameterValue) | (Handle<IfcNumericMeasure> | IfcNumericMeasure) | (Handle<IfcMassMeasure> | IfcMassMeasure) | (Handle<IfcPositiveLengthMeasure> | IfcPositiveLengthMeasure) | (Handle<IfcLengthMeasure> | IfcLengthMeasure) | (Handle<IfcElectricCurrentMeasure> | IfcElectricCurrentMeasure) | (Handle<IfcDescriptiveMeasure> | IfcDescriptiveMeasure) | (Handle<IfcCountMeasure> | IfcCountMeasure) | (Handle<IfcContextDependentMeasure> | IfcContextDependentMeasure) | (Handle<IfcAreaMeasure> | IfcAreaMeasure) | (Handle<IfcAmountOfSubstanceMeasure> | IfcAmountOfSubstanceMeasure) | (Handle<IfcLuminousIntensityMeasure> | IfcLuminousIntensityMeasure) | (Handle<IfcNormalisedRatioMeasure> | IfcNormalisedRatioMeasure) | (Handle<IfcComplexNumber> | IfcComplexNumber);\n    type IfcMetricValueSelect = (Handle<IfcDateTimeSelect> | IfcDateTimeSelect) | (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | (Handle<IfcTable> | IfcTable) | (Handle<IfcText> | IfcText) | (Handle<IfcTimeSeries> | IfcTimeSeries) | (Handle<IfcCostValue> | IfcCostValue);\n    type IfcObjectReferenceSelect = (Handle<IfcMaterial> | IfcMaterial) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcDateAndTime> | IfcDateAndTime) | (Handle<IfcMaterialList> | IfcMaterialList) | (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcCalendarDate> | IfcCalendarDate) | (Handle<IfcLocalTime> | IfcLocalTime) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization) | (Handle<IfcMaterialLayer> | IfcMaterialLayer) | (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcTimeSeries> | IfcTimeSeries) | (Handle<IfcAddress> | IfcAddress) | (Handle<IfcAppliedValue> | IfcAppliedValue);\n    type IfcOrientationSelect = (Handle<IfcPlaneAngleMeasure> | IfcPlaneAngleMeasure) | (Handle<IfcDirection> | IfcDirection);\n    type IfcPointOrVertexPoint = (Handle<IfcPoint> | IfcPoint) | (Handle<IfcVertexPoint> | IfcVertexPoint);\n    type IfcPresentationStyleSelect = (Handle<IfcNullStyle> | IfcNullStyle) | (Handle<IfcCurveStyle> | IfcCurveStyle) | (Handle<IfcSymbolStyle> | IfcSymbolStyle) | (Handle<IfcFillAreaStyle> | IfcFillAreaStyle) | (Handle<IfcTextStyle> | IfcTextStyle) | (Handle<IfcSurfaceStyle> | IfcSurfaceStyle);\n    type IfcShell = (Handle<IfcClosedShell> | IfcClosedShell) | (Handle<IfcOpenShell> | IfcOpenShell);\n    type IfcSimpleValue = (Handle<IfcInteger> | IfcInteger) | (Handle<IfcReal> | IfcReal) | (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcIdentifier> | IfcIdentifier) | (Handle<IfcText> | IfcText) | (Handle<IfcLabel> | IfcLabel) | (Handle<IfcLogical> | IfcLogical);\n    type IfcSizeSelect = (Handle<IfcRatioMeasure> | IfcRatioMeasure) | (Handle<IfcLengthMeasure> | IfcLengthMeasure) | (Handle<IfcDescriptiveMeasure> | IfcDescriptiveMeasure) | (Handle<IfcPositiveLengthMeasure> | IfcPositiveLengthMeasure) | (Handle<IfcNormalisedRatioMeasure> | IfcNormalisedRatioMeasure) | (Handle<IfcPositiveRatioMeasure> | IfcPositiveRatioMeasure);\n    type IfcSpecularHighlightSelect = (Handle<IfcSpecularExponent> | IfcSpecularExponent) | (Handle<IfcSpecularRoughness> | IfcSpecularRoughness);\n    type IfcStructuralActivityAssignmentSelect = (Handle<IfcStructuralItem> | IfcStructuralItem) | (Handle<IfcElement> | IfcElement);\n    type IfcSurfaceOrFaceSurface = (Handle<IfcSurface> | IfcSurface) | (Handle<IfcFaceSurface> | IfcFaceSurface) | (Handle<IfcFaceBasedSurfaceModel> | IfcFaceBasedSurfaceModel);\n    type IfcSurfaceStyleElementSelect = (Handle<IfcSurfaceStyleShading> | IfcSurfaceStyleShading) | (Handle<IfcSurfaceStyleLighting> | IfcSurfaceStyleLighting) | (Handle<IfcSurfaceStyleWithTextures> | IfcSurfaceStyleWithTextures) | (Handle<IfcExternallyDefinedSurfaceStyle> | IfcExternallyDefinedSurfaceStyle) | (Handle<IfcSurfaceStyleRefraction> | IfcSurfaceStyleRefraction);\n    type IfcSymbolStyleSelect = (Handle<IfcColour> | IfcColour);\n    type IfcTextFontSelect = (Handle<IfcPreDefinedTextFont> | IfcPreDefinedTextFont) | (Handle<IfcExternallyDefinedTextFont> | IfcExternallyDefinedTextFont);\n    type IfcTextStyleSelect = (Handle<IfcTextStyleWithBoxCharacteristics> | IfcTextStyleWithBoxCharacteristics) | (Handle<IfcTextStyleTextModel> | IfcTextStyleTextModel);\n    type IfcTrimmingSelect = (Handle<IfcCartesianPoint> | IfcCartesianPoint) | (Handle<IfcParameterValue> | IfcParameterValue);\n    type IfcUnit = (Handle<IfcDerivedUnit> | IfcDerivedUnit) | (Handle<IfcNamedUnit> | IfcNamedUnit) | (Handle<IfcMonetaryUnit> | IfcMonetaryUnit);\n    type IfcValue = (Handle<IfcMeasureValue> | IfcMeasureValue) | (Handle<IfcSimpleValue> | IfcSimpleValue) | (Handle<IfcDerivedMeasureValue> | IfcDerivedMeasureValue);\n    type IfcVectorOrDirection = (Handle<IfcDirection> | IfcDirection) | (Handle<IfcVector> | IfcVector);\n    class IfcActorRole {\n        expressID: number;\n        type: number;\n        Role: (Handle<IFC2x3.IfcRoleEnum> | IFC2x3.IfcRoleEnum);\n        UserDefinedRole: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, Role: (Handle<IFC2x3.IfcRoleEnum> | IFC2x3.IfcRoleEnum), UserDefinedRole: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActorRole;\n        ToTape(): any[];\n    }\n    class IfcAddress {\n        expressID: number;\n        type: number;\n        Purpose: (Handle<IFC2x3.IfcAddressTypeEnum> | IFC2x3.IfcAddressTypeEnum) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        UserDefinedPurpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        OfPerson: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson)[] | null;\n        OfOrganization: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization)[] | null;\n        constructor(expressID: number, type: number, Purpose: (Handle<IFC2x3.IfcAddressTypeEnum> | IFC2x3.IfcAddressTypeEnum) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, UserDefinedPurpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAddress;\n        ToTape(): any[];\n    }\n    class IfcApplication {\n        expressID: number;\n        type: number;\n        ApplicationDeveloper: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization);\n        Version: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        ApplicationFullName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        ApplicationIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        constructor(expressID: number, type: number, ApplicationDeveloper: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization), Version: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), ApplicationFullName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), ApplicationIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApplication;\n        ToTape(): any[];\n    }\n    class IfcAppliedValue {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        AppliedValue: (Handle<IFC2x3.IfcAppliedValueSelect> | IFC2x3.IfcAppliedValueSelect) | null;\n        UnitBasis: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null;\n        ApplicableDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        FixedUntilDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        ValuesReferenced: (Handle<IFC2x3.IfcReferencesValueDocument> | IFC2x3.IfcReferencesValueDocument)[] | null;\n        ValueOfComponents: (Handle<IFC2x3.IfcAppliedValueRelationship> | IFC2x3.IfcAppliedValueRelationship)[] | null;\n        IsComponentIn: (Handle<IFC2x3.IfcAppliedValueRelationship> | IFC2x3.IfcAppliedValueRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, AppliedValue: (Handle<IFC2x3.IfcAppliedValueSelect> | IFC2x3.IfcAppliedValueSelect) | null, UnitBasis: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null, ApplicableDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, FixedUntilDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAppliedValue;\n        ToTape(): any[];\n    }\n    class IfcAppliedValueRelationship {\n        expressID: number;\n        type: number;\n        ComponentOfTotal: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue);\n        Components: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue)[];\n        ArithmeticOperator: (Handle<IFC2x3.IfcArithmeticOperatorEnum> | IFC2x3.IfcArithmeticOperatorEnum);\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, ComponentOfTotal: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue), Components: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue)[], ArithmeticOperator: (Handle<IFC2x3.IfcArithmeticOperatorEnum> | IFC2x3.IfcArithmeticOperatorEnum), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAppliedValueRelationship;\n        ToTape(): any[];\n    }\n    class IfcApproval {\n        expressID: number;\n        type: number;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        ApprovalDateTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect);\n        ApprovalStatus: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ApprovalLevel: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ApprovalQualifier: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        Actors: (Handle<IFC2x3.IfcApprovalActorRelationship> | IFC2x3.IfcApprovalActorRelationship)[] | null;\n        IsRelatedWith: (Handle<IFC2x3.IfcApprovalRelationship> | IFC2x3.IfcApprovalRelationship)[] | null;\n        Relates: (Handle<IFC2x3.IfcApprovalRelationship> | IFC2x3.IfcApprovalRelationship)[] | null;\n        constructor(expressID: number, type: number, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApprovalDateTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), ApprovalStatus: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ApprovalLevel: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ApprovalQualifier: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApproval;\n        ToTape(): any[];\n    }\n    class IfcApprovalActorRelationship {\n        expressID: number;\n        type: number;\n        Actor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect);\n        Approval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval);\n        Role: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole);\n        constructor(expressID: number, type: number, Actor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect), Approval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval), Role: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApprovalActorRelationship;\n        ToTape(): any[];\n    }\n    class IfcApprovalPropertyRelationship {\n        expressID: number;\n        type: number;\n        ApprovedProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[];\n        Approval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval);\n        constructor(expressID: number, type: number, ApprovedProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[], Approval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApprovalPropertyRelationship;\n        ToTape(): any[];\n    }\n    class IfcApprovalRelationship {\n        expressID: number;\n        type: number;\n        RelatedApproval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval);\n        RelatingApproval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        constructor(expressID: number, type: number, RelatedApproval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval), RelatingApproval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApprovalRelationship;\n        ToTape(): any[];\n    }\n    class IfcBoundaryCondition {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryEdgeCondition extends IFC2x3.IfcBoundaryCondition {\n        LinearStiffnessByLengthX: (Handle<IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure> | IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure) | null;\n        LinearStiffnessByLengthY: (Handle<IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure> | IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure) | null;\n        LinearStiffnessByLengthZ: (Handle<IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure> | IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure) | null;\n        RotationalStiffnessByLengthX: (Handle<IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure> | IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure) | null;\n        RotationalStiffnessByLengthY: (Handle<IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure> | IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure) | null;\n        RotationalStiffnessByLengthZ: (Handle<IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure> | IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LinearStiffnessByLengthX: (Handle<IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure> | IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure) | null, LinearStiffnessByLengthY: (Handle<IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure> | IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure) | null, LinearStiffnessByLengthZ: (Handle<IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure> | IFC2x3.IfcModulusOfLinearSubgradeReactionMeasure) | null, RotationalStiffnessByLengthX: (Handle<IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure> | IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure) | null, RotationalStiffnessByLengthY: (Handle<IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure> | IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure) | null, RotationalStiffnessByLengthZ: (Handle<IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure> | IFC2x3.IfcModulusOfRotationalSubgradeReactionMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryEdgeCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryFaceCondition extends IFC2x3.IfcBoundaryCondition {\n        LinearStiffnessByAreaX: (Handle<IFC2x3.IfcModulusOfSubgradeReactionMeasure> | IFC2x3.IfcModulusOfSubgradeReactionMeasure) | null;\n        LinearStiffnessByAreaY: (Handle<IFC2x3.IfcModulusOfSubgradeReactionMeasure> | IFC2x3.IfcModulusOfSubgradeReactionMeasure) | null;\n        LinearStiffnessByAreaZ: (Handle<IFC2x3.IfcModulusOfSubgradeReactionMeasure> | IFC2x3.IfcModulusOfSubgradeReactionMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LinearStiffnessByAreaX: (Handle<IFC2x3.IfcModulusOfSubgradeReactionMeasure> | IFC2x3.IfcModulusOfSubgradeReactionMeasure) | null, LinearStiffnessByAreaY: (Handle<IFC2x3.IfcModulusOfSubgradeReactionMeasure> | IFC2x3.IfcModulusOfSubgradeReactionMeasure) | null, LinearStiffnessByAreaZ: (Handle<IFC2x3.IfcModulusOfSubgradeReactionMeasure> | IFC2x3.IfcModulusOfSubgradeReactionMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryFaceCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryNodeCondition extends IFC2x3.IfcBoundaryCondition {\n        LinearStiffnessX: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null;\n        LinearStiffnessY: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null;\n        LinearStiffnessZ: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null;\n        RotationalStiffnessX: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null;\n        RotationalStiffnessY: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null;\n        RotationalStiffnessZ: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LinearStiffnessX: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null, LinearStiffnessY: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null, LinearStiffnessZ: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null, RotationalStiffnessX: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null, RotationalStiffnessY: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null, RotationalStiffnessZ: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryNodeCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryNodeConditionWarping extends IFC2x3.IfcBoundaryNodeCondition {\n        WarpingStiffness: (Handle<IFC2x3.IfcWarpingMomentMeasure> | IFC2x3.IfcWarpingMomentMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LinearStiffnessX: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null, LinearStiffnessY: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null, LinearStiffnessZ: (Handle<IFC2x3.IfcLinearStiffnessMeasure> | IFC2x3.IfcLinearStiffnessMeasure) | null, RotationalStiffnessX: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null, RotationalStiffnessY: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null, RotationalStiffnessZ: (Handle<IFC2x3.IfcRotationalStiffnessMeasure> | IFC2x3.IfcRotationalStiffnessMeasure) | null, WarpingStiffness: (Handle<IFC2x3.IfcWarpingMomentMeasure> | IFC2x3.IfcWarpingMomentMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryNodeConditionWarping;\n        ToTape(): any[];\n    }\n    class IfcCalendarDate {\n        expressID: number;\n        type: number;\n        DayComponent: (Handle<IFC2x3.IfcDayInMonthNumber> | IFC2x3.IfcDayInMonthNumber);\n        MonthComponent: (Handle<IFC2x3.IfcMonthInYearNumber> | IFC2x3.IfcMonthInYearNumber);\n        YearComponent: (Handle<IFC2x3.IfcYearNumber> | IFC2x3.IfcYearNumber);\n        constructor(expressID: number, type: number, DayComponent: (Handle<IFC2x3.IfcDayInMonthNumber> | IFC2x3.IfcDayInMonthNumber), MonthComponent: (Handle<IFC2x3.IfcMonthInYearNumber> | IFC2x3.IfcMonthInYearNumber), YearComponent: (Handle<IFC2x3.IfcYearNumber> | IFC2x3.IfcYearNumber));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCalendarDate;\n        ToTape(): any[];\n    }\n    class IfcClassification {\n        expressID: number;\n        type: number;\n        Source: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Edition: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        EditionDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Contains: (Handle<IFC2x3.IfcClassificationItem> | IFC2x3.IfcClassificationItem)[] | null;\n        constructor(expressID: number, type: number, Source: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Edition: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), EditionDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassification;\n        ToTape(): any[];\n    }\n    class IfcClassificationItem {\n        expressID: number;\n        type: number;\n        Notation: (Handle<IFC2x3.IfcClassificationNotationFacet> | IFC2x3.IfcClassificationNotationFacet);\n        ItemOf: (Handle<IFC2x3.IfcClassification> | IFC2x3.IfcClassification) | null;\n        Title: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        IsClassifiedItemIn: (Handle<IFC2x3.IfcClassificationItemRelationship> | IFC2x3.IfcClassificationItemRelationship)[] | null;\n        IsClassifyingItemIn: (Handle<IFC2x3.IfcClassificationItemRelationship> | IFC2x3.IfcClassificationItemRelationship)[] | null;\n        constructor(expressID: number, type: number, Notation: (Handle<IFC2x3.IfcClassificationNotationFacet> | IFC2x3.IfcClassificationNotationFacet), ItemOf: (Handle<IFC2x3.IfcClassification> | IFC2x3.IfcClassification) | null, Title: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassificationItem;\n        ToTape(): any[];\n    }\n    class IfcClassificationItemRelationship {\n        expressID: number;\n        type: number;\n        RelatingItem: (Handle<IFC2x3.IfcClassificationItem> | IFC2x3.IfcClassificationItem);\n        RelatedItems: (Handle<IFC2x3.IfcClassificationItem> | IFC2x3.IfcClassificationItem)[];\n        constructor(expressID: number, type: number, RelatingItem: (Handle<IFC2x3.IfcClassificationItem> | IFC2x3.IfcClassificationItem), RelatedItems: (Handle<IFC2x3.IfcClassificationItem> | IFC2x3.IfcClassificationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassificationItemRelationship;\n        ToTape(): any[];\n    }\n    class IfcClassificationNotation {\n        expressID: number;\n        type: number;\n        NotationFacets: (Handle<IFC2x3.IfcClassificationNotationFacet> | IFC2x3.IfcClassificationNotationFacet)[];\n        constructor(expressID: number, type: number, NotationFacets: (Handle<IFC2x3.IfcClassificationNotationFacet> | IFC2x3.IfcClassificationNotationFacet)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassificationNotation;\n        ToTape(): any[];\n    }\n    class IfcClassificationNotationFacet {\n        expressID: number;\n        type: number;\n        NotationValue: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        constructor(expressID: number, type: number, NotationValue: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassificationNotationFacet;\n        ToTape(): any[];\n    }\n    class IfcColourSpecification {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColourSpecification;\n        ToTape(): any[];\n    }\n    class IfcConnectionGeometry {\n        expressID: number;\n        type: number;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionPointGeometry extends IFC2x3.IfcConnectionGeometry {\n        PointOnRelatingElement: (Handle<IFC2x3.IfcPointOrVertexPoint> | IFC2x3.IfcPointOrVertexPoint);\n        PointOnRelatedElement: (Handle<IFC2x3.IfcPointOrVertexPoint> | IFC2x3.IfcPointOrVertexPoint) | null;\n        constructor(expressID: number, type: number, PointOnRelatingElement: (Handle<IFC2x3.IfcPointOrVertexPoint> | IFC2x3.IfcPointOrVertexPoint), PointOnRelatedElement: (Handle<IFC2x3.IfcPointOrVertexPoint> | IFC2x3.IfcPointOrVertexPoint) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionPointGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionPortGeometry extends IFC2x3.IfcConnectionGeometry {\n        LocationAtRelatingElement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement);\n        LocationAtRelatedElement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement) | null;\n        ProfileOfPort: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef);\n        constructor(expressID: number, type: number, LocationAtRelatingElement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), LocationAtRelatedElement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement) | null, ProfileOfPort: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionPortGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionSurfaceGeometry extends IFC2x3.IfcConnectionGeometry {\n        SurfaceOnRelatingElement: (Handle<IFC2x3.IfcSurfaceOrFaceSurface> | IFC2x3.IfcSurfaceOrFaceSurface);\n        SurfaceOnRelatedElement: (Handle<IFC2x3.IfcSurfaceOrFaceSurface> | IFC2x3.IfcSurfaceOrFaceSurface) | null;\n        constructor(expressID: number, type: number, SurfaceOnRelatingElement: (Handle<IFC2x3.IfcSurfaceOrFaceSurface> | IFC2x3.IfcSurfaceOrFaceSurface), SurfaceOnRelatedElement: (Handle<IFC2x3.IfcSurfaceOrFaceSurface> | IFC2x3.IfcSurfaceOrFaceSurface) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionSurfaceGeometry;\n        ToTape(): any[];\n    }\n    class IfcConstraint {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        ConstraintGrade: (Handle<IFC2x3.IfcConstraintEnum> | IFC2x3.IfcConstraintEnum);\n        ConstraintSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        CreatingActor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null;\n        CreationTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        UserDefinedGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ClassifiedAs: (Handle<IFC2x3.IfcConstraintClassificationRelationship> | IFC2x3.IfcConstraintClassificationRelationship)[] | null;\n        RelatesConstraints: (Handle<IFC2x3.IfcConstraintRelationship> | IFC2x3.IfcConstraintRelationship)[] | null;\n        IsRelatedWith: (Handle<IFC2x3.IfcConstraintRelationship> | IFC2x3.IfcConstraintRelationship)[] | null;\n        PropertiesForConstraint: (Handle<IFC2x3.IfcPropertyConstraintRelationship> | IFC2x3.IfcPropertyConstraintRelationship)[] | null;\n        Aggregates: (Handle<IFC2x3.IfcConstraintAggregationRelationship> | IFC2x3.IfcConstraintAggregationRelationship)[] | null;\n        IsAggregatedIn: (Handle<IFC2x3.IfcConstraintAggregationRelationship> | IFC2x3.IfcConstraintAggregationRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ConstraintGrade: (Handle<IFC2x3.IfcConstraintEnum> | IFC2x3.IfcConstraintEnum), ConstraintSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CreatingActor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null, CreationTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, UserDefinedGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstraint;\n        ToTape(): any[];\n    }\n    class IfcConstraintAggregationRelationship {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint);\n        RelatedConstraints: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint)[];\n        LogicalAggregator: (Handle<IFC2x3.IfcLogicalOperatorEnum> | IFC2x3.IfcLogicalOperatorEnum);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint), RelatedConstraints: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint)[], LogicalAggregator: (Handle<IFC2x3.IfcLogicalOperatorEnum> | IFC2x3.IfcLogicalOperatorEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstraintAggregationRelationship;\n        ToTape(): any[];\n    }\n    class IfcConstraintClassificationRelationship {\n        expressID: number;\n        type: number;\n        ClassifiedConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint);\n        RelatedClassifications: (Handle<IFC2x3.IfcClassificationNotationSelect> | IFC2x3.IfcClassificationNotationSelect)[];\n        constructor(expressID: number, type: number, ClassifiedConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint), RelatedClassifications: (Handle<IFC2x3.IfcClassificationNotationSelect> | IFC2x3.IfcClassificationNotationSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstraintClassificationRelationship;\n        ToTape(): any[];\n    }\n    class IfcConstraintRelationship {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint);\n        RelatedConstraints: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint), RelatedConstraints: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstraintRelationship;\n        ToTape(): any[];\n    }\n    class IfcCoordinatedUniversalTimeOffset {\n        expressID: number;\n        type: number;\n        HourOffset: (Handle<IFC2x3.IfcHourInDay> | IFC2x3.IfcHourInDay);\n        MinuteOffset: (Handle<IFC2x3.IfcMinuteInHour> | IFC2x3.IfcMinuteInHour) | null;\n        Sense: (Handle<IFC2x3.IfcAheadOrBehind> | IFC2x3.IfcAheadOrBehind);\n        constructor(expressID: number, type: number, HourOffset: (Handle<IFC2x3.IfcHourInDay> | IFC2x3.IfcHourInDay), MinuteOffset: (Handle<IFC2x3.IfcMinuteInHour> | IFC2x3.IfcMinuteInHour) | null, Sense: (Handle<IFC2x3.IfcAheadOrBehind> | IFC2x3.IfcAheadOrBehind));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoordinatedUniversalTimeOffset;\n        ToTape(): any[];\n    }\n    class IfcCostValue extends IFC2x3.IfcAppliedValue {\n        CostType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Condition: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, AppliedValue: (Handle<IFC2x3.IfcAppliedValueSelect> | IFC2x3.IfcAppliedValueSelect) | null, UnitBasis: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null, ApplicableDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, FixedUntilDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, CostType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Condition: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCostValue;\n        ToTape(): any[];\n    }\n    class IfcCurrencyRelationship {\n        expressID: number;\n        type: number;\n        RelatingMonetaryUnit: (Handle<IFC2x3.IfcMonetaryUnit> | IFC2x3.IfcMonetaryUnit);\n        RelatedMonetaryUnit: (Handle<IFC2x3.IfcMonetaryUnit> | IFC2x3.IfcMonetaryUnit);\n        ExchangeRate: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure);\n        RateDateTime: (Handle<IFC2x3.IfcDateAndTime> | IFC2x3.IfcDateAndTime);\n        RateSource: (Handle<IFC2x3.IfcLibraryInformation> | IFC2x3.IfcLibraryInformation) | null;\n        constructor(expressID: number, type: number, RelatingMonetaryUnit: (Handle<IFC2x3.IfcMonetaryUnit> | IFC2x3.IfcMonetaryUnit), RelatedMonetaryUnit: (Handle<IFC2x3.IfcMonetaryUnit> | IFC2x3.IfcMonetaryUnit), ExchangeRate: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure), RateDateTime: (Handle<IFC2x3.IfcDateAndTime> | IFC2x3.IfcDateAndTime), RateSource: (Handle<IFC2x3.IfcLibraryInformation> | IFC2x3.IfcLibraryInformation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurrencyRelationship;\n        ToTape(): any[];\n    }\n    class IfcCurveStyleFont {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        PatternList: (Handle<IFC2x3.IfcCurveStyleFontPattern> | IFC2x3.IfcCurveStyleFontPattern)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PatternList: (Handle<IFC2x3.IfcCurveStyleFontPattern> | IFC2x3.IfcCurveStyleFontPattern)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFont;\n        ToTape(): any[];\n    }\n    class IfcCurveStyleFontAndScaling {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        CurveFont: (Handle<IFC2x3.IfcCurveStyleFontSelect> | IFC2x3.IfcCurveStyleFontSelect);\n        CurveFontScaling: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CurveFont: (Handle<IFC2x3.IfcCurveStyleFontSelect> | IFC2x3.IfcCurveStyleFontSelect), CurveFontScaling: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFontAndScaling;\n        ToTape(): any[];\n    }\n    class IfcCurveStyleFontPattern {\n        expressID: number;\n        type: number;\n        VisibleSegmentLength: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        InvisibleSegmentLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, VisibleSegmentLength: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), InvisibleSegmentLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFontPattern;\n        ToTape(): any[];\n    }\n    class IfcDateAndTime {\n        expressID: number;\n        type: number;\n        DateComponent: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate);\n        TimeComponent: (Handle<IFC2x3.IfcLocalTime> | IFC2x3.IfcLocalTime);\n        constructor(expressID: number, type: number, DateComponent: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate), TimeComponent: (Handle<IFC2x3.IfcLocalTime> | IFC2x3.IfcLocalTime));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDateAndTime;\n        ToTape(): any[];\n    }\n    class IfcDerivedUnit {\n        expressID: number;\n        type: number;\n        Elements: (Handle<IFC2x3.IfcDerivedUnitElement> | IFC2x3.IfcDerivedUnitElement)[];\n        UnitType: (Handle<IFC2x3.IfcDerivedUnitEnum> | IFC2x3.IfcDerivedUnitEnum);\n        UserDefinedType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Elements: (Handle<IFC2x3.IfcDerivedUnitElement> | IFC2x3.IfcDerivedUnitElement)[], UnitType: (Handle<IFC2x3.IfcDerivedUnitEnum> | IFC2x3.IfcDerivedUnitEnum), UserDefinedType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedUnit;\n        ToTape(): any[];\n    }\n    class IfcDerivedUnitElement {\n        expressID: number;\n        type: number;\n        Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit);\n        Exponent: number;\n        constructor(expressID: number, type: number, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit), Exponent: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedUnitElement;\n        ToTape(): any[];\n    }\n    class IfcDimensionalExponents {\n        expressID: number;\n        type: number;\n        LengthExponent: number;\n        MassExponent: number;\n        TimeExponent: number;\n        ElectricCurrentExponent: number;\n        ThermodynamicTemperatureExponent: number;\n        AmountOfSubstanceExponent: number;\n        LuminousIntensityExponent: number;\n        constructor(expressID: number, type: number, LengthExponent: number, MassExponent: number, TimeExponent: number, ElectricCurrentExponent: number, ThermodynamicTemperatureExponent: number, AmountOfSubstanceExponent: number, LuminousIntensityExponent: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionalExponents;\n        ToTape(): any[];\n    }\n    class IfcDocumentElectronicFormat {\n        expressID: number;\n        type: number;\n        FileExtension: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        MimeContentType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        MimeSubtype: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, FileExtension: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, MimeContentType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, MimeSubtype: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentElectronicFormat;\n        ToTape(): any[];\n    }\n    class IfcDocumentInformation {\n        expressID: number;\n        type: number;\n        DocumentId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        DocumentReferences: (Handle<IFC2x3.IfcDocumentReference> | IFC2x3.IfcDocumentReference)[] | null;\n        Purpose: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        IntendedUse: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Scope: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Revision: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        DocumentOwner: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null;\n        Editors: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect)[] | null;\n        CreationTime: (Handle<IFC2x3.IfcDateAndTime> | IFC2x3.IfcDateAndTime) | null;\n        LastRevisionTime: (Handle<IFC2x3.IfcDateAndTime> | IFC2x3.IfcDateAndTime) | null;\n        ElectronicFormat: (Handle<IFC2x3.IfcDocumentElectronicFormat> | IFC2x3.IfcDocumentElectronicFormat) | null;\n        ValidFrom: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null;\n        ValidUntil: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null;\n        Confidentiality: (Handle<IFC2x3.IfcDocumentConfidentialityEnum> | IFC2x3.IfcDocumentConfidentialityEnum) | null;\n        Status: (Handle<IFC2x3.IfcDocumentStatusEnum> | IFC2x3.IfcDocumentStatusEnum) | null;\n        IsPointedTo: (Handle<IFC2x3.IfcDocumentInformationRelationship> | IFC2x3.IfcDocumentInformationRelationship)[] | null;\n        IsPointer: (Handle<IFC2x3.IfcDocumentInformationRelationship> | IFC2x3.IfcDocumentInformationRelationship)[] | null;\n        constructor(expressID: number, type: number, DocumentId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, DocumentReferences: (Handle<IFC2x3.IfcDocumentReference> | IFC2x3.IfcDocumentReference)[] | null, Purpose: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, IntendedUse: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Scope: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Revision: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, DocumentOwner: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null, Editors: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect)[] | null, CreationTime: (Handle<IFC2x3.IfcDateAndTime> | IFC2x3.IfcDateAndTime) | null, LastRevisionTime: (Handle<IFC2x3.IfcDateAndTime> | IFC2x3.IfcDateAndTime) | null, ElectronicFormat: (Handle<IFC2x3.IfcDocumentElectronicFormat> | IFC2x3.IfcDocumentElectronicFormat) | null, ValidFrom: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null, ValidUntil: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null, Confidentiality: (Handle<IFC2x3.IfcDocumentConfidentialityEnum> | IFC2x3.IfcDocumentConfidentialityEnum) | null, Status: (Handle<IFC2x3.IfcDocumentStatusEnum> | IFC2x3.IfcDocumentStatusEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentInformation;\n        ToTape(): any[];\n    }\n    class IfcDocumentInformationRelationship {\n        expressID: number;\n        type: number;\n        RelatingDocument: (Handle<IFC2x3.IfcDocumentInformation> | IFC2x3.IfcDocumentInformation);\n        RelatedDocuments: (Handle<IFC2x3.IfcDocumentInformation> | IFC2x3.IfcDocumentInformation)[];\n        RelationshipType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, RelatingDocument: (Handle<IFC2x3.IfcDocumentInformation> | IFC2x3.IfcDocumentInformation), RelatedDocuments: (Handle<IFC2x3.IfcDocumentInformation> | IFC2x3.IfcDocumentInformation)[], RelationshipType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentInformationRelationship;\n        ToTape(): any[];\n    }\n    class IfcDraughtingCalloutRelationship {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        RelatingDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout);\n        RelatedDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout), RelatedDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingCalloutRelationship;\n        ToTape(): any[];\n    }\n    class IfcEnvironmentalImpactValue extends IFC2x3.IfcAppliedValue {\n        ImpactType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Category: (Handle<IFC2x3.IfcEnvironmentalImpactCategoryEnum> | IFC2x3.IfcEnvironmentalImpactCategoryEnum);\n        UserDefinedCategory: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, AppliedValue: (Handle<IFC2x3.IfcAppliedValueSelect> | IFC2x3.IfcAppliedValueSelect) | null, UnitBasis: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null, ApplicableDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, FixedUntilDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, ImpactType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Category: (Handle<IFC2x3.IfcEnvironmentalImpactCategoryEnum> | IFC2x3.IfcEnvironmentalImpactCategoryEnum), UserDefinedCategory: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEnvironmentalImpactValue;\n        ToTape(): any[];\n    }\n    class IfcExternalReference {\n        expressID: number;\n        type: number;\n        Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternalReference;\n        ToTape(): any[];\n    }\n    class IfcExternallyDefinedHatchStyle extends IFC2x3.IfcExternalReference {\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedHatchStyle;\n        ToTape(): any[];\n    }\n    class IfcExternallyDefinedSurfaceStyle extends IFC2x3.IfcExternalReference {\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedSurfaceStyle;\n        ToTape(): any[];\n    }\n    class IfcExternallyDefinedSymbol extends IFC2x3.IfcExternalReference {\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedSymbol;\n        ToTape(): any[];\n    }\n    class IfcExternallyDefinedTextFont extends IFC2x3.IfcExternalReference {\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedTextFont;\n        ToTape(): any[];\n    }\n    class IfcGridAxis {\n        expressID: number;\n        type: number;\n        AxisTag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        AxisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        SameSense: (Handle<IFC2x3.IfcBoolean> | IFC2x3.IfcBoolean);\n        PartOfW: (Handle<IFC2x3.IfcGrid> | IFC2x3.IfcGrid)[] | null;\n        PartOfV: (Handle<IFC2x3.IfcGrid> | IFC2x3.IfcGrid)[] | null;\n        PartOfU: (Handle<IFC2x3.IfcGrid> | IFC2x3.IfcGrid)[] | null;\n        HasIntersections: (Handle<IFC2x3.IfcVirtualGridIntersection> | IFC2x3.IfcVirtualGridIntersection)[] | null;\n        constructor(expressID: number, type: number, AxisTag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, AxisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), SameSense: (Handle<IFC2x3.IfcBoolean> | IFC2x3.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGridAxis;\n        ToTape(): any[];\n    }\n    class IfcIrregularTimeSeriesValue {\n        expressID: number;\n        type: number;\n        TimeStamp: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect);\n        ListValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        constructor(expressID: number, type: number, TimeStamp: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), ListValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIrregularTimeSeriesValue;\n        ToTape(): any[];\n    }\n    class IfcLibraryInformation {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Version: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Publisher: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization) | null;\n        VersionDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null;\n        LibraryReference: (Handle<IFC2x3.IfcLibraryReference> | IFC2x3.IfcLibraryReference)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Version: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Publisher: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization) | null, VersionDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate) | null, LibraryReference: (Handle<IFC2x3.IfcLibraryReference> | IFC2x3.IfcLibraryReference)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLibraryInformation;\n        ToTape(): any[];\n    }\n    class IfcLibraryReference extends IFC2x3.IfcExternalReference {\n        ReferenceIntoLibrary: (Handle<IFC2x3.IfcLibraryInformation> | IFC2x3.IfcLibraryInformation)[] | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLibraryReference;\n        ToTape(): any[];\n    }\n    class IfcLightDistributionData {\n        expressID: number;\n        type: number;\n        MainPlaneAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure);\n        SecondaryPlaneAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure)[];\n        LuminousIntensity: (Handle<IFC2x3.IfcLuminousIntensityDistributionMeasure> | IFC2x3.IfcLuminousIntensityDistributionMeasure)[];\n        constructor(expressID: number, type: number, MainPlaneAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure), SecondaryPlaneAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure)[], LuminousIntensity: (Handle<IFC2x3.IfcLuminousIntensityDistributionMeasure> | IFC2x3.IfcLuminousIntensityDistributionMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightDistributionData;\n        ToTape(): any[];\n    }\n    class IfcLightIntensityDistribution {\n        expressID: number;\n        type: number;\n        LightDistributionCurve: (Handle<IFC2x3.IfcLightDistributionCurveEnum> | IFC2x3.IfcLightDistributionCurveEnum);\n        DistributionData: (Handle<IFC2x3.IfcLightDistributionData> | IFC2x3.IfcLightDistributionData)[];\n        constructor(expressID: number, type: number, LightDistributionCurve: (Handle<IFC2x3.IfcLightDistributionCurveEnum> | IFC2x3.IfcLightDistributionCurveEnum), DistributionData: (Handle<IFC2x3.IfcLightDistributionData> | IFC2x3.IfcLightDistributionData)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightIntensityDistribution;\n        ToTape(): any[];\n    }\n    class IfcLocalTime {\n        expressID: number;\n        type: number;\n        HourComponent: (Handle<IFC2x3.IfcHourInDay> | IFC2x3.IfcHourInDay);\n        MinuteComponent: (Handle<IFC2x3.IfcMinuteInHour> | IFC2x3.IfcMinuteInHour) | null;\n        SecondComponent: (Handle<IFC2x3.IfcSecondInMinute> | IFC2x3.IfcSecondInMinute) | null;\n        Zone: (Handle<IFC2x3.IfcCoordinatedUniversalTimeOffset> | IFC2x3.IfcCoordinatedUniversalTimeOffset) | null;\n        DaylightSavingOffset: (Handle<IFC2x3.IfcDaylightSavingHour> | IFC2x3.IfcDaylightSavingHour) | null;\n        constructor(expressID: number, type: number, HourComponent: (Handle<IFC2x3.IfcHourInDay> | IFC2x3.IfcHourInDay), MinuteComponent: (Handle<IFC2x3.IfcMinuteInHour> | IFC2x3.IfcMinuteInHour) | null, SecondComponent: (Handle<IFC2x3.IfcSecondInMinute> | IFC2x3.IfcSecondInMinute) | null, Zone: (Handle<IFC2x3.IfcCoordinatedUniversalTimeOffset> | IFC2x3.IfcCoordinatedUniversalTimeOffset) | null, DaylightSavingOffset: (Handle<IFC2x3.IfcDaylightSavingHour> | IFC2x3.IfcDaylightSavingHour) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLocalTime;\n        ToTape(): any[];\n    }\n    class IfcMaterial {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        HasRepresentation: (Handle<IFC2x3.IfcMaterialDefinitionRepresentation> | IFC2x3.IfcMaterialDefinitionRepresentation)[] | null;\n        ClassifiedAs: (Handle<IFC2x3.IfcMaterialClassificationRelationship> | IFC2x3.IfcMaterialClassificationRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterial;\n        ToTape(): any[];\n    }\n    class IfcMaterialClassificationRelationship {\n        expressID: number;\n        type: number;\n        MaterialClassifications: (Handle<IFC2x3.IfcClassificationNotationSelect> | IFC2x3.IfcClassificationNotationSelect)[];\n        ClassifiedMaterial: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial);\n        constructor(expressID: number, type: number, MaterialClassifications: (Handle<IFC2x3.IfcClassificationNotationSelect> | IFC2x3.IfcClassificationNotationSelect)[], ClassifiedMaterial: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialClassificationRelationship;\n        ToTape(): any[];\n    }\n    class IfcMaterialLayer {\n        expressID: number;\n        type: number;\n        Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial) | null;\n        LayerThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        IsVentilated: (Handle<IFC2x3.IfcLogical> | IFC2x3.IfcLogical) | null;\n        ToMaterialLayerSet: (Handle<IFC2x3.IfcMaterialLayerSet> | IFC2x3.IfcMaterialLayerSet) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial) | null, LayerThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), IsVentilated: (Handle<IFC2x3.IfcLogical> | IFC2x3.IfcLogical) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayer;\n        ToTape(): any[];\n    }\n    class IfcMaterialLayerSet {\n        expressID: number;\n        type: number;\n        MaterialLayers: (Handle<IFC2x3.IfcMaterialLayer> | IFC2x3.IfcMaterialLayer)[];\n        LayerSetName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, MaterialLayers: (Handle<IFC2x3.IfcMaterialLayer> | IFC2x3.IfcMaterialLayer)[], LayerSetName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerSet;\n        ToTape(): any[];\n    }\n    class IfcMaterialLayerSetUsage {\n        expressID: number;\n        type: number;\n        ForLayerSet: (Handle<IFC2x3.IfcMaterialLayerSet> | IFC2x3.IfcMaterialLayerSet);\n        LayerSetDirection: (Handle<IFC2x3.IfcLayerSetDirectionEnum> | IFC2x3.IfcLayerSetDirectionEnum);\n        DirectionSense: (Handle<IFC2x3.IfcDirectionSenseEnum> | IFC2x3.IfcDirectionSenseEnum);\n        OffsetFromReferenceLine: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        constructor(expressID: number, type: number, ForLayerSet: (Handle<IFC2x3.IfcMaterialLayerSet> | IFC2x3.IfcMaterialLayerSet), LayerSetDirection: (Handle<IFC2x3.IfcLayerSetDirectionEnum> | IFC2x3.IfcLayerSetDirectionEnum), DirectionSense: (Handle<IFC2x3.IfcDirectionSenseEnum> | IFC2x3.IfcDirectionSenseEnum), OffsetFromReferenceLine: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerSetUsage;\n        ToTape(): any[];\n    }\n    class IfcMaterialList {\n        expressID: number;\n        type: number;\n        Materials: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial)[];\n        constructor(expressID: number, type: number, Materials: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialList;\n        ToTape(): any[];\n    }\n    class IfcMaterialProperties {\n        expressID: number;\n        type: number;\n        Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial);\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcMeasureWithUnit {\n        expressID: number;\n        type: number;\n        ValueComponent: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue);\n        UnitComponent: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit);\n        constructor(expressID: number, type: number, ValueComponent: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue), UnitComponent: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMeasureWithUnit;\n        ToTape(): any[];\n    }\n    class IfcMechanicalMaterialProperties extends IFC2x3.IfcMaterialProperties {\n        DynamicViscosity: (Handle<IFC2x3.IfcDynamicViscosityMeasure> | IFC2x3.IfcDynamicViscosityMeasure) | null;\n        YoungModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null;\n        ShearModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null;\n        PoissonRatio: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        ThermalExpansionCoefficient: (Handle<IFC2x3.IfcThermalExpansionCoefficientMeasure> | IFC2x3.IfcThermalExpansionCoefficientMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), DynamicViscosity: (Handle<IFC2x3.IfcDynamicViscosityMeasure> | IFC2x3.IfcDynamicViscosityMeasure) | null, YoungModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null, ShearModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null, PoissonRatio: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, ThermalExpansionCoefficient: (Handle<IFC2x3.IfcThermalExpansionCoefficientMeasure> | IFC2x3.IfcThermalExpansionCoefficientMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcMechanicalSteelMaterialProperties extends IFC2x3.IfcMechanicalMaterialProperties {\n        YieldStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null;\n        UltimateStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null;\n        UltimateStrain: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        HardeningModule: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null;\n        ProportionalStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null;\n        PlasticStrain: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        Relaxations: (Handle<IFC2x3.IfcRelaxation> | IFC2x3.IfcRelaxation)[] | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), DynamicViscosity: (Handle<IFC2x3.IfcDynamicViscosityMeasure> | IFC2x3.IfcDynamicViscosityMeasure) | null, YoungModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null, ShearModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null, PoissonRatio: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, ThermalExpansionCoefficient: (Handle<IFC2x3.IfcThermalExpansionCoefficientMeasure> | IFC2x3.IfcThermalExpansionCoefficientMeasure) | null, YieldStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null, UltimateStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null, UltimateStrain: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, HardeningModule: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null, ProportionalStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null, PlasticStrain: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, Relaxations: (Handle<IFC2x3.IfcRelaxation> | IFC2x3.IfcRelaxation)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalSteelMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcMetric extends IFC2x3.IfcConstraint {\n        Benchmark: (Handle<IFC2x3.IfcBenchmarkEnum> | IFC2x3.IfcBenchmarkEnum);\n        ValueSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        DataValue: (Handle<IFC2x3.IfcMetricValueSelect> | IFC2x3.IfcMetricValueSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ConstraintGrade: (Handle<IFC2x3.IfcConstraintEnum> | IFC2x3.IfcConstraintEnum), ConstraintSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CreatingActor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null, CreationTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, UserDefinedGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Benchmark: (Handle<IFC2x3.IfcBenchmarkEnum> | IFC2x3.IfcBenchmarkEnum), ValueSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, DataValue: (Handle<IFC2x3.IfcMetricValueSelect> | IFC2x3.IfcMetricValueSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMetric;\n        ToTape(): any[];\n    }\n    class IfcMonetaryUnit {\n        expressID: number;\n        type: number;\n        Currency: (Handle<IFC2x3.IfcCurrencyEnum> | IFC2x3.IfcCurrencyEnum);\n        constructor(expressID: number, type: number, Currency: (Handle<IFC2x3.IfcCurrencyEnum> | IFC2x3.IfcCurrencyEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMonetaryUnit;\n        ToTape(): any[];\n    }\n    class IfcNamedUnit {\n        expressID: number;\n        type: number;\n        Dimensions: (Handle<IFC2x3.IfcDimensionalExponents> | IFC2x3.IfcDimensionalExponents);\n        UnitType: (Handle<IFC2x3.IfcUnitEnum> | IFC2x3.IfcUnitEnum);\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC2x3.IfcDimensionalExponents> | IFC2x3.IfcDimensionalExponents), UnitType: (Handle<IFC2x3.IfcUnitEnum> | IFC2x3.IfcUnitEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcNamedUnit;\n        ToTape(): any[];\n    }\n    class IfcObjectPlacement {\n        expressID: number;\n        type: number;\n        PlacesObject: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct)[] | null;\n        ReferencedByPlacements: (Handle<IFC2x3.IfcLocalPlacement> | IFC2x3.IfcLocalPlacement)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObjectPlacement;\n        ToTape(): any[];\n    }\n    class IfcObjective extends IFC2x3.IfcConstraint {\n        BenchmarkValues: (Handle<IFC2x3.IfcMetric> | IFC2x3.IfcMetric) | null;\n        ResultValues: (Handle<IFC2x3.IfcMetric> | IFC2x3.IfcMetric) | null;\n        ObjectiveQualifier: (Handle<IFC2x3.IfcObjectiveEnum> | IFC2x3.IfcObjectiveEnum);\n        UserDefinedQualifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ConstraintGrade: (Handle<IFC2x3.IfcConstraintEnum> | IFC2x3.IfcConstraintEnum), ConstraintSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CreatingActor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null, CreationTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, UserDefinedGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, BenchmarkValues: (Handle<IFC2x3.IfcMetric> | IFC2x3.IfcMetric) | null, ResultValues: (Handle<IFC2x3.IfcMetric> | IFC2x3.IfcMetric) | null, ObjectiveQualifier: (Handle<IFC2x3.IfcObjectiveEnum> | IFC2x3.IfcObjectiveEnum), UserDefinedQualifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObjective;\n        ToTape(): any[];\n    }\n    class IfcOpticalMaterialProperties extends IFC2x3.IfcMaterialProperties {\n        VisibleTransmittance: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        SolarTransmittance: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        ThermalIrTransmittance: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        ThermalIrEmissivityBack: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        ThermalIrEmissivityFront: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        VisibleReflectanceBack: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        VisibleReflectanceFront: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        SolarReflectanceFront: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        SolarReflectanceBack: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), VisibleTransmittance: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, SolarTransmittance: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, ThermalIrTransmittance: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, ThermalIrEmissivityBack: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, ThermalIrEmissivityFront: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, VisibleReflectanceBack: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, VisibleReflectanceFront: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, SolarReflectanceFront: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, SolarReflectanceBack: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOpticalMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcOrganization {\n        expressID: number;\n        type: number;\n        Id: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Roles: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole)[] | null;\n        Addresses: (Handle<IFC2x3.IfcAddress> | IFC2x3.IfcAddress)[] | null;\n        IsRelatedBy: (Handle<IFC2x3.IfcOrganizationRelationship> | IFC2x3.IfcOrganizationRelationship)[] | null;\n        Relates: (Handle<IFC2x3.IfcOrganizationRelationship> | IFC2x3.IfcOrganizationRelationship)[] | null;\n        Engages: (Handle<IFC2x3.IfcPersonAndOrganization> | IFC2x3.IfcPersonAndOrganization)[] | null;\n        constructor(expressID: number, type: number, Id: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Roles: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole)[] | null, Addresses: (Handle<IFC2x3.IfcAddress> | IFC2x3.IfcAddress)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOrganization;\n        ToTape(): any[];\n    }\n    class IfcOrganizationRelationship {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        RelatingOrganization: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization);\n        RelatedOrganizations: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingOrganization: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization), RelatedOrganizations: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOrganizationRelationship;\n        ToTape(): any[];\n    }\n    class IfcOwnerHistory {\n        expressID: number;\n        type: number;\n        OwningUser: (Handle<IFC2x3.IfcPersonAndOrganization> | IFC2x3.IfcPersonAndOrganization);\n        OwningApplication: (Handle<IFC2x3.IfcApplication> | IFC2x3.IfcApplication);\n        State: (Handle<IFC2x3.IfcStateEnum> | IFC2x3.IfcStateEnum) | null;\n        ChangeAction: (Handle<IFC2x3.IfcChangeActionEnum> | IFC2x3.IfcChangeActionEnum);\n        LastModifiedDate: (Handle<IFC2x3.IfcTimeStamp> | IFC2x3.IfcTimeStamp) | null;\n        LastModifyingUser: (Handle<IFC2x3.IfcPersonAndOrganization> | IFC2x3.IfcPersonAndOrganization) | null;\n        LastModifyingApplication: (Handle<IFC2x3.IfcApplication> | IFC2x3.IfcApplication) | null;\n        CreationDate: (Handle<IFC2x3.IfcTimeStamp> | IFC2x3.IfcTimeStamp);\n        constructor(expressID: number, type: number, OwningUser: (Handle<IFC2x3.IfcPersonAndOrganization> | IFC2x3.IfcPersonAndOrganization), OwningApplication: (Handle<IFC2x3.IfcApplication> | IFC2x3.IfcApplication), State: (Handle<IFC2x3.IfcStateEnum> | IFC2x3.IfcStateEnum) | null, ChangeAction: (Handle<IFC2x3.IfcChangeActionEnum> | IFC2x3.IfcChangeActionEnum), LastModifiedDate: (Handle<IFC2x3.IfcTimeStamp> | IFC2x3.IfcTimeStamp) | null, LastModifyingUser: (Handle<IFC2x3.IfcPersonAndOrganization> | IFC2x3.IfcPersonAndOrganization) | null, LastModifyingApplication: (Handle<IFC2x3.IfcApplication> | IFC2x3.IfcApplication) | null, CreationDate: (Handle<IFC2x3.IfcTimeStamp> | IFC2x3.IfcTimeStamp));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOwnerHistory;\n        ToTape(): any[];\n    }\n    class IfcPerson {\n        expressID: number;\n        type: number;\n        Id: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null;\n        FamilyName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        GivenName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        MiddleNames: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null;\n        PrefixTitles: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null;\n        SuffixTitles: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null;\n        Roles: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole)[] | null;\n        Addresses: (Handle<IFC2x3.IfcAddress> | IFC2x3.IfcAddress)[] | null;\n        EngagedIn: (Handle<IFC2x3.IfcPersonAndOrganization> | IFC2x3.IfcPersonAndOrganization)[] | null;\n        constructor(expressID: number, type: number, Id: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, FamilyName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, GivenName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, MiddleNames: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null, PrefixTitles: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null, SuffixTitles: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null, Roles: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole)[] | null, Addresses: (Handle<IFC2x3.IfcAddress> | IFC2x3.IfcAddress)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPerson;\n        ToTape(): any[];\n    }\n    class IfcPersonAndOrganization {\n        expressID: number;\n        type: number;\n        ThePerson: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson);\n        TheOrganization: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization);\n        Roles: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole)[] | null;\n        constructor(expressID: number, type: number, ThePerson: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson), TheOrganization: (Handle<IFC2x3.IfcOrganization> | IFC2x3.IfcOrganization), Roles: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPersonAndOrganization;\n        ToTape(): any[];\n    }\n    class IfcPhysicalQuantity {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        PartOfComplex: (Handle<IFC2x3.IfcPhysicalComplexQuantity> | IFC2x3.IfcPhysicalComplexQuantity)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalQuantity;\n        ToTape(): any[];\n    }\n    class IfcPhysicalSimpleQuantity extends IFC2x3.IfcPhysicalQuantity {\n        Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalSimpleQuantity;\n        ToTape(): any[];\n    }\n    class IfcPostalAddress extends IFC2x3.IfcAddress {\n        InternalLocation: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        AddressLines: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null;\n        PostalBox: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Town: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Region: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        PostalCode: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Country: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Purpose: (Handle<IFC2x3.IfcAddressTypeEnum> | IFC2x3.IfcAddressTypeEnum) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, UserDefinedPurpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, InternalLocation: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, AddressLines: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null, PostalBox: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Town: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Region: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PostalCode: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Country: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPostalAddress;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedItem {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedItem;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedSymbol extends IFC2x3.IfcPreDefinedItem {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedSymbol;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedTerminatorSymbol extends IFC2x3.IfcPreDefinedSymbol {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedTerminatorSymbol;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedTextFont extends IFC2x3.IfcPreDefinedItem {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedTextFont;\n        ToTape(): any[];\n    }\n    class IfcPresentationLayerAssignment {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        AssignedItems: (Handle<IFC2x3.IfcLayeredItem> | IFC2x3.IfcLayeredItem)[];\n        Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, AssignedItems: (Handle<IFC2x3.IfcLayeredItem> | IFC2x3.IfcLayeredItem)[], Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationLayerAssignment;\n        ToTape(): any[];\n    }\n    class IfcPresentationLayerWithStyle extends IFC2x3.IfcPresentationLayerAssignment {\n        LayerOn: boolean;\n        LayerFrozen: boolean;\n        LayerBlocked: boolean;\n        LayerStyles: (Handle<IFC2x3.IfcPresentationStyleSelect> | IFC2x3.IfcPresentationStyleSelect)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, AssignedItems: (Handle<IFC2x3.IfcLayeredItem> | IFC2x3.IfcLayeredItem)[], Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, LayerOn: boolean, LayerFrozen: boolean, LayerBlocked: boolean, LayerStyles: (Handle<IFC2x3.IfcPresentationStyleSelect> | IFC2x3.IfcPresentationStyleSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationLayerWithStyle;\n        ToTape(): any[];\n    }\n    class IfcPresentationStyle {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationStyle;\n        ToTape(): any[];\n    }\n    class IfcPresentationStyleAssignment {\n        expressID: number;\n        type: number;\n        Styles: (Handle<IFC2x3.IfcPresentationStyleSelect> | IFC2x3.IfcPresentationStyleSelect)[];\n        constructor(expressID: number, type: number, Styles: (Handle<IFC2x3.IfcPresentationStyleSelect> | IFC2x3.IfcPresentationStyleSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationStyleAssignment;\n        ToTape(): any[];\n    }\n    class IfcProductRepresentation {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Representations: (Handle<IFC2x3.IfcRepresentation> | IFC2x3.IfcRepresentation)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Representations: (Handle<IFC2x3.IfcRepresentation> | IFC2x3.IfcRepresentation)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProductRepresentation;\n        ToTape(): any[];\n    }\n    class IfcProductsOfCombustionProperties extends IFC2x3.IfcMaterialProperties {\n        SpecificHeatCapacity: (Handle<IFC2x3.IfcSpecificHeatCapacityMeasure> | IFC2x3.IfcSpecificHeatCapacityMeasure) | null;\n        N20Content: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        COContent: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        CO2Content: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), SpecificHeatCapacity: (Handle<IFC2x3.IfcSpecificHeatCapacityMeasure> | IFC2x3.IfcSpecificHeatCapacityMeasure) | null, N20Content: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, COContent: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, CO2Content: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProductsOfCombustionProperties;\n        ToTape(): any[];\n    }\n    class IfcProfileDef {\n        expressID: number;\n        type: number;\n        ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum);\n        ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProfileDef;\n        ToTape(): any[];\n    }\n    class IfcProfileProperties {\n        expressID: number;\n        type: number;\n        ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ProfileDefinition: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null;\n        constructor(expressID: number, type: number, ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ProfileDefinition: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProfileProperties;\n        ToTape(): any[];\n    }\n    class IfcProperty {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        PropertyForDependance: (Handle<IFC2x3.IfcPropertyDependencyRelationship> | IFC2x3.IfcPropertyDependencyRelationship)[] | null;\n        PropertyDependsOn: (Handle<IFC2x3.IfcPropertyDependencyRelationship> | IFC2x3.IfcPropertyDependencyRelationship)[] | null;\n        PartOfComplex: (Handle<IFC2x3.IfcComplexProperty> | IFC2x3.IfcComplexProperty)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProperty;\n        ToTape(): any[];\n    }\n    class IfcPropertyConstraintRelationship {\n        expressID: number;\n        type: number;\n        RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint);\n        RelatedProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[];\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint), RelatedProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyConstraintRelationship;\n        ToTape(): any[];\n    }\n    class IfcPropertyDependencyRelationship {\n        expressID: number;\n        type: number;\n        DependingProperty: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty);\n        DependantProperty: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty);\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Expression: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, DependingProperty: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty), DependantProperty: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Expression: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyDependencyRelationship;\n        ToTape(): any[];\n    }\n    class IfcPropertyEnumeration {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        EnumerationValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), EnumerationValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[], Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyEnumeration;\n        ToTape(): any[];\n    }\n    class IfcQuantityArea extends IFC2x3.IfcPhysicalSimpleQuantity {\n        AreaValue: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null, AreaValue: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityArea;\n        ToTape(): any[];\n    }\n    class IfcQuantityCount extends IFC2x3.IfcPhysicalSimpleQuantity {\n        CountValue: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null, CountValue: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityCount;\n        ToTape(): any[];\n    }\n    class IfcQuantityLength extends IFC2x3.IfcPhysicalSimpleQuantity {\n        LengthValue: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null, LengthValue: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityLength;\n        ToTape(): any[];\n    }\n    class IfcQuantityTime extends IFC2x3.IfcPhysicalSimpleQuantity {\n        TimeValue: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null, TimeValue: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityTime;\n        ToTape(): any[];\n    }\n    class IfcQuantityVolume extends IFC2x3.IfcPhysicalSimpleQuantity {\n        VolumeValue: (Handle<IFC2x3.IfcVolumeMeasure> | IFC2x3.IfcVolumeMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null, VolumeValue: (Handle<IFC2x3.IfcVolumeMeasure> | IFC2x3.IfcVolumeMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityVolume;\n        ToTape(): any[];\n    }\n    class IfcQuantityWeight extends IFC2x3.IfcPhysicalSimpleQuantity {\n        WeightValue: (Handle<IFC2x3.IfcMassMeasure> | IFC2x3.IfcMassMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Unit: (Handle<IFC2x3.IfcNamedUnit> | IFC2x3.IfcNamedUnit) | null, WeightValue: (Handle<IFC2x3.IfcMassMeasure> | IFC2x3.IfcMassMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityWeight;\n        ToTape(): any[];\n    }\n    class IfcReferencesValueDocument {\n        expressID: number;\n        type: number;\n        ReferencedDocument: (Handle<IFC2x3.IfcDocumentSelect> | IFC2x3.IfcDocumentSelect);\n        ReferencingValues: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue)[];\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, ReferencedDocument: (Handle<IFC2x3.IfcDocumentSelect> | IFC2x3.IfcDocumentSelect), ReferencingValues: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReferencesValueDocument;\n        ToTape(): any[];\n    }\n    class IfcReinforcementBarProperties {\n        expressID: number;\n        type: number;\n        TotalCrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure);\n        SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        BarSurface: (Handle<IFC2x3.IfcReinforcingBarSurfaceEnum> | IFC2x3.IfcReinforcingBarSurfaceEnum) | null;\n        EffectiveDepth: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        NominalBarDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        BarCount: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure) | null;\n        constructor(expressID: number, type: number, TotalCrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure), SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), BarSurface: (Handle<IFC2x3.IfcReinforcingBarSurfaceEnum> | IFC2x3.IfcReinforcingBarSurfaceEnum) | null, EffectiveDepth: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, NominalBarDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, BarCount: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcementBarProperties;\n        ToTape(): any[];\n    }\n    class IfcRelaxation {\n        expressID: number;\n        type: number;\n        RelaxationValue: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure);\n        InitialStress: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure);\n        constructor(expressID: number, type: number, RelaxationValue: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure), InitialStress: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelaxation;\n        ToTape(): any[];\n    }\n    class IfcRepresentation {\n        expressID: number;\n        type: number;\n        ContextOfItems: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext);\n        RepresentationIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        RepresentationType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Items: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem)[];\n        RepresentationMap: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null;\n        LayerAssignments: (Handle<IFC2x3.IfcPresentationLayerAssignment> | IFC2x3.IfcPresentationLayerAssignment)[] | null;\n        OfProductRepresentation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation)[] | null;\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RepresentationType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Items: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentation;\n        ToTape(): any[];\n    }\n    class IfcRepresentationContext {\n        expressID: number;\n        type: number;\n        ContextIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ContextType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        RepresentationsInContext: (Handle<IFC2x3.IfcRepresentation> | IFC2x3.IfcRepresentation)[] | null;\n        constructor(expressID: number, type: number, ContextIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ContextType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationContext;\n        ToTape(): any[];\n    }\n    class IfcRepresentationItem {\n        expressID: number;\n        type: number;\n        LayerAssignments: (Handle<IFC2x3.IfcPresentationLayerAssignment> | IFC2x3.IfcPresentationLayerAssignment)[] | null;\n        StyledByItem: (Handle<IFC2x3.IfcStyledItem> | IFC2x3.IfcStyledItem)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationItem;\n        ToTape(): any[];\n    }\n    class IfcRepresentationMap {\n        expressID: number;\n        type: number;\n        MappingOrigin: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement);\n        MappedRepresentation: (Handle<IFC2x3.IfcRepresentation> | IFC2x3.IfcRepresentation);\n        MapUsage: (Handle<IFC2x3.IfcMappedItem> | IFC2x3.IfcMappedItem)[] | null;\n        constructor(expressID: number, type: number, MappingOrigin: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), MappedRepresentation: (Handle<IFC2x3.IfcRepresentation> | IFC2x3.IfcRepresentation));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationMap;\n        ToTape(): any[];\n    }\n    class IfcRibPlateProfileProperties extends IFC2x3.IfcProfileProperties {\n        Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        RibHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        RibWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        RibSpacing: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        Direction: (Handle<IFC2x3.IfcRibPlateDirectionEnum> | IFC2x3.IfcRibPlateDirectionEnum);\n        constructor(expressID: number, type: number, ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ProfileDefinition: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null, Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, RibHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, RibWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, RibSpacing: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, Direction: (Handle<IFC2x3.IfcRibPlateDirectionEnum> | IFC2x3.IfcRibPlateDirectionEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRibPlateProfileProperties;\n        ToTape(): any[];\n    }\n    class IfcRoot {\n        expressID: number;\n        type: number;\n        GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId);\n        OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory);\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoot;\n        ToTape(): any[];\n    }\n    class IfcSIUnit extends IFC2x3.IfcNamedUnit {\n        Prefix: (Handle<IFC2x3.IfcSIPrefix> | IFC2x3.IfcSIPrefix) | null;\n        Name: (Handle<IFC2x3.IfcSIUnitName> | IFC2x3.IfcSIUnitName);\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC2x3.IfcDimensionalExponents> | IFC2x3.IfcDimensionalExponents), UnitType: (Handle<IFC2x3.IfcUnitEnum> | IFC2x3.IfcUnitEnum), Prefix: (Handle<IFC2x3.IfcSIPrefix> | IFC2x3.IfcSIPrefix) | null, Name: (Handle<IFC2x3.IfcSIUnitName> | IFC2x3.IfcSIUnitName));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSIUnit;\n        ToTape(): any[];\n    }\n    class IfcSectionProperties {\n        expressID: number;\n        type: number;\n        SectionType: (Handle<IFC2x3.IfcSectionTypeEnum> | IFC2x3.IfcSectionTypeEnum);\n        StartProfile: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef);\n        EndProfile: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null;\n        constructor(expressID: number, type: number, SectionType: (Handle<IFC2x3.IfcSectionTypeEnum> | IFC2x3.IfcSectionTypeEnum), StartProfile: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), EndProfile: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSectionProperties;\n        ToTape(): any[];\n    }\n    class IfcSectionReinforcementProperties {\n        expressID: number;\n        type: number;\n        LongitudinalStartPosition: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        LongitudinalEndPosition: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        TransversePosition: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        ReinforcementRole: (Handle<IFC2x3.IfcReinforcingBarRoleEnum> | IFC2x3.IfcReinforcingBarRoleEnum);\n        SectionDefinition: (Handle<IFC2x3.IfcSectionProperties> | IFC2x3.IfcSectionProperties);\n        CrossSectionReinforcementDefinitions: (Handle<IFC2x3.IfcReinforcementBarProperties> | IFC2x3.IfcReinforcementBarProperties)[];\n        constructor(expressID: number, type: number, LongitudinalStartPosition: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), LongitudinalEndPosition: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), TransversePosition: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ReinforcementRole: (Handle<IFC2x3.IfcReinforcingBarRoleEnum> | IFC2x3.IfcReinforcingBarRoleEnum), SectionDefinition: (Handle<IFC2x3.IfcSectionProperties> | IFC2x3.IfcSectionProperties), CrossSectionReinforcementDefinitions: (Handle<IFC2x3.IfcReinforcementBarProperties> | IFC2x3.IfcReinforcementBarProperties)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSectionReinforcementProperties;\n        ToTape(): any[];\n    }\n    class IfcShapeAspect {\n        expressID: number;\n        type: number;\n        ShapeRepresentations: (Handle<IFC2x3.IfcShapeModel> | IFC2x3.IfcShapeModel)[];\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        ProductDefinitional: boolean;\n        PartOfProductDefinitionShape: (Handle<IFC2x3.IfcProductDefinitionShape> | IFC2x3.IfcProductDefinitionShape);\n        constructor(expressID: number, type: number, ShapeRepresentations: (Handle<IFC2x3.IfcShapeModel> | IFC2x3.IfcShapeModel)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ProductDefinitional: boolean, PartOfProductDefinitionShape: (Handle<IFC2x3.IfcProductDefinitionShape> | IFC2x3.IfcProductDefinitionShape));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShapeAspect;\n        ToTape(): any[];\n    }\n    class IfcShapeModel extends IFC2x3.IfcRepresentation {\n        OfShapeAspect: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect)[] | null;\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RepresentationType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Items: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShapeModel;\n        ToTape(): any[];\n    }\n    class IfcShapeRepresentation extends IFC2x3.IfcShapeModel {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RepresentationType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Items: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShapeRepresentation;\n        ToTape(): any[];\n    }\n    class IfcSimpleProperty extends IFC2x3.IfcProperty {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSimpleProperty;\n        ToTape(): any[];\n    }\n    class IfcStructuralConnectionCondition {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralConnectionCondition;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoad {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoad;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadStatic extends IFC2x3.IfcStructuralLoad {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadStatic;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadTemperature extends IFC2x3.IfcStructuralLoadStatic {\n        DeltaT_Constant: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        DeltaT_Y: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        DeltaT_Z: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, DeltaT_Constant: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null, DeltaT_Y: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null, DeltaT_Z: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadTemperature;\n        ToTape(): any[];\n    }\n    class IfcStyleModel extends IFC2x3.IfcRepresentation {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RepresentationType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Items: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStyleModel;\n        ToTape(): any[];\n    }\n    class IfcStyledItem extends IFC2x3.IfcRepresentationItem {\n        Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null;\n        Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[];\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStyledItem;\n        ToTape(): any[];\n    }\n    class IfcStyledRepresentation extends IFC2x3.IfcStyleModel {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RepresentationType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Items: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStyledRepresentation;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyle extends IFC2x3.IfcPresentationStyle {\n        Side: (Handle<IFC2x3.IfcSurfaceSide> | IFC2x3.IfcSurfaceSide);\n        Styles: (Handle<IFC2x3.IfcSurfaceStyleElementSelect> | IFC2x3.IfcSurfaceStyleElementSelect)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Side: (Handle<IFC2x3.IfcSurfaceSide> | IFC2x3.IfcSurfaceSide), Styles: (Handle<IFC2x3.IfcSurfaceStyleElementSelect> | IFC2x3.IfcSurfaceStyleElementSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyle;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleLighting {\n        expressID: number;\n        type: number;\n        DiffuseTransmissionColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb);\n        DiffuseReflectionColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb);\n        TransmissionColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb);\n        ReflectanceColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb);\n        constructor(expressID: number, type: number, DiffuseTransmissionColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), DiffuseReflectionColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), TransmissionColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), ReflectanceColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleLighting;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleRefraction {\n        expressID: number;\n        type: number;\n        RefractionIndex: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal) | null;\n        DispersionFactor: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal) | null;\n        constructor(expressID: number, type: number, RefractionIndex: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal) | null, DispersionFactor: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleRefraction;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleShading {\n        expressID: number;\n        type: number;\n        SurfaceColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb);\n        constructor(expressID: number, type: number, SurfaceColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleShading;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleWithTextures {\n        expressID: number;\n        type: number;\n        Textures: (Handle<IFC2x3.IfcSurfaceTexture> | IFC2x3.IfcSurfaceTexture)[];\n        constructor(expressID: number, type: number, Textures: (Handle<IFC2x3.IfcSurfaceTexture> | IFC2x3.IfcSurfaceTexture)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleWithTextures;\n        ToTape(): any[];\n    }\n    class IfcSurfaceTexture {\n        expressID: number;\n        type: number;\n        RepeatS: boolean;\n        RepeatT: boolean;\n        TextureType: (Handle<IFC2x3.IfcSurfaceTextureEnum> | IFC2x3.IfcSurfaceTextureEnum);\n        TextureTransform: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D) | null;\n        constructor(expressID: number, type: number, RepeatS: boolean, RepeatT: boolean, TextureType: (Handle<IFC2x3.IfcSurfaceTextureEnum> | IFC2x3.IfcSurfaceTextureEnum), TextureTransform: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceTexture;\n        ToTape(): any[];\n    }\n    class IfcSymbolStyle extends IFC2x3.IfcPresentationStyle {\n        StyleOfSymbol: (Handle<IFC2x3.IfcSymbolStyleSelect> | IFC2x3.IfcSymbolStyleSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, StyleOfSymbol: (Handle<IFC2x3.IfcSymbolStyleSelect> | IFC2x3.IfcSymbolStyleSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSymbolStyle;\n        ToTape(): any[];\n    }\n    class IfcTable {\n        expressID: number;\n        type: number;\n        Name: string;\n        Rows: (Handle<IFC2x3.IfcTableRow> | IFC2x3.IfcTableRow)[];\n        constructor(expressID: number, type: number, Name: string, Rows: (Handle<IFC2x3.IfcTableRow> | IFC2x3.IfcTableRow)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTable;\n        ToTape(): any[];\n    }\n    class IfcTableRow {\n        expressID: number;\n        type: number;\n        RowCells: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        IsHeading: boolean;\n        OfTable: (Handle<IFC2x3.IfcTable> | IFC2x3.IfcTable) | null;\n        constructor(expressID: number, type: number, RowCells: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[], IsHeading: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTableRow;\n        ToTape(): any[];\n    }\n    class IfcTelecomAddress extends IFC2x3.IfcAddress {\n        TelephoneNumbers: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null;\n        FacsimileNumbers: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null;\n        PagerNumber: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ElectronicMailAddresses: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null;\n        WWWHomePageURL: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Purpose: (Handle<IFC2x3.IfcAddressTypeEnum> | IFC2x3.IfcAddressTypeEnum) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, UserDefinedPurpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TelephoneNumbers: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null, FacsimileNumbers: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null, PagerNumber: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElectronicMailAddresses: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel)[] | null, WWWHomePageURL: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTelecomAddress;\n        ToTape(): any[];\n    }\n    class IfcTextStyle extends IFC2x3.IfcPresentationStyle {\n        TextCharacterAppearance: (Handle<IFC2x3.IfcCharacterStyleSelect> | IFC2x3.IfcCharacterStyleSelect) | null;\n        TextStyle: (Handle<IFC2x3.IfcTextStyleSelect> | IFC2x3.IfcTextStyleSelect) | null;\n        TextFontStyle: (Handle<IFC2x3.IfcTextFontSelect> | IFC2x3.IfcTextFontSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TextCharacterAppearance: (Handle<IFC2x3.IfcCharacterStyleSelect> | IFC2x3.IfcCharacterStyleSelect) | null, TextStyle: (Handle<IFC2x3.IfcTextStyleSelect> | IFC2x3.IfcTextStyleSelect) | null, TextFontStyle: (Handle<IFC2x3.IfcTextFontSelect> | IFC2x3.IfcTextFontSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyle;\n        ToTape(): any[];\n    }\n    class IfcTextStyleFontModel extends IFC2x3.IfcPreDefinedTextFont {\n        FontFamily: (Handle<IFC2x3.IfcTextFontName> | IFC2x3.IfcTextFontName)[] | null;\n        FontStyle: (Handle<IFC2x3.IfcFontStyle> | IFC2x3.IfcFontStyle) | null;\n        FontVariant: (Handle<IFC2x3.IfcFontVariant> | IFC2x3.IfcFontVariant) | null;\n        FontWeight: (Handle<IFC2x3.IfcFontWeight> | IFC2x3.IfcFontWeight) | null;\n        FontSize: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), FontFamily: (Handle<IFC2x3.IfcTextFontName> | IFC2x3.IfcTextFontName)[] | null, FontStyle: (Handle<IFC2x3.IfcFontStyle> | IFC2x3.IfcFontStyle) | null, FontVariant: (Handle<IFC2x3.IfcFontVariant> | IFC2x3.IfcFontVariant) | null, FontWeight: (Handle<IFC2x3.IfcFontWeight> | IFC2x3.IfcFontWeight) | null, FontSize: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleFontModel;\n        ToTape(): any[];\n    }\n    class IfcTextStyleForDefinedFont {\n        expressID: number;\n        type: number;\n        Colour: (Handle<IFC2x3.IfcColour> | IFC2x3.IfcColour);\n        BackgroundColour: (Handle<IFC2x3.IfcColour> | IFC2x3.IfcColour) | null;\n        constructor(expressID: number, type: number, Colour: (Handle<IFC2x3.IfcColour> | IFC2x3.IfcColour), BackgroundColour: (Handle<IFC2x3.IfcColour> | IFC2x3.IfcColour) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleForDefinedFont;\n        ToTape(): any[];\n    }\n    class IfcTextStyleTextModel {\n        expressID: number;\n        type: number;\n        TextIndent: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null;\n        TextAlign: (Handle<IFC2x3.IfcTextAlignment> | IFC2x3.IfcTextAlignment) | null;\n        TextDecoration: (Handle<IFC2x3.IfcTextDecoration> | IFC2x3.IfcTextDecoration) | null;\n        LetterSpacing: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null;\n        WordSpacing: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null;\n        TextTransform: (Handle<IFC2x3.IfcTextTransformation> | IFC2x3.IfcTextTransformation) | null;\n        LineHeight: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null;\n        constructor(expressID: number, type: number, TextIndent: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null, TextAlign: (Handle<IFC2x3.IfcTextAlignment> | IFC2x3.IfcTextAlignment) | null, TextDecoration: (Handle<IFC2x3.IfcTextDecoration> | IFC2x3.IfcTextDecoration) | null, LetterSpacing: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null, WordSpacing: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null, TextTransform: (Handle<IFC2x3.IfcTextTransformation> | IFC2x3.IfcTextTransformation) | null, LineHeight: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleTextModel;\n        ToTape(): any[];\n    }\n    class IfcTextStyleWithBoxCharacteristics {\n        expressID: number;\n        type: number;\n        BoxHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        BoxWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        BoxSlantAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        BoxRotateAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        CharacterSpacing: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null;\n        constructor(expressID: number, type: number, BoxHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, BoxWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, BoxSlantAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, BoxRotateAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, CharacterSpacing: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleWithBoxCharacteristics;\n        ToTape(): any[];\n    }\n    class IfcTextureCoordinate {\n        expressID: number;\n        type: number;\n        AnnotatedSurface: (Handle<IFC2x3.IfcAnnotationSurface> | IFC2x3.IfcAnnotationSurface)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureCoordinate;\n        ToTape(): any[];\n    }\n    class IfcTextureCoordinateGenerator extends IFC2x3.IfcTextureCoordinate {\n        Mode: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Parameter: (Handle<IFC2x3.IfcSimpleValue> | IFC2x3.IfcSimpleValue)[];\n        constructor(expressID: number, type: number, Mode: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Parameter: (Handle<IFC2x3.IfcSimpleValue> | IFC2x3.IfcSimpleValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureCoordinateGenerator;\n        ToTape(): any[];\n    }\n    class IfcTextureMap extends IFC2x3.IfcTextureCoordinate {\n        TextureMaps: (Handle<IFC2x3.IfcVertexBasedTextureMap> | IFC2x3.IfcVertexBasedTextureMap)[];\n        constructor(expressID: number, type: number, TextureMaps: (Handle<IFC2x3.IfcVertexBasedTextureMap> | IFC2x3.IfcVertexBasedTextureMap)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureMap;\n        ToTape(): any[];\n    }\n    class IfcTextureVertex {\n        expressID: number;\n        type: number;\n        Coordinates: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue)[];\n        constructor(expressID: number, type: number, Coordinates: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureVertex;\n        ToTape(): any[];\n    }\n    class IfcThermalMaterialProperties extends IFC2x3.IfcMaterialProperties {\n        SpecificHeatCapacity: (Handle<IFC2x3.IfcSpecificHeatCapacityMeasure> | IFC2x3.IfcSpecificHeatCapacityMeasure) | null;\n        BoilingPoint: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        FreezingPoint: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        ThermalConductivity: (Handle<IFC2x3.IfcThermalConductivityMeasure> | IFC2x3.IfcThermalConductivityMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), SpecificHeatCapacity: (Handle<IFC2x3.IfcSpecificHeatCapacityMeasure> | IFC2x3.IfcSpecificHeatCapacityMeasure) | null, BoilingPoint: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null, FreezingPoint: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null, ThermalConductivity: (Handle<IFC2x3.IfcThermalConductivityMeasure> | IFC2x3.IfcThermalConductivityMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcThermalMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcTimeSeries {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect);\n        EndTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect);\n        TimeSeriesDataType: (Handle<IFC2x3.IfcTimeSeriesDataTypeEnum> | IFC2x3.IfcTimeSeriesDataTypeEnum);\n        DataOrigin: (Handle<IFC2x3.IfcDataOriginEnum> | IFC2x3.IfcDataOriginEnum);\n        UserDefinedDataOrigin: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null;\n        DocumentedBy: (Handle<IFC2x3.IfcTimeSeriesReferenceRelationship> | IFC2x3.IfcTimeSeriesReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), EndTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), TimeSeriesDataType: (Handle<IFC2x3.IfcTimeSeriesDataTypeEnum> | IFC2x3.IfcTimeSeriesDataTypeEnum), DataOrigin: (Handle<IFC2x3.IfcDataOriginEnum> | IFC2x3.IfcDataOriginEnum), UserDefinedDataOrigin: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeries;\n        ToTape(): any[];\n    }\n    class IfcTimeSeriesReferenceRelationship {\n        expressID: number;\n        type: number;\n        ReferencedTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries);\n        TimeSeriesReferences: (Handle<IFC2x3.IfcDocumentSelect> | IFC2x3.IfcDocumentSelect)[];\n        constructor(expressID: number, type: number, ReferencedTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries), TimeSeriesReferences: (Handle<IFC2x3.IfcDocumentSelect> | IFC2x3.IfcDocumentSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeriesReferenceRelationship;\n        ToTape(): any[];\n    }\n    class IfcTimeSeriesValue {\n        expressID: number;\n        type: number;\n        ListValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        constructor(expressID: number, type: number, ListValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeriesValue;\n        ToTape(): any[];\n    }\n    class IfcTopologicalRepresentationItem extends IFC2x3.IfcRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTopologicalRepresentationItem;\n        ToTape(): any[];\n    }\n    class IfcTopologyRepresentation extends IFC2x3.IfcShapeModel {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RepresentationType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Items: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTopologyRepresentation;\n        ToTape(): any[];\n    }\n    class IfcUnitAssignment {\n        expressID: number;\n        type: number;\n        Units: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit)[];\n        constructor(expressID: number, type: number, Units: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUnitAssignment;\n        ToTape(): any[];\n    }\n    class IfcVertex extends IFC2x3.IfcTopologicalRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVertex;\n        ToTape(): any[];\n    }\n    class IfcVertexBasedTextureMap {\n        expressID: number;\n        type: number;\n        TextureVertices: (Handle<IFC2x3.IfcTextureVertex> | IFC2x3.IfcTextureVertex)[];\n        TexturePoints: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[];\n        constructor(expressID: number, type: number, TextureVertices: (Handle<IFC2x3.IfcTextureVertex> | IFC2x3.IfcTextureVertex)[], TexturePoints: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVertexBasedTextureMap;\n        ToTape(): any[];\n    }\n    class IfcVertexPoint extends IFC2x3.IfcVertex {\n        VertexGeometry: (Handle<IFC2x3.IfcPoint> | IFC2x3.IfcPoint);\n        constructor(expressID: number, type: number, VertexGeometry: (Handle<IFC2x3.IfcPoint> | IFC2x3.IfcPoint));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVertexPoint;\n        ToTape(): any[];\n    }\n    class IfcVirtualGridIntersection {\n        expressID: number;\n        type: number;\n        IntersectingAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[];\n        OffsetDistances: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure)[];\n        constructor(expressID: number, type: number, IntersectingAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[], OffsetDistances: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVirtualGridIntersection;\n        ToTape(): any[];\n    }\n    class IfcWaterProperties extends IFC2x3.IfcMaterialProperties {\n        IsPotable: boolean | null;\n        Hardness: (Handle<IFC2x3.IfcIonConcentrationMeasure> | IFC2x3.IfcIonConcentrationMeasure) | null;\n        AlkalinityConcentration: (Handle<IFC2x3.IfcIonConcentrationMeasure> | IFC2x3.IfcIonConcentrationMeasure) | null;\n        AcidityConcentration: (Handle<IFC2x3.IfcIonConcentrationMeasure> | IFC2x3.IfcIonConcentrationMeasure) | null;\n        ImpuritiesContent: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        PHLevel: (Handle<IFC2x3.IfcPHMeasure> | IFC2x3.IfcPHMeasure) | null;\n        DissolvedSolidsContent: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), IsPotable: boolean | null, Hardness: (Handle<IFC2x3.IfcIonConcentrationMeasure> | IFC2x3.IfcIonConcentrationMeasure) | null, AlkalinityConcentration: (Handle<IFC2x3.IfcIonConcentrationMeasure> | IFC2x3.IfcIonConcentrationMeasure) | null, AcidityConcentration: (Handle<IFC2x3.IfcIonConcentrationMeasure> | IFC2x3.IfcIonConcentrationMeasure) | null, ImpuritiesContent: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, PHLevel: (Handle<IFC2x3.IfcPHMeasure> | IFC2x3.IfcPHMeasure) | null, DissolvedSolidsContent: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWaterProperties;\n        ToTape(): any[];\n    }\n    class IfcAnnotationOccurrence extends IFC2x3.IfcStyledItem {\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationOccurrence;\n        ToTape(): any[];\n    }\n    class IfcAnnotationSurfaceOccurrence extends IFC2x3.IfcAnnotationOccurrence {\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationSurfaceOccurrence;\n        ToTape(): any[];\n    }\n    class IfcAnnotationSymbolOccurrence extends IFC2x3.IfcAnnotationOccurrence {\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationSymbolOccurrence;\n        ToTape(): any[];\n    }\n    class IfcAnnotationTextOccurrence extends IFC2x3.IfcAnnotationOccurrence {\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationTextOccurrence;\n        ToTape(): any[];\n    }\n    class IfcArbitraryClosedProfileDef extends IFC2x3.IfcProfileDef {\n        OuterCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, OuterCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryClosedProfileDef;\n        ToTape(): any[];\n    }\n    class IfcArbitraryOpenProfileDef extends IFC2x3.IfcProfileDef {\n        Curve: (Handle<IFC2x3.IfcBoundedCurve> | IFC2x3.IfcBoundedCurve);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Curve: (Handle<IFC2x3.IfcBoundedCurve> | IFC2x3.IfcBoundedCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryOpenProfileDef;\n        ToTape(): any[];\n    }\n    class IfcArbitraryProfileDefWithVoids extends IFC2x3.IfcArbitraryClosedProfileDef {\n        InnerCurves: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve)[];\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, OuterCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), InnerCurves: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryProfileDefWithVoids;\n        ToTape(): any[];\n    }\n    class IfcBlobTexture extends IFC2x3.IfcSurfaceTexture {\n        RasterFormat: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        RasterCode: boolean;\n        constructor(expressID: number, type: number, RepeatS: boolean, RepeatT: boolean, TextureType: (Handle<IFC2x3.IfcSurfaceTextureEnum> | IFC2x3.IfcSurfaceTextureEnum), TextureTransform: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D) | null, RasterFormat: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), RasterCode: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBlobTexture;\n        ToTape(): any[];\n    }\n    class IfcCenterLineProfileDef extends IFC2x3.IfcArbitraryOpenProfileDef {\n        Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Curve: (Handle<IFC2x3.IfcBoundedCurve> | IFC2x3.IfcBoundedCurve), Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCenterLineProfileDef;\n        ToTape(): any[];\n    }\n    class IfcClassificationReference extends IFC2x3.IfcExternalReference {\n        ReferencedSource: (Handle<IFC2x3.IfcClassification> | IFC2x3.IfcClassification) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ReferencedSource: (Handle<IFC2x3.IfcClassification> | IFC2x3.IfcClassification) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassificationReference;\n        ToTape(): any[];\n    }\n    class IfcColourRgb extends IFC2x3.IfcColourSpecification {\n        Red: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure);\n        Green: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure);\n        Blue: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Red: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure), Green: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure), Blue: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColourRgb;\n        ToTape(): any[];\n    }\n    class IfcComplexProperty extends IFC2x3.IfcProperty {\n        UsageName: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        HasProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, UsageName: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), HasProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcComplexProperty;\n        ToTape(): any[];\n    }\n    class IfcCompositeProfileDef extends IFC2x3.IfcProfileDef {\n        Profiles: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef)[];\n        Label: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Profiles: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef)[], Label: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcConnectedFaceSet extends IFC2x3.IfcTopologicalRepresentationItem {\n        CfsFaces: (Handle<IFC2x3.IfcFace> | IFC2x3.IfcFace)[];\n        constructor(expressID: number, type: number, CfsFaces: (Handle<IFC2x3.IfcFace> | IFC2x3.IfcFace)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectedFaceSet;\n        ToTape(): any[];\n    }\n    class IfcConnectionCurveGeometry extends IFC2x3.IfcConnectionGeometry {\n        CurveOnRelatingElement: (Handle<IFC2x3.IfcCurveOrEdgeCurve> | IFC2x3.IfcCurveOrEdgeCurve);\n        CurveOnRelatedElement: (Handle<IFC2x3.IfcCurveOrEdgeCurve> | IFC2x3.IfcCurveOrEdgeCurve) | null;\n        constructor(expressID: number, type: number, CurveOnRelatingElement: (Handle<IFC2x3.IfcCurveOrEdgeCurve> | IFC2x3.IfcCurveOrEdgeCurve), CurveOnRelatedElement: (Handle<IFC2x3.IfcCurveOrEdgeCurve> | IFC2x3.IfcCurveOrEdgeCurve) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionCurveGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionPointEccentricity extends IFC2x3.IfcConnectionPointGeometry {\n        EccentricityInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        EccentricityInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        EccentricityInZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, PointOnRelatingElement: (Handle<IFC2x3.IfcPointOrVertexPoint> | IFC2x3.IfcPointOrVertexPoint), PointOnRelatedElement: (Handle<IFC2x3.IfcPointOrVertexPoint> | IFC2x3.IfcPointOrVertexPoint) | null, EccentricityInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, EccentricityInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, EccentricityInZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionPointEccentricity;\n        ToTape(): any[];\n    }\n    class IfcContextDependentUnit extends IFC2x3.IfcNamedUnit {\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC2x3.IfcDimensionalExponents> | IFC2x3.IfcDimensionalExponents), UnitType: (Handle<IFC2x3.IfcUnitEnum> | IFC2x3.IfcUnitEnum), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcContextDependentUnit;\n        ToTape(): any[];\n    }\n    class IfcConversionBasedUnit extends IFC2x3.IfcNamedUnit {\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        ConversionFactor: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit);\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC2x3.IfcDimensionalExponents> | IFC2x3.IfcDimensionalExponents), UnitType: (Handle<IFC2x3.IfcUnitEnum> | IFC2x3.IfcUnitEnum), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), ConversionFactor: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConversionBasedUnit;\n        ToTape(): any[];\n    }\n    class IfcCurveStyle extends IFC2x3.IfcPresentationStyle {\n        CurveFont: (Handle<IFC2x3.IfcCurveFontOrScaledCurveFontSelect> | IFC2x3.IfcCurveFontOrScaledCurveFontSelect) | null;\n        CurveWidth: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null;\n        CurveColour: (Handle<IFC2x3.IfcColour> | IFC2x3.IfcColour) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CurveFont: (Handle<IFC2x3.IfcCurveFontOrScaledCurveFontSelect> | IFC2x3.IfcCurveFontOrScaledCurveFontSelect) | null, CurveWidth: (Handle<IFC2x3.IfcSizeSelect> | IFC2x3.IfcSizeSelect) | null, CurveColour: (Handle<IFC2x3.IfcColour> | IFC2x3.IfcColour) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyle;\n        ToTape(): any[];\n    }\n    class IfcDerivedProfileDef extends IFC2x3.IfcProfileDef {\n        ParentProfile: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef);\n        Operator: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D);\n        Label: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ParentProfile: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Operator: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D), Label: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedProfileDef;\n        ToTape(): any[];\n    }\n    class IfcDimensionCalloutRelationship extends IFC2x3.IfcDraughtingCalloutRelationship {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout), RelatedDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionCalloutRelationship;\n        ToTape(): any[];\n    }\n    class IfcDimensionPair extends IFC2x3.IfcDraughtingCalloutRelationship {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout), RelatedDraughtingCallout: (Handle<IFC2x3.IfcDraughtingCallout> | IFC2x3.IfcDraughtingCallout));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionPair;\n        ToTape(): any[];\n    }\n    class IfcDocumentReference extends IFC2x3.IfcExternalReference {\n        ReferenceToDocument: (Handle<IFC2x3.IfcDocumentInformation> | IFC2x3.IfcDocumentInformation)[] | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ItemReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentReference;\n        ToTape(): any[];\n    }\n    class IfcDraughtingPreDefinedTextFont extends IFC2x3.IfcPreDefinedTextFont {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingPreDefinedTextFont;\n        ToTape(): any[];\n    }\n    class IfcEdge extends IFC2x3.IfcTopologicalRepresentationItem {\n        EdgeStart: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex);\n        EdgeEnd: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex);\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex), EdgeEnd: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEdge;\n        ToTape(): any[];\n    }\n    class IfcEdgeCurve extends IFC2x3.IfcEdge {\n        EdgeGeometry: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        SameSense: boolean;\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex), EdgeEnd: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex), EdgeGeometry: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), SameSense: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEdgeCurve;\n        ToTape(): any[];\n    }\n    class IfcExtendedMaterialProperties extends IFC2x3.IfcMaterialProperties {\n        ExtendedProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[];\n        Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), ExtendedProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[], Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExtendedMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcFace extends IFC2x3.IfcTopologicalRepresentationItem {\n        Bounds: (Handle<IFC2x3.IfcFaceBound> | IFC2x3.IfcFaceBound)[];\n        constructor(expressID: number, type: number, Bounds: (Handle<IFC2x3.IfcFaceBound> | IFC2x3.IfcFaceBound)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFace;\n        ToTape(): any[];\n    }\n    class IfcFaceBound extends IFC2x3.IfcTopologicalRepresentationItem {\n        Bound: (Handle<IFC2x3.IfcLoop> | IFC2x3.IfcLoop);\n        Orientation: boolean;\n        constructor(expressID: number, type: number, Bound: (Handle<IFC2x3.IfcLoop> | IFC2x3.IfcLoop), Orientation: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceBound;\n        ToTape(): any[];\n    }\n    class IfcFaceOuterBound extends IFC2x3.IfcFaceBound {\n        constructor(expressID: number, type: number, Bound: (Handle<IFC2x3.IfcLoop> | IFC2x3.IfcLoop), Orientation: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceOuterBound;\n        ToTape(): any[];\n    }\n    class IfcFaceSurface extends IFC2x3.IfcFace {\n        FaceSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface);\n        SameSense: boolean;\n        constructor(expressID: number, type: number, Bounds: (Handle<IFC2x3.IfcFaceBound> | IFC2x3.IfcFaceBound)[], FaceSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface), SameSense: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceSurface;\n        ToTape(): any[];\n    }\n    class IfcFailureConnectionCondition extends IFC2x3.IfcStructuralConnectionCondition {\n        TensionFailureX: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        TensionFailureY: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        TensionFailureZ: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        CompressionFailureX: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        CompressionFailureY: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        CompressionFailureZ: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TensionFailureX: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, TensionFailureY: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, TensionFailureZ: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, CompressionFailureX: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, CompressionFailureY: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, CompressionFailureZ: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFailureConnectionCondition;\n        ToTape(): any[];\n    }\n    class IfcFillAreaStyle extends IFC2x3.IfcPresentationStyle {\n        FillStyles: (Handle<IFC2x3.IfcFillStyleSelect> | IFC2x3.IfcFillStyleSelect)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, FillStyles: (Handle<IFC2x3.IfcFillStyleSelect> | IFC2x3.IfcFillStyleSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyle;\n        ToTape(): any[];\n    }\n    class IfcFuelProperties extends IFC2x3.IfcMaterialProperties {\n        CombustionTemperature: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        CarbonContent: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        LowerHeatingValue: (Handle<IFC2x3.IfcHeatingValueMeasure> | IFC2x3.IfcHeatingValueMeasure) | null;\n        HigherHeatingValue: (Handle<IFC2x3.IfcHeatingValueMeasure> | IFC2x3.IfcHeatingValueMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), CombustionTemperature: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null, CarbonContent: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, LowerHeatingValue: (Handle<IFC2x3.IfcHeatingValueMeasure> | IFC2x3.IfcHeatingValueMeasure) | null, HigherHeatingValue: (Handle<IFC2x3.IfcHeatingValueMeasure> | IFC2x3.IfcHeatingValueMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFuelProperties;\n        ToTape(): any[];\n    }\n    class IfcGeneralMaterialProperties extends IFC2x3.IfcMaterialProperties {\n        MolecularWeight: (Handle<IFC2x3.IfcMolecularWeightMeasure> | IFC2x3.IfcMolecularWeightMeasure) | null;\n        Porosity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        MassDensity: (Handle<IFC2x3.IfcMassDensityMeasure> | IFC2x3.IfcMassDensityMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), MolecularWeight: (Handle<IFC2x3.IfcMolecularWeightMeasure> | IFC2x3.IfcMolecularWeightMeasure) | null, Porosity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, MassDensity: (Handle<IFC2x3.IfcMassDensityMeasure> | IFC2x3.IfcMassDensityMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeneralMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcGeneralProfileProperties extends IFC2x3.IfcProfileProperties {\n        PhysicalWeight: (Handle<IFC2x3.IfcMassPerLengthMeasure> | IFC2x3.IfcMassPerLengthMeasure) | null;\n        Perimeter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        MinimumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        MaximumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null;\n        constructor(expressID: number, type: number, ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ProfileDefinition: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null, PhysicalWeight: (Handle<IFC2x3.IfcMassPerLengthMeasure> | IFC2x3.IfcMassPerLengthMeasure) | null, Perimeter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MinimumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MaximumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeneralProfileProperties;\n        ToTape(): any[];\n    }\n    class IfcGeometricRepresentationContext extends IFC2x3.IfcRepresentationContext {\n        CoordinateSpaceDimension: (Handle<IFC2x3.IfcDimensionCount> | IFC2x3.IfcDimensionCount);\n        Precision: number | null;\n        WorldCoordinateSystem: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement);\n        TrueNorth: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        HasSubContexts: (Handle<IFC2x3.IfcGeometricRepresentationSubContext> | IFC2x3.IfcGeometricRepresentationSubContext)[] | null;\n        constructor(expressID: number, type: number, ContextIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ContextType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CoordinateSpaceDimension: (Handle<IFC2x3.IfcDimensionCount> | IFC2x3.IfcDimensionCount), Precision: number | null, WorldCoordinateSystem: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), TrueNorth: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationContext;\n        ToTape(): any[];\n    }\n    class IfcGeometricRepresentationItem extends IFC2x3.IfcRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationItem;\n        ToTape(): any[];\n    }\n    class IfcGeometricRepresentationSubContext extends IFC2x3.IfcGeometricRepresentationContext {\n        ParentContext: (Handle<IFC2x3.IfcGeometricRepresentationContext> | IFC2x3.IfcGeometricRepresentationContext);\n        TargetScale: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        TargetView: (Handle<IFC2x3.IfcGeometricProjectionEnum> | IFC2x3.IfcGeometricProjectionEnum);\n        UserDefinedTargetView: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, ContextIdentifier: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ContextType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CoordinateSpaceDimension: (Handle<IFC2x3.IfcDimensionCount> | IFC2x3.IfcDimensionCount), Precision: number | null, WorldCoordinateSystem: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), TrueNorth: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, ParentContext: (Handle<IFC2x3.IfcGeometricRepresentationContext> | IFC2x3.IfcGeometricRepresentationContext), TargetScale: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, TargetView: (Handle<IFC2x3.IfcGeometricProjectionEnum> | IFC2x3.IfcGeometricProjectionEnum), UserDefinedTargetView: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationSubContext;\n        ToTape(): any[];\n    }\n    class IfcGeometricSet extends IFC2x3.IfcGeometricRepresentationItem {\n        Elements: (Handle<IFC2x3.IfcGeometricSetSelect> | IFC2x3.IfcGeometricSetSelect)[];\n        constructor(expressID: number, type: number, Elements: (Handle<IFC2x3.IfcGeometricSetSelect> | IFC2x3.IfcGeometricSetSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricSet;\n        ToTape(): any[];\n    }\n    class IfcGridPlacement extends IFC2x3.IfcObjectPlacement {\n        PlacementLocation: (Handle<IFC2x3.IfcVirtualGridIntersection> | IFC2x3.IfcVirtualGridIntersection);\n        PlacementRefDirection: (Handle<IFC2x3.IfcVirtualGridIntersection> | IFC2x3.IfcVirtualGridIntersection) | null;\n        constructor(expressID: number, type: number, PlacementLocation: (Handle<IFC2x3.IfcVirtualGridIntersection> | IFC2x3.IfcVirtualGridIntersection), PlacementRefDirection: (Handle<IFC2x3.IfcVirtualGridIntersection> | IFC2x3.IfcVirtualGridIntersection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGridPlacement;\n        ToTape(): any[];\n    }\n    class IfcHalfSpaceSolid extends IFC2x3.IfcGeometricRepresentationItem {\n        BaseSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface);\n        AgreementFlag: boolean;\n        constructor(expressID: number, type: number, BaseSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface), AgreementFlag: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHalfSpaceSolid;\n        ToTape(): any[];\n    }\n    class IfcHygroscopicMaterialProperties extends IFC2x3.IfcMaterialProperties {\n        UpperVaporResistanceFactor: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        LowerVaporResistanceFactor: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        IsothermalMoistureCapacity: (Handle<IFC2x3.IfcIsothermalMoistureCapacityMeasure> | IFC2x3.IfcIsothermalMoistureCapacityMeasure) | null;\n        VaporPermeability: (Handle<IFC2x3.IfcVaporPermeabilityMeasure> | IFC2x3.IfcVaporPermeabilityMeasure) | null;\n        MoistureDiffusivity: (Handle<IFC2x3.IfcMoistureDiffusivityMeasure> | IFC2x3.IfcMoistureDiffusivityMeasure) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), UpperVaporResistanceFactor: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, LowerVaporResistanceFactor: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, IsothermalMoistureCapacity: (Handle<IFC2x3.IfcIsothermalMoistureCapacityMeasure> | IFC2x3.IfcIsothermalMoistureCapacityMeasure) | null, VaporPermeability: (Handle<IFC2x3.IfcVaporPermeabilityMeasure> | IFC2x3.IfcVaporPermeabilityMeasure) | null, MoistureDiffusivity: (Handle<IFC2x3.IfcMoistureDiffusivityMeasure> | IFC2x3.IfcMoistureDiffusivityMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHygroscopicMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcImageTexture extends IFC2x3.IfcSurfaceTexture {\n        UrlReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        constructor(expressID: number, type: number, RepeatS: boolean, RepeatT: boolean, TextureType: (Handle<IFC2x3.IfcSurfaceTextureEnum> | IFC2x3.IfcSurfaceTextureEnum), TextureTransform: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D) | null, UrlReference: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcImageTexture;\n        ToTape(): any[];\n    }\n    class IfcIrregularTimeSeries extends IFC2x3.IfcTimeSeries {\n        Values: (Handle<IFC2x3.IfcIrregularTimeSeriesValue> | IFC2x3.IfcIrregularTimeSeriesValue)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), EndTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), TimeSeriesDataType: (Handle<IFC2x3.IfcTimeSeriesDataTypeEnum> | IFC2x3.IfcTimeSeriesDataTypeEnum), DataOrigin: (Handle<IFC2x3.IfcDataOriginEnum> | IFC2x3.IfcDataOriginEnum), UserDefinedDataOrigin: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null, Values: (Handle<IFC2x3.IfcIrregularTimeSeriesValue> | IFC2x3.IfcIrregularTimeSeriesValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIrregularTimeSeries;\n        ToTape(): any[];\n    }\n    class IfcLightSource extends IFC2x3.IfcGeometricRepresentationItem {\n        Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        LightColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb);\n        AmbientIntensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        Intensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LightColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), AmbientIntensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSource;\n        ToTape(): any[];\n    }\n    class IfcLightSourceAmbient extends IFC2x3.IfcLightSource {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LightColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), AmbientIntensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceAmbient;\n        ToTape(): any[];\n    }\n    class IfcLightSourceDirectional extends IFC2x3.IfcLightSource {\n        Orientation: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LightColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), AmbientIntensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Orientation: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceDirectional;\n        ToTape(): any[];\n    }\n    class IfcLightSourceGoniometric extends IFC2x3.IfcLightSource {\n        Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D);\n        ColourAppearance: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb) | null;\n        ColourTemperature: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure);\n        LuminousFlux: (Handle<IFC2x3.IfcLuminousFluxMeasure> | IFC2x3.IfcLuminousFluxMeasure);\n        LightEmissionSource: (Handle<IFC2x3.IfcLightEmissionSourceEnum> | IFC2x3.IfcLightEmissionSourceEnum);\n        LightDistributionDataSource: (Handle<IFC2x3.IfcLightDistributionDataSourceSelect> | IFC2x3.IfcLightDistributionDataSourceSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LightColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), AmbientIntensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), ColourAppearance: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb) | null, ColourTemperature: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure), LuminousFlux: (Handle<IFC2x3.IfcLuminousFluxMeasure> | IFC2x3.IfcLuminousFluxMeasure), LightEmissionSource: (Handle<IFC2x3.IfcLightEmissionSourceEnum> | IFC2x3.IfcLightEmissionSourceEnum), LightDistributionDataSource: (Handle<IFC2x3.IfcLightDistributionDataSourceSelect> | IFC2x3.IfcLightDistributionDataSourceSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceGoniometric;\n        ToTape(): any[];\n    }\n    class IfcLightSourcePositional extends IFC2x3.IfcLightSource {\n        Position: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint);\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        ConstantAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal);\n        DistanceAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal);\n        QuadricAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LightColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), AmbientIntensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Position: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), ConstantAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal), DistanceAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal), QuadricAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourcePositional;\n        ToTape(): any[];\n    }\n    class IfcLightSourceSpot extends IFC2x3.IfcLightSourcePositional {\n        Orientation: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection);\n        ConcentrationExponent: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal) | null;\n        SpreadAngle: (Handle<IFC2x3.IfcPositivePlaneAngleMeasure> | IFC2x3.IfcPositivePlaneAngleMeasure);\n        BeamWidthAngle: (Handle<IFC2x3.IfcPositivePlaneAngleMeasure> | IFC2x3.IfcPositivePlaneAngleMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LightColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), AmbientIntensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, Position: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), ConstantAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal), DistanceAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal), QuadricAttenuation: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal), Orientation: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection), ConcentrationExponent: (Handle<IFC2x3.IfcReal> | IFC2x3.IfcReal) | null, SpreadAngle: (Handle<IFC2x3.IfcPositivePlaneAngleMeasure> | IFC2x3.IfcPositivePlaneAngleMeasure), BeamWidthAngle: (Handle<IFC2x3.IfcPositivePlaneAngleMeasure> | IFC2x3.IfcPositivePlaneAngleMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceSpot;\n        ToTape(): any[];\n    }\n    class IfcLocalPlacement extends IFC2x3.IfcObjectPlacement {\n        PlacementRelTo: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null;\n        RelativePlacement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement);\n        constructor(expressID: number, type: number, PlacementRelTo: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, RelativePlacement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLocalPlacement;\n        ToTape(): any[];\n    }\n    class IfcLoop extends IFC2x3.IfcTopologicalRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLoop;\n        ToTape(): any[];\n    }\n    class IfcMappedItem extends IFC2x3.IfcRepresentationItem {\n        MappingSource: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap);\n        MappingTarget: (Handle<IFC2x3.IfcCartesianTransformationOperator> | IFC2x3.IfcCartesianTransformationOperator);\n        constructor(expressID: number, type: number, MappingSource: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap), MappingTarget: (Handle<IFC2x3.IfcCartesianTransformationOperator> | IFC2x3.IfcCartesianTransformationOperator));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMappedItem;\n        ToTape(): any[];\n    }\n    class IfcMaterialDefinitionRepresentation extends IFC2x3.IfcProductRepresentation {\n        RepresentedMaterial: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Representations: (Handle<IFC2x3.IfcRepresentation> | IFC2x3.IfcRepresentation)[], RepresentedMaterial: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialDefinitionRepresentation;\n        ToTape(): any[];\n    }\n    class IfcMechanicalConcreteMaterialProperties extends IFC2x3.IfcMechanicalMaterialProperties {\n        CompressiveStrength: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null;\n        MaxAggregateSize: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        AdmixturesDescription: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        Workability: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        ProtectivePoreRatio: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        WaterImpermeability: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), DynamicViscosity: (Handle<IFC2x3.IfcDynamicViscosityMeasure> | IFC2x3.IfcDynamicViscosityMeasure) | null, YoungModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null, ShearModulus: (Handle<IFC2x3.IfcModulusOfElasticityMeasure> | IFC2x3.IfcModulusOfElasticityMeasure) | null, PoissonRatio: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, ThermalExpansionCoefficient: (Handle<IFC2x3.IfcThermalExpansionCoefficientMeasure> | IFC2x3.IfcThermalExpansionCoefficientMeasure) | null, CompressiveStrength: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null, MaxAggregateSize: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, AdmixturesDescription: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Workability: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ProtectivePoreRatio: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, WaterImpermeability: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalConcreteMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcObjectDefinition extends IFC2x3.IfcRoot {\n        HasAssignments: (Handle<IFC2x3.IfcRelAssigns> | IFC2x3.IfcRelAssigns)[] | null;\n        IsDecomposedBy: (Handle<IFC2x3.IfcRelDecomposes> | IFC2x3.IfcRelDecomposes)[] | null;\n        Decomposes: (Handle<IFC2x3.IfcRelDecomposes> | IFC2x3.IfcRelDecomposes)[] | null;\n        HasAssociations: (Handle<IFC2x3.IfcRelAssociates> | IFC2x3.IfcRelAssociates)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObjectDefinition;\n        ToTape(): any[];\n    }\n    class IfcOneDirectionRepeatFactor extends IFC2x3.IfcGeometricRepresentationItem {\n        RepeatFactor: (Handle<IFC2x3.IfcVector> | IFC2x3.IfcVector);\n        constructor(expressID: number, type: number, RepeatFactor: (Handle<IFC2x3.IfcVector> | IFC2x3.IfcVector));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOneDirectionRepeatFactor;\n        ToTape(): any[];\n    }\n    class IfcOpenShell extends IFC2x3.IfcConnectedFaceSet {\n        constructor(expressID: number, type: number, CfsFaces: (Handle<IFC2x3.IfcFace> | IFC2x3.IfcFace)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOpenShell;\n        ToTape(): any[];\n    }\n    class IfcOrientedEdge extends IFC2x3.IfcEdge {\n        EdgeElement: (Handle<IFC2x3.IfcEdge> | IFC2x3.IfcEdge);\n        Orientation: boolean;\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex), EdgeEnd: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex), EdgeElement: (Handle<IFC2x3.IfcEdge> | IFC2x3.IfcEdge), Orientation: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOrientedEdge;\n        ToTape(): any[];\n    }\n    class IfcParameterizedProfileDef extends IFC2x3.IfcProfileDef {\n        Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcParameterizedProfileDef;\n        ToTape(): any[];\n    }\n    class IfcPath extends IFC2x3.IfcTopologicalRepresentationItem {\n        EdgeList: (Handle<IFC2x3.IfcOrientedEdge> | IFC2x3.IfcOrientedEdge)[];\n        constructor(expressID: number, type: number, EdgeList: (Handle<IFC2x3.IfcOrientedEdge> | IFC2x3.IfcOrientedEdge)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPath;\n        ToTape(): any[];\n    }\n    class IfcPhysicalComplexQuantity extends IFC2x3.IfcPhysicalQuantity {\n        HasQuantities: (Handle<IFC2x3.IfcPhysicalQuantity> | IFC2x3.IfcPhysicalQuantity)[];\n        Discrimination: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        Quality: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Usage: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, HasQuantities: (Handle<IFC2x3.IfcPhysicalQuantity> | IFC2x3.IfcPhysicalQuantity)[], Discrimination: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Quality: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Usage: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalComplexQuantity;\n        ToTape(): any[];\n    }\n    class IfcPixelTexture extends IFC2x3.IfcSurfaceTexture {\n        Width: (Handle<IFC2x3.IfcInteger> | IFC2x3.IfcInteger);\n        Height: (Handle<IFC2x3.IfcInteger> | IFC2x3.IfcInteger);\n        ColourComponents: (Handle<IFC2x3.IfcInteger> | IFC2x3.IfcInteger);\n        Pixel: number[];\n        constructor(expressID: number, type: number, RepeatS: boolean, RepeatT: boolean, TextureType: (Handle<IFC2x3.IfcSurfaceTextureEnum> | IFC2x3.IfcSurfaceTextureEnum), TextureTransform: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D) | null, Width: (Handle<IFC2x3.IfcInteger> | IFC2x3.IfcInteger), Height: (Handle<IFC2x3.IfcInteger> | IFC2x3.IfcInteger), ColourComponents: (Handle<IFC2x3.IfcInteger> | IFC2x3.IfcInteger), Pixel: number[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPixelTexture;\n        ToTape(): any[];\n    }\n    class IfcPlacement extends IFC2x3.IfcGeometricRepresentationItem {\n        Location: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint);\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlacement;\n        ToTape(): any[];\n    }\n    class IfcPlanarExtent extends IFC2x3.IfcGeometricRepresentationItem {\n        SizeInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        SizeInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        constructor(expressID: number, type: number, SizeInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), SizeInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlanarExtent;\n        ToTape(): any[];\n    }\n    class IfcPoint extends IFC2x3.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPoint;\n        ToTape(): any[];\n    }\n    class IfcPointOnCurve extends IFC2x3.IfcPoint {\n        BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        PointParameter: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), PointParameter: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPointOnCurve;\n        ToTape(): any[];\n    }\n    class IfcPointOnSurface extends IFC2x3.IfcPoint {\n        BasisSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface);\n        PointParameterU: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        PointParameterV: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface), PointParameterU: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), PointParameterV: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPointOnSurface;\n        ToTape(): any[];\n    }\n    class IfcPolyLoop extends IFC2x3.IfcLoop {\n        Polygon: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[];\n        constructor(expressID: number, type: number, Polygon: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPolyLoop;\n        ToTape(): any[];\n    }\n    class IfcPolygonalBoundedHalfSpace extends IFC2x3.IfcHalfSpaceSolid {\n        Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D);\n        PolygonalBoundary: (Handle<IFC2x3.IfcBoundedCurve> | IFC2x3.IfcBoundedCurve);\n        constructor(expressID: number, type: number, BaseSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface), AgreementFlag: boolean, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), PolygonalBoundary: (Handle<IFC2x3.IfcBoundedCurve> | IFC2x3.IfcBoundedCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPolygonalBoundedHalfSpace;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedColour extends IFC2x3.IfcPreDefinedItem {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedColour;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedCurveFont extends IFC2x3.IfcPreDefinedItem {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedCurveFont;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedDimensionSymbol extends IFC2x3.IfcPreDefinedSymbol {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedDimensionSymbol;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedPointMarkerSymbol extends IFC2x3.IfcPreDefinedSymbol {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedPointMarkerSymbol;\n        ToTape(): any[];\n    }\n    class IfcProductDefinitionShape extends IFC2x3.IfcProductRepresentation {\n        ShapeOfProduct: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct)[] | null;\n        HasShapeAspects: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, Representations: (Handle<IFC2x3.IfcRepresentation> | IFC2x3.IfcRepresentation)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProductDefinitionShape;\n        ToTape(): any[];\n    }\n    class IfcPropertyBoundedValue extends IFC2x3.IfcSimpleProperty {\n        UpperBoundValue: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue) | null;\n        LowerBoundValue: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue) | null;\n        Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, UpperBoundValue: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue) | null, LowerBoundValue: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue) | null, Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyBoundedValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyDefinition extends IFC2x3.IfcRoot {\n        HasAssociations: (Handle<IFC2x3.IfcRelAssociates> | IFC2x3.IfcRelAssociates)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyDefinition;\n        ToTape(): any[];\n    }\n    class IfcPropertyEnumeratedValue extends IFC2x3.IfcSimpleProperty {\n        EnumerationValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        EnumerationReference: (Handle<IFC2x3.IfcPropertyEnumeration> | IFC2x3.IfcPropertyEnumeration) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, EnumerationValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[], EnumerationReference: (Handle<IFC2x3.IfcPropertyEnumeration> | IFC2x3.IfcPropertyEnumeration) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyEnumeratedValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyListValue extends IFC2x3.IfcSimpleProperty {\n        ListValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ListValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[], Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyListValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyReferenceValue extends IFC2x3.IfcSimpleProperty {\n        UsageName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        PropertyReference: (Handle<IFC2x3.IfcObjectReferenceSelect> | IFC2x3.IfcObjectReferenceSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, UsageName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PropertyReference: (Handle<IFC2x3.IfcObjectReferenceSelect> | IFC2x3.IfcObjectReferenceSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyReferenceValue;\n        ToTape(): any[];\n    }\n    class IfcPropertySetDefinition extends IFC2x3.IfcPropertyDefinition {\n        PropertyDefinitionOf: (Handle<IFC2x3.IfcRelDefinesByProperties> | IFC2x3.IfcRelDefinesByProperties)[] | null;\n        DefinesType: (Handle<IFC2x3.IfcTypeObject> | IFC2x3.IfcTypeObject)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySetDefinition;\n        ToTape(): any[];\n    }\n    class IfcPropertySingleValue extends IFC2x3.IfcSimpleProperty {\n        NominalValue: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue) | null;\n        Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, NominalValue: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue) | null, Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySingleValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyTableValue extends IFC2x3.IfcSimpleProperty {\n        DefiningValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        DefinedValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[];\n        Expression: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        DefiningUnit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null;\n        DefinedUnit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, DefiningValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[], DefinedValues: (Handle<IFC2x3.IfcValue> | IFC2x3.IfcValue)[], Expression: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, DefiningUnit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null, DefinedUnit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyTableValue;\n        ToTape(): any[];\n    }\n    class IfcRectangleProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        XDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), XDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangleProfileDef;\n        ToTape(): any[];\n    }\n    class IfcRegularTimeSeries extends IFC2x3.IfcTimeSeries {\n        TimeStep: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure);\n        Values: (Handle<IFC2x3.IfcTimeSeriesValue> | IFC2x3.IfcTimeSeriesValue)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), EndTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), TimeSeriesDataType: (Handle<IFC2x3.IfcTimeSeriesDataTypeEnum> | IFC2x3.IfcTimeSeriesDataTypeEnum), DataOrigin: (Handle<IFC2x3.IfcDataOriginEnum> | IFC2x3.IfcDataOriginEnum), UserDefinedDataOrigin: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Unit: (Handle<IFC2x3.IfcUnit> | IFC2x3.IfcUnit) | null, TimeStep: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure), Values: (Handle<IFC2x3.IfcTimeSeriesValue> | IFC2x3.IfcTimeSeriesValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRegularTimeSeries;\n        ToTape(): any[];\n    }\n    class IfcReinforcementDefinitionProperties extends IFC2x3.IfcPropertySetDefinition {\n        DefinitionType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ReinforcementSectionDefinitions: (Handle<IFC2x3.IfcSectionReinforcementProperties> | IFC2x3.IfcSectionReinforcementProperties)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, DefinitionType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ReinforcementSectionDefinitions: (Handle<IFC2x3.IfcSectionReinforcementProperties> | IFC2x3.IfcSectionReinforcementProperties)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcementDefinitionProperties;\n        ToTape(): any[];\n    }\n    class IfcRelationship extends IFC2x3.IfcRoot {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelationship;\n        ToTape(): any[];\n    }\n    class IfcRoundedRectangleProfileDef extends IFC2x3.IfcRectangleProfileDef {\n        RoundingRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), XDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), RoundingRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoundedRectangleProfileDef;\n        ToTape(): any[];\n    }\n    class IfcSectionedSpine extends IFC2x3.IfcGeometricRepresentationItem {\n        SpineCurve: (Handle<IFC2x3.IfcCompositeCurve> | IFC2x3.IfcCompositeCurve);\n        CrossSections: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef)[];\n        CrossSectionPositions: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D)[];\n        constructor(expressID: number, type: number, SpineCurve: (Handle<IFC2x3.IfcCompositeCurve> | IFC2x3.IfcCompositeCurve), CrossSections: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef)[], CrossSectionPositions: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSectionedSpine;\n        ToTape(): any[];\n    }\n    class IfcServiceLifeFactor extends IFC2x3.IfcPropertySetDefinition {\n        PredefinedType: (Handle<IFC2x3.IfcServiceLifeFactorTypeEnum> | IFC2x3.IfcServiceLifeFactorTypeEnum);\n        UpperValue: (Handle<IFC2x3.IfcMeasureValue> | IFC2x3.IfcMeasureValue) | null;\n        MostUsedValue: (Handle<IFC2x3.IfcMeasureValue> | IFC2x3.IfcMeasureValue);\n        LowerValue: (Handle<IFC2x3.IfcMeasureValue> | IFC2x3.IfcMeasureValue) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, PredefinedType: (Handle<IFC2x3.IfcServiceLifeFactorTypeEnum> | IFC2x3.IfcServiceLifeFactorTypeEnum), UpperValue: (Handle<IFC2x3.IfcMeasureValue> | IFC2x3.IfcMeasureValue) | null, MostUsedValue: (Handle<IFC2x3.IfcMeasureValue> | IFC2x3.IfcMeasureValue), LowerValue: (Handle<IFC2x3.IfcMeasureValue> | IFC2x3.IfcMeasureValue) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcServiceLifeFactor;\n        ToTape(): any[];\n    }\n    class IfcShellBasedSurfaceModel extends IFC2x3.IfcGeometricRepresentationItem {\n        SbsmBoundary: (Handle<IFC2x3.IfcShell> | IFC2x3.IfcShell)[];\n        constructor(expressID: number, type: number, SbsmBoundary: (Handle<IFC2x3.IfcShell> | IFC2x3.IfcShell)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShellBasedSurfaceModel;\n        ToTape(): any[];\n    }\n    class IfcSlippageConnectionCondition extends IFC2x3.IfcStructuralConnectionCondition {\n        SlippageX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        SlippageY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        SlippageZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, SlippageX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, SlippageY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, SlippageZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlippageConnectionCondition;\n        ToTape(): any[];\n    }\n    class IfcSolidModel extends IFC2x3.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSolidModel;\n        ToTape(): any[];\n    }\n    class IfcSoundProperties extends IFC2x3.IfcPropertySetDefinition {\n        IsAttenuating: (Handle<IFC2x3.IfcBoolean> | IFC2x3.IfcBoolean);\n        SoundScale: (Handle<IFC2x3.IfcSoundScaleEnum> | IFC2x3.IfcSoundScaleEnum) | null;\n        SoundValues: (Handle<IFC2x3.IfcSoundValue> | IFC2x3.IfcSoundValue)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, IsAttenuating: (Handle<IFC2x3.IfcBoolean> | IFC2x3.IfcBoolean), SoundScale: (Handle<IFC2x3.IfcSoundScaleEnum> | IFC2x3.IfcSoundScaleEnum) | null, SoundValues: (Handle<IFC2x3.IfcSoundValue> | IFC2x3.IfcSoundValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSoundProperties;\n        ToTape(): any[];\n    }\n    class IfcSoundValue extends IFC2x3.IfcPropertySetDefinition {\n        SoundLevelTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        Frequency: (Handle<IFC2x3.IfcFrequencyMeasure> | IFC2x3.IfcFrequencyMeasure);\n        SoundLevelSingleValue: (Handle<IFC2x3.IfcDerivedMeasureValue> | IFC2x3.IfcDerivedMeasureValue) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, SoundLevelTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, Frequency: (Handle<IFC2x3.IfcFrequencyMeasure> | IFC2x3.IfcFrequencyMeasure), SoundLevelSingleValue: (Handle<IFC2x3.IfcDerivedMeasureValue> | IFC2x3.IfcDerivedMeasureValue) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSoundValue;\n        ToTape(): any[];\n    }\n    class IfcSpaceThermalLoadProperties extends IFC2x3.IfcPropertySetDefinition {\n        ApplicableValueRatio: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        ThermalLoadSource: (Handle<IFC2x3.IfcThermalLoadSourceEnum> | IFC2x3.IfcThermalLoadSourceEnum);\n        PropertySource: (Handle<IFC2x3.IfcPropertySourceEnum> | IFC2x3.IfcPropertySourceEnum);\n        SourceDescription: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        MaximumValue: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure);\n        MinimumValue: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure) | null;\n        ThermalLoadTimeSeriesValues: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        UserDefinedThermalLoadSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        UserDefinedPropertySource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ThermalLoadType: (Handle<IFC2x3.IfcThermalLoadTypeEnum> | IFC2x3.IfcThermalLoadTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableValueRatio: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, ThermalLoadSource: (Handle<IFC2x3.IfcThermalLoadSourceEnum> | IFC2x3.IfcThermalLoadSourceEnum), PropertySource: (Handle<IFC2x3.IfcPropertySourceEnum> | IFC2x3.IfcPropertySourceEnum), SourceDescription: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, MaximumValue: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure), MinimumValue: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure) | null, ThermalLoadTimeSeriesValues: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, UserDefinedThermalLoadSource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, UserDefinedPropertySource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ThermalLoadType: (Handle<IFC2x3.IfcThermalLoadTypeEnum> | IFC2x3.IfcThermalLoadTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceThermalLoadProperties;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadLinearForce extends IFC2x3.IfcStructuralLoadStatic {\n        LinearForceX: (Handle<IFC2x3.IfcLinearForceMeasure> | IFC2x3.IfcLinearForceMeasure) | null;\n        LinearForceY: (Handle<IFC2x3.IfcLinearForceMeasure> | IFC2x3.IfcLinearForceMeasure) | null;\n        LinearForceZ: (Handle<IFC2x3.IfcLinearForceMeasure> | IFC2x3.IfcLinearForceMeasure) | null;\n        LinearMomentX: (Handle<IFC2x3.IfcLinearMomentMeasure> | IFC2x3.IfcLinearMomentMeasure) | null;\n        LinearMomentY: (Handle<IFC2x3.IfcLinearMomentMeasure> | IFC2x3.IfcLinearMomentMeasure) | null;\n        LinearMomentZ: (Handle<IFC2x3.IfcLinearMomentMeasure> | IFC2x3.IfcLinearMomentMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LinearForceX: (Handle<IFC2x3.IfcLinearForceMeasure> | IFC2x3.IfcLinearForceMeasure) | null, LinearForceY: (Handle<IFC2x3.IfcLinearForceMeasure> | IFC2x3.IfcLinearForceMeasure) | null, LinearForceZ: (Handle<IFC2x3.IfcLinearForceMeasure> | IFC2x3.IfcLinearForceMeasure) | null, LinearMomentX: (Handle<IFC2x3.IfcLinearMomentMeasure> | IFC2x3.IfcLinearMomentMeasure) | null, LinearMomentY: (Handle<IFC2x3.IfcLinearMomentMeasure> | IFC2x3.IfcLinearMomentMeasure) | null, LinearMomentZ: (Handle<IFC2x3.IfcLinearMomentMeasure> | IFC2x3.IfcLinearMomentMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadLinearForce;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadPlanarForce extends IFC2x3.IfcStructuralLoadStatic {\n        PlanarForceX: (Handle<IFC2x3.IfcPlanarForceMeasure> | IFC2x3.IfcPlanarForceMeasure) | null;\n        PlanarForceY: (Handle<IFC2x3.IfcPlanarForceMeasure> | IFC2x3.IfcPlanarForceMeasure) | null;\n        PlanarForceZ: (Handle<IFC2x3.IfcPlanarForceMeasure> | IFC2x3.IfcPlanarForceMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PlanarForceX: (Handle<IFC2x3.IfcPlanarForceMeasure> | IFC2x3.IfcPlanarForceMeasure) | null, PlanarForceY: (Handle<IFC2x3.IfcPlanarForceMeasure> | IFC2x3.IfcPlanarForceMeasure) | null, PlanarForceZ: (Handle<IFC2x3.IfcPlanarForceMeasure> | IFC2x3.IfcPlanarForceMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadPlanarForce;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleDisplacement extends IFC2x3.IfcStructuralLoadStatic {\n        DisplacementX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        DisplacementY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        DisplacementZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        RotationalDisplacementRX: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        RotationalDisplacementRY: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        RotationalDisplacementRZ: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, DisplacementX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, DisplacementY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, DisplacementZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, RotationalDisplacementRX: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, RotationalDisplacementRY: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, RotationalDisplacementRZ: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleDisplacement;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleDisplacementDistortion extends IFC2x3.IfcStructuralLoadSingleDisplacement {\n        Distortion: (Handle<IFC2x3.IfcCurvatureMeasure> | IFC2x3.IfcCurvatureMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, DisplacementX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, DisplacementY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, DisplacementZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, RotationalDisplacementRX: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, RotationalDisplacementRY: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, RotationalDisplacementRZ: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, Distortion: (Handle<IFC2x3.IfcCurvatureMeasure> | IFC2x3.IfcCurvatureMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleDisplacementDistortion;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleForce extends IFC2x3.IfcStructuralLoadStatic {\n        ForceX: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        ForceY: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        ForceZ: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        MomentX: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null;\n        MomentY: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null;\n        MomentZ: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ForceX: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, ForceY: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, ForceZ: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, MomentX: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null, MomentY: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null, MomentZ: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleForce;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleForceWarping extends IFC2x3.IfcStructuralLoadSingleForce {\n        WarpingMoment: (Handle<IFC2x3.IfcWarpingMomentMeasure> | IFC2x3.IfcWarpingMomentMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ForceX: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, ForceY: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, ForceZ: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, MomentX: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null, MomentY: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null, MomentZ: (Handle<IFC2x3.IfcTorqueMeasure> | IFC2x3.IfcTorqueMeasure) | null, WarpingMoment: (Handle<IFC2x3.IfcWarpingMomentMeasure> | IFC2x3.IfcWarpingMomentMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleForceWarping;\n        ToTape(): any[];\n    }\n    class IfcStructuralProfileProperties extends IFC2x3.IfcGeneralProfileProperties {\n        TorsionalConstantX: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null;\n        MomentOfInertiaYZ: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null;\n        MomentOfInertiaY: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null;\n        MomentOfInertiaZ: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null;\n        WarpingConstant: (Handle<IFC2x3.IfcWarpingConstantMeasure> | IFC2x3.IfcWarpingConstantMeasure) | null;\n        ShearCentreZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        ShearCentreY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        ShearDeformationAreaZ: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null;\n        ShearDeformationAreaY: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null;\n        MaximumSectionModulusY: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null;\n        MinimumSectionModulusY: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null;\n        MaximumSectionModulusZ: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null;\n        MinimumSectionModulusZ: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null;\n        TorsionalSectionModulus: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null;\n        CentreOfGravityInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        CentreOfGravityInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ProfileDefinition: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null, PhysicalWeight: (Handle<IFC2x3.IfcMassPerLengthMeasure> | IFC2x3.IfcMassPerLengthMeasure) | null, Perimeter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MinimumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MaximumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, TorsionalConstantX: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, MomentOfInertiaYZ: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, MomentOfInertiaY: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, MomentOfInertiaZ: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, WarpingConstant: (Handle<IFC2x3.IfcWarpingConstantMeasure> | IFC2x3.IfcWarpingConstantMeasure) | null, ShearCentreZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ShearCentreY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ShearDeformationAreaZ: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, ShearDeformationAreaY: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, MaximumSectionModulusY: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, MinimumSectionModulusY: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, MaximumSectionModulusZ: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, MinimumSectionModulusZ: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, TorsionalSectionModulus: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, CentreOfGravityInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, CentreOfGravityInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralProfileProperties;\n        ToTape(): any[];\n    }\n    class IfcStructuralSteelProfileProperties extends IFC2x3.IfcStructuralProfileProperties {\n        ShearAreaZ: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null;\n        ShearAreaY: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null;\n        PlasticShapeFactorY: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        PlasticShapeFactorZ: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        constructor(expressID: number, type: number, ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ProfileDefinition: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef) | null, PhysicalWeight: (Handle<IFC2x3.IfcMassPerLengthMeasure> | IFC2x3.IfcMassPerLengthMeasure) | null, Perimeter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MinimumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MaximumPlateThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, TorsionalConstantX: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, MomentOfInertiaYZ: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, MomentOfInertiaY: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, MomentOfInertiaZ: (Handle<IFC2x3.IfcMomentOfInertiaMeasure> | IFC2x3.IfcMomentOfInertiaMeasure) | null, WarpingConstant: (Handle<IFC2x3.IfcWarpingConstantMeasure> | IFC2x3.IfcWarpingConstantMeasure) | null, ShearCentreZ: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ShearCentreY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ShearDeformationAreaZ: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, ShearDeformationAreaY: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, MaximumSectionModulusY: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, MinimumSectionModulusY: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, MaximumSectionModulusZ: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, MinimumSectionModulusZ: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, TorsionalSectionModulus: (Handle<IFC2x3.IfcSectionModulusMeasure> | IFC2x3.IfcSectionModulusMeasure) | null, CentreOfGravityInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, CentreOfGravityInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ShearAreaZ: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, ShearAreaY: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, PlasticShapeFactorY: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, PlasticShapeFactorZ: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSteelProfileProperties;\n        ToTape(): any[];\n    }\n    class IfcSubedge extends IFC2x3.IfcEdge {\n        ParentEdge: (Handle<IFC2x3.IfcEdge> | IFC2x3.IfcEdge);\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex), EdgeEnd: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex), ParentEdge: (Handle<IFC2x3.IfcEdge> | IFC2x3.IfcEdge));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSubedge;\n        ToTape(): any[];\n    }\n    class IfcSurface extends IFC2x3.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurface;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleRendering extends IFC2x3.IfcSurfaceStyleShading {\n        Transparency: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        DiffuseColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null;\n        TransmissionColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null;\n        DiffuseTransmissionColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null;\n        ReflectionColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null;\n        SpecularColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null;\n        SpecularHighlight: (Handle<IFC2x3.IfcSpecularHighlightSelect> | IFC2x3.IfcSpecularHighlightSelect) | null;\n        ReflectanceMethod: (Handle<IFC2x3.IfcReflectanceMethodEnum> | IFC2x3.IfcReflectanceMethodEnum);\n        constructor(expressID: number, type: number, SurfaceColour: (Handle<IFC2x3.IfcColourRgb> | IFC2x3.IfcColourRgb), Transparency: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, DiffuseColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null, TransmissionColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null, DiffuseTransmissionColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null, ReflectionColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null, SpecularColour: (Handle<IFC2x3.IfcColourOrFactor> | IFC2x3.IfcColourOrFactor) | null, SpecularHighlight: (Handle<IFC2x3.IfcSpecularHighlightSelect> | IFC2x3.IfcSpecularHighlightSelect) | null, ReflectanceMethod: (Handle<IFC2x3.IfcReflectanceMethodEnum> | IFC2x3.IfcReflectanceMethodEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleRendering;\n        ToTape(): any[];\n    }\n    class IfcSweptAreaSolid extends IFC2x3.IfcSolidModel {\n        SweptArea: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef);\n        Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSweptAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcSweptDiskSolid extends IFC2x3.IfcSolidModel {\n        Directrix: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        InnerRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        StartParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        EndParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        constructor(expressID: number, type: number, Directrix: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), InnerRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, StartParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), EndParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSweptDiskSolid;\n        ToTape(): any[];\n    }\n    class IfcSweptSurface extends IFC2x3.IfcSurface {\n        SweptCurve: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef);\n        Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D);\n        constructor(expressID: number, type: number, SweptCurve: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSweptSurface;\n        ToTape(): any[];\n    }\n    class IfcTShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        FlangeEdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        WebEdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        WebSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        FlangeSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, FlangeEdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, WebEdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, WebSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, FlangeSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcTerminatorSymbol extends IFC2x3.IfcAnnotationSymbolOccurrence {\n        AnnotatedCurve: (Handle<IFC2x3.IfcAnnotationCurveOccurrence> | IFC2x3.IfcAnnotationCurveOccurrence);\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, AnnotatedCurve: (Handle<IFC2x3.IfcAnnotationCurveOccurrence> | IFC2x3.IfcAnnotationCurveOccurrence));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTerminatorSymbol;\n        ToTape(): any[];\n    }\n    class IfcTextLiteral extends IFC2x3.IfcGeometricRepresentationItem {\n        Literal: (Handle<IFC2x3.IfcPresentableText> | IFC2x3.IfcPresentableText);\n        Placement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement);\n        Path: (Handle<IFC2x3.IfcTextPath> | IFC2x3.IfcTextPath);\n        constructor(expressID: number, type: number, Literal: (Handle<IFC2x3.IfcPresentableText> | IFC2x3.IfcPresentableText), Placement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), Path: (Handle<IFC2x3.IfcTextPath> | IFC2x3.IfcTextPath));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextLiteral;\n        ToTape(): any[];\n    }\n    class IfcTextLiteralWithExtent extends IFC2x3.IfcTextLiteral {\n        Extent: (Handle<IFC2x3.IfcPlanarExtent> | IFC2x3.IfcPlanarExtent);\n        BoxAlignment: (Handle<IFC2x3.IfcBoxAlignment> | IFC2x3.IfcBoxAlignment);\n        constructor(expressID: number, type: number, Literal: (Handle<IFC2x3.IfcPresentableText> | IFC2x3.IfcPresentableText), Placement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), Path: (Handle<IFC2x3.IfcTextPath> | IFC2x3.IfcTextPath), Extent: (Handle<IFC2x3.IfcPlanarExtent> | IFC2x3.IfcPlanarExtent), BoxAlignment: (Handle<IFC2x3.IfcBoxAlignment> | IFC2x3.IfcBoxAlignment));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextLiteralWithExtent;\n        ToTape(): any[];\n    }\n    class IfcTrapeziumProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        BottomXDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        TopXDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        TopXOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), BottomXDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), TopXDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), TopXOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTrapeziumProfileDef;\n        ToTape(): any[];\n    }\n    class IfcTwoDirectionRepeatFactor extends IFC2x3.IfcOneDirectionRepeatFactor {\n        SecondRepeatFactor: (Handle<IFC2x3.IfcVector> | IFC2x3.IfcVector);\n        constructor(expressID: number, type: number, RepeatFactor: (Handle<IFC2x3.IfcVector> | IFC2x3.IfcVector), SecondRepeatFactor: (Handle<IFC2x3.IfcVector> | IFC2x3.IfcVector));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTwoDirectionRepeatFactor;\n        ToTape(): any[];\n    }\n    class IfcTypeObject extends IFC2x3.IfcObjectDefinition {\n        ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null;\n        ObjectTypeOf: (Handle<IFC2x3.IfcRelDefinesByType> | IFC2x3.IfcRelDefinesByType)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTypeObject;\n        ToTape(): any[];\n    }\n    class IfcTypeProduct extends IFC2x3.IfcTypeObject {\n        RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null;\n        Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTypeProduct;\n        ToTape(): any[];\n    }\n    class IfcUShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        EdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        FlangeSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        CentreOfGravityInX: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, EdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, FlangeSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, CentreOfGravityInX: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcVector extends IFC2x3.IfcGeometricRepresentationItem {\n        Orientation: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection);\n        Magnitude: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        constructor(expressID: number, type: number, Orientation: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection), Magnitude: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVector;\n        ToTape(): any[];\n    }\n    class IfcVertexLoop extends IFC2x3.IfcLoop {\n        LoopVertex: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex);\n        constructor(expressID: number, type: number, LoopVertex: (Handle<IFC2x3.IfcVertex> | IFC2x3.IfcVertex));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVertexLoop;\n        ToTape(): any[];\n    }\n    class IfcWindowLiningProperties extends IFC2x3.IfcPropertySetDefinition {\n        LiningDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        LiningThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        TransomThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        MullionThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        FirstTransomOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        SecondTransomOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        FirstMullionOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        SecondMullionOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, LiningDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, LiningThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, TransomThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MullionThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, FirstTransomOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, SecondTransomOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, FirstMullionOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, SecondMullionOffset: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowLiningProperties;\n        ToTape(): any[];\n    }\n    class IfcWindowPanelProperties extends IFC2x3.IfcPropertySetDefinition {\n        OperationType: (Handle<IFC2x3.IfcWindowPanelOperationEnum> | IFC2x3.IfcWindowPanelOperationEnum);\n        PanelPosition: (Handle<IFC2x3.IfcWindowPanelPositionEnum> | IFC2x3.IfcWindowPanelPositionEnum);\n        FrameDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        FrameThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, OperationType: (Handle<IFC2x3.IfcWindowPanelOperationEnum> | IFC2x3.IfcWindowPanelOperationEnum), PanelPosition: (Handle<IFC2x3.IfcWindowPanelPositionEnum> | IFC2x3.IfcWindowPanelPositionEnum), FrameDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, FrameThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowPanelProperties;\n        ToTape(): any[];\n    }\n    class IfcWindowStyle extends IFC2x3.IfcTypeProduct {\n        ConstructionType: (Handle<IFC2x3.IfcWindowStyleConstructionEnum> | IFC2x3.IfcWindowStyleConstructionEnum);\n        OperationType: (Handle<IFC2x3.IfcWindowStyleOperationEnum> | IFC2x3.IfcWindowStyleOperationEnum);\n        ParameterTakesPrecedence: boolean;\n        Sizeable: boolean;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ConstructionType: (Handle<IFC2x3.IfcWindowStyleConstructionEnum> | IFC2x3.IfcWindowStyleConstructionEnum), OperationType: (Handle<IFC2x3.IfcWindowStyleOperationEnum> | IFC2x3.IfcWindowStyleOperationEnum), ParameterTakesPrecedence: boolean, Sizeable: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowStyle;\n        ToTape(): any[];\n    }\n    class IfcZShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        EdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, EdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcZShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcAnnotationCurveOccurrence extends IFC2x3.IfcAnnotationOccurrence {\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationCurveOccurrence;\n        ToTape(): any[];\n    }\n    class IfcAnnotationFillArea extends IFC2x3.IfcGeometricRepresentationItem {\n        OuterBoundary: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        InnerBoundaries: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve)[] | null;\n        constructor(expressID: number, type: number, OuterBoundary: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), InnerBoundaries: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationFillArea;\n        ToTape(): any[];\n    }\n    class IfcAnnotationFillAreaOccurrence extends IFC2x3.IfcAnnotationOccurrence {\n        FillStyleTarget: (Handle<IFC2x3.IfcPoint> | IFC2x3.IfcPoint) | null;\n        GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum) | null;\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, FillStyleTarget: (Handle<IFC2x3.IfcPoint> | IFC2x3.IfcPoint) | null, GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationFillAreaOccurrence;\n        ToTape(): any[];\n    }\n    class IfcAnnotationSurface extends IFC2x3.IfcGeometricRepresentationItem {\n        Item: (Handle<IFC2x3.IfcGeometricRepresentationItem> | IFC2x3.IfcGeometricRepresentationItem);\n        TextureCoordinates: (Handle<IFC2x3.IfcTextureCoordinate> | IFC2x3.IfcTextureCoordinate) | null;\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcGeometricRepresentationItem> | IFC2x3.IfcGeometricRepresentationItem), TextureCoordinates: (Handle<IFC2x3.IfcTextureCoordinate> | IFC2x3.IfcTextureCoordinate) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationSurface;\n        ToTape(): any[];\n    }\n    class IfcAxis1Placement extends IFC2x3.IfcPlacement {\n        Axis: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Axis: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAxis1Placement;\n        ToTape(): any[];\n    }\n    class IfcAxis2Placement2D extends IFC2x3.IfcPlacement {\n        RefDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), RefDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAxis2Placement2D;\n        ToTape(): any[];\n    }\n    class IfcAxis2Placement3D extends IFC2x3.IfcPlacement {\n        Axis: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        RefDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Axis: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, RefDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAxis2Placement3D;\n        ToTape(): any[];\n    }\n    class IfcBooleanResult extends IFC2x3.IfcGeometricRepresentationItem {\n        Operator: (Handle<IFC2x3.IfcBooleanOperator> | IFC2x3.IfcBooleanOperator);\n        FirstOperand: (Handle<IFC2x3.IfcBooleanOperand> | IFC2x3.IfcBooleanOperand);\n        SecondOperand: (Handle<IFC2x3.IfcBooleanOperand> | IFC2x3.IfcBooleanOperand);\n        constructor(expressID: number, type: number, Operator: (Handle<IFC2x3.IfcBooleanOperator> | IFC2x3.IfcBooleanOperator), FirstOperand: (Handle<IFC2x3.IfcBooleanOperand> | IFC2x3.IfcBooleanOperand), SecondOperand: (Handle<IFC2x3.IfcBooleanOperand> | IFC2x3.IfcBooleanOperand));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBooleanResult;\n        ToTape(): any[];\n    }\n    class IfcBoundedSurface extends IFC2x3.IfcSurface {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundedSurface;\n        ToTape(): any[];\n    }\n    class IfcBoundingBox extends IFC2x3.IfcGeometricRepresentationItem {\n        Corner: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint);\n        XDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        ZDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Corner: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), XDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), ZDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundingBox;\n        ToTape(): any[];\n    }\n    class IfcBoxedHalfSpace extends IFC2x3.IfcHalfSpaceSolid {\n        Enclosure: (Handle<IFC2x3.IfcBoundingBox> | IFC2x3.IfcBoundingBox);\n        constructor(expressID: number, type: number, BaseSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface), AgreementFlag: boolean, Enclosure: (Handle<IFC2x3.IfcBoundingBox> | IFC2x3.IfcBoundingBox));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoxedHalfSpace;\n        ToTape(): any[];\n    }\n    class IfcCShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        Width: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        WallThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        Girth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        InternalFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        CentreOfGravityInX: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), Width: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WallThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), Girth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), InternalFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, CentreOfGravityInX: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcCartesianPoint extends IFC2x3.IfcPoint {\n        Coordinates: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure)[];\n        constructor(expressID: number, type: number, Coordinates: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPoint;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator extends IFC2x3.IfcGeometricRepresentationItem {\n        Axis1: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        Axis2: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        LocalOrigin: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint);\n        Scale: number | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, Axis2: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, LocalOrigin: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Scale: number | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator2D extends IFC2x3.IfcCartesianTransformationOperator {\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, Axis2: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, LocalOrigin: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Scale: number | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator2D;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator2DnonUniform extends IFC2x3.IfcCartesianTransformationOperator2D {\n        Scale2: number | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, Axis2: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, LocalOrigin: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Scale: number | null, Scale2: number | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator2DnonUniform;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator3D extends IFC2x3.IfcCartesianTransformationOperator {\n        Axis3: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, Axis2: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, LocalOrigin: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Scale: number | null, Axis3: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator3D;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator3DnonUniform extends IFC2x3.IfcCartesianTransformationOperator3D {\n        Scale2: number | null;\n        Scale3: number | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, Axis2: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, LocalOrigin: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Scale: number | null, Axis3: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection) | null, Scale2: number | null, Scale3: number | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator3DnonUniform;\n        ToTape(): any[];\n    }\n    class IfcCircleProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCircleProfileDef;\n        ToTape(): any[];\n    }\n    class IfcClosedShell extends IFC2x3.IfcConnectedFaceSet {\n        constructor(expressID: number, type: number, CfsFaces: (Handle<IFC2x3.IfcFace> | IFC2x3.IfcFace)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClosedShell;\n        ToTape(): any[];\n    }\n    class IfcCompositeCurveSegment extends IFC2x3.IfcGeometricRepresentationItem {\n        Transition: (Handle<IFC2x3.IfcTransitionCode> | IFC2x3.IfcTransitionCode);\n        SameSense: boolean;\n        ParentCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        UsingCurves: (Handle<IFC2x3.IfcCompositeCurve> | IFC2x3.IfcCompositeCurve)[] | null;\n        constructor(expressID: number, type: number, Transition: (Handle<IFC2x3.IfcTransitionCode> | IFC2x3.IfcTransitionCode), SameSense: boolean, ParentCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurveSegment;\n        ToTape(): any[];\n    }\n    class IfcCraneRailAShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BaseWidth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        HeadWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        HeadDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        HeadDepth3: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BaseWidth4: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BaseDepth1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BaseDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BaseDepth3: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BaseWidth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, HeadWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), HeadDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), HeadDepth3: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BaseWidth4: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BaseDepth1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BaseDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BaseDepth3: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCraneRailAShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcCraneRailFShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        HeadWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        HeadDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        HeadDepth3: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BaseDepth1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BaseDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), HeadWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, HeadDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), HeadDepth3: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BaseDepth1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BaseDepth2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCraneRailFShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcCsgPrimitive3D extends IFC2x3.IfcGeometricRepresentationItem {\n        Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCsgPrimitive3D;\n        ToTape(): any[];\n    }\n    class IfcCsgSolid extends IFC2x3.IfcSolidModel {\n        TreeRootExpression: (Handle<IFC2x3.IfcCsgSelect> | IFC2x3.IfcCsgSelect);\n        constructor(expressID: number, type: number, TreeRootExpression: (Handle<IFC2x3.IfcCsgSelect> | IFC2x3.IfcCsgSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCsgSolid;\n        ToTape(): any[];\n    }\n    class IfcCurve extends IFC2x3.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurve;\n        ToTape(): any[];\n    }\n    class IfcCurveBoundedPlane extends IFC2x3.IfcBoundedSurface {\n        BasisSurface: (Handle<IFC2x3.IfcPlane> | IFC2x3.IfcPlane);\n        OuterBoundary: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        InnerBoundaries: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve)[];\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC2x3.IfcPlane> | IFC2x3.IfcPlane), OuterBoundary: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), InnerBoundaries: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveBoundedPlane;\n        ToTape(): any[];\n    }\n    class IfcDefinedSymbol extends IFC2x3.IfcGeometricRepresentationItem {\n        Definition: (Handle<IFC2x3.IfcDefinedSymbolSelect> | IFC2x3.IfcDefinedSymbolSelect);\n        Target: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D);\n        constructor(expressID: number, type: number, Definition: (Handle<IFC2x3.IfcDefinedSymbolSelect> | IFC2x3.IfcDefinedSymbolSelect), Target: (Handle<IFC2x3.IfcCartesianTransformationOperator2D> | IFC2x3.IfcCartesianTransformationOperator2D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDefinedSymbol;\n        ToTape(): any[];\n    }\n    class IfcDimensionCurve extends IFC2x3.IfcAnnotationCurveOccurrence {\n        AnnotatedBySymbols: (Handle<IFC2x3.IfcTerminatorSymbol> | IFC2x3.IfcTerminatorSymbol)[] | null;\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionCurve;\n        ToTape(): any[];\n    }\n    class IfcDimensionCurveTerminator extends IFC2x3.IfcTerminatorSymbol {\n        Role: (Handle<IFC2x3.IfcDimensionExtentUsage> | IFC2x3.IfcDimensionExtentUsage);\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, AnnotatedCurve: (Handle<IFC2x3.IfcAnnotationCurveOccurrence> | IFC2x3.IfcAnnotationCurveOccurrence), Role: (Handle<IFC2x3.IfcDimensionExtentUsage> | IFC2x3.IfcDimensionExtentUsage));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionCurveTerminator;\n        ToTape(): any[];\n    }\n    class IfcDirection extends IFC2x3.IfcGeometricRepresentationItem {\n        DirectionRatios: number[];\n        constructor(expressID: number, type: number, DirectionRatios: number[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDirection;\n        ToTape(): any[];\n    }\n    class IfcDoorLiningProperties extends IFC2x3.IfcPropertySetDefinition {\n        LiningDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        LiningThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        ThresholdDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        ThresholdThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        TransomThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        TransomOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        LiningOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        ThresholdOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        CasingThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        CasingDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, LiningDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, LiningThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, ThresholdDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, ThresholdThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, TransomThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, TransomOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, LiningOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ThresholdOffset: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, CasingThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, CasingDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorLiningProperties;\n        ToTape(): any[];\n    }\n    class IfcDoorPanelProperties extends IFC2x3.IfcPropertySetDefinition {\n        PanelDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        PanelOperation: (Handle<IFC2x3.IfcDoorPanelOperationEnum> | IFC2x3.IfcDoorPanelOperationEnum);\n        PanelWidth: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        PanelPosition: (Handle<IFC2x3.IfcDoorPanelPositionEnum> | IFC2x3.IfcDoorPanelPositionEnum);\n        ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, PanelDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, PanelOperation: (Handle<IFC2x3.IfcDoorPanelOperationEnum> | IFC2x3.IfcDoorPanelOperationEnum), PanelWidth: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, PanelPosition: (Handle<IFC2x3.IfcDoorPanelPositionEnum> | IFC2x3.IfcDoorPanelPositionEnum), ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorPanelProperties;\n        ToTape(): any[];\n    }\n    class IfcDoorStyle extends IFC2x3.IfcTypeProduct {\n        OperationType: (Handle<IFC2x3.IfcDoorStyleOperationEnum> | IFC2x3.IfcDoorStyleOperationEnum);\n        ConstructionType: (Handle<IFC2x3.IfcDoorStyleConstructionEnum> | IFC2x3.IfcDoorStyleConstructionEnum);\n        ParameterTakesPrecedence: boolean;\n        Sizeable: boolean;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, OperationType: (Handle<IFC2x3.IfcDoorStyleOperationEnum> | IFC2x3.IfcDoorStyleOperationEnum), ConstructionType: (Handle<IFC2x3.IfcDoorStyleConstructionEnum> | IFC2x3.IfcDoorStyleConstructionEnum), ParameterTakesPrecedence: boolean, Sizeable: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorStyle;\n        ToTape(): any[];\n    }\n    class IfcDraughtingCallout extends IFC2x3.IfcGeometricRepresentationItem {\n        Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[];\n        IsRelatedFromCallout: (Handle<IFC2x3.IfcDraughtingCalloutRelationship> | IFC2x3.IfcDraughtingCalloutRelationship)[] | null;\n        IsRelatedToCallout: (Handle<IFC2x3.IfcDraughtingCalloutRelationship> | IFC2x3.IfcDraughtingCalloutRelationship)[] | null;\n        constructor(expressID: number, type: number, Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingCallout;\n        ToTape(): any[];\n    }\n    class IfcDraughtingPreDefinedColour extends IFC2x3.IfcPreDefinedColour {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingPreDefinedColour;\n        ToTape(): any[];\n    }\n    class IfcDraughtingPreDefinedCurveFont extends IFC2x3.IfcPreDefinedCurveFont {\n        constructor(expressID: number, type: number, Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingPreDefinedCurveFont;\n        ToTape(): any[];\n    }\n    class IfcEdgeLoop extends IFC2x3.IfcLoop {\n        EdgeList: (Handle<IFC2x3.IfcOrientedEdge> | IFC2x3.IfcOrientedEdge)[];\n        constructor(expressID: number, type: number, EdgeList: (Handle<IFC2x3.IfcOrientedEdge> | IFC2x3.IfcOrientedEdge)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEdgeLoop;\n        ToTape(): any[];\n    }\n    class IfcElementQuantity extends IFC2x3.IfcPropertySetDefinition {\n        MethodOfMeasurement: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Quantities: (Handle<IFC2x3.IfcPhysicalQuantity> | IFC2x3.IfcPhysicalQuantity)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, MethodOfMeasurement: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Quantities: (Handle<IFC2x3.IfcPhysicalQuantity> | IFC2x3.IfcPhysicalQuantity)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementQuantity;\n        ToTape(): any[];\n    }\n    class IfcElementType extends IFC2x3.IfcTypeProduct {\n        ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementType;\n        ToTape(): any[];\n    }\n    class IfcElementarySurface extends IFC2x3.IfcSurface {\n        Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementarySurface;\n        ToTape(): any[];\n    }\n    class IfcEllipseProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        SemiAxis1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        SemiAxis2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), SemiAxis1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), SemiAxis2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEllipseProfileDef;\n        ToTape(): any[];\n    }\n    class IfcEnergyProperties extends IFC2x3.IfcPropertySetDefinition {\n        EnergySequence: (Handle<IFC2x3.IfcEnergySequenceEnum> | IFC2x3.IfcEnergySequenceEnum) | null;\n        UserDefinedEnergySequence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, EnergySequence: (Handle<IFC2x3.IfcEnergySequenceEnum> | IFC2x3.IfcEnergySequenceEnum) | null, UserDefinedEnergySequence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEnergyProperties;\n        ToTape(): any[];\n    }\n    class IfcExtrudedAreaSolid extends IFC2x3.IfcSweptAreaSolid {\n        ExtrudedDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection);\n        Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), ExtrudedDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection), Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExtrudedAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcFaceBasedSurfaceModel extends IFC2x3.IfcGeometricRepresentationItem {\n        FbsmFaces: (Handle<IFC2x3.IfcConnectedFaceSet> | IFC2x3.IfcConnectedFaceSet)[];\n        constructor(expressID: number, type: number, FbsmFaces: (Handle<IFC2x3.IfcConnectedFaceSet> | IFC2x3.IfcConnectedFaceSet)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceBasedSurfaceModel;\n        ToTape(): any[];\n    }\n    class IfcFillAreaStyleHatching extends IFC2x3.IfcGeometricRepresentationItem {\n        HatchLineAppearance: (Handle<IFC2x3.IfcCurveStyle> | IFC2x3.IfcCurveStyle);\n        StartOfNextHatchLine: (Handle<IFC2x3.IfcHatchLineDistanceSelect> | IFC2x3.IfcHatchLineDistanceSelect);\n        PointOfReferenceHatchLine: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint) | null;\n        PatternStart: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint) | null;\n        HatchLineAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure);\n        constructor(expressID: number, type: number, HatchLineAppearance: (Handle<IFC2x3.IfcCurveStyle> | IFC2x3.IfcCurveStyle), StartOfNextHatchLine: (Handle<IFC2x3.IfcHatchLineDistanceSelect> | IFC2x3.IfcHatchLineDistanceSelect), PointOfReferenceHatchLine: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint) | null, PatternStart: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint) | null, HatchLineAngle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyleHatching;\n        ToTape(): any[];\n    }\n    class IfcFillAreaStyleTileSymbolWithStyle extends IFC2x3.IfcGeometricRepresentationItem {\n        Symbol: (Handle<IFC2x3.IfcAnnotationSymbolOccurrence> | IFC2x3.IfcAnnotationSymbolOccurrence);\n        constructor(expressID: number, type: number, Symbol: (Handle<IFC2x3.IfcAnnotationSymbolOccurrence> | IFC2x3.IfcAnnotationSymbolOccurrence));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyleTileSymbolWithStyle;\n        ToTape(): any[];\n    }\n    class IfcFillAreaStyleTiles extends IFC2x3.IfcGeometricRepresentationItem {\n        TilingPattern: (Handle<IFC2x3.IfcOneDirectionRepeatFactor> | IFC2x3.IfcOneDirectionRepeatFactor);\n        Tiles: (Handle<IFC2x3.IfcFillAreaStyleTileShapeSelect> | IFC2x3.IfcFillAreaStyleTileShapeSelect)[];\n        TilingScale: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure);\n        constructor(expressID: number, type: number, TilingPattern: (Handle<IFC2x3.IfcOneDirectionRepeatFactor> | IFC2x3.IfcOneDirectionRepeatFactor), Tiles: (Handle<IFC2x3.IfcFillAreaStyleTileShapeSelect> | IFC2x3.IfcFillAreaStyleTileShapeSelect)[], TilingScale: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyleTiles;\n        ToTape(): any[];\n    }\n    class IfcFluidFlowProperties extends IFC2x3.IfcPropertySetDefinition {\n        PropertySource: (Handle<IFC2x3.IfcPropertySourceEnum> | IFC2x3.IfcPropertySourceEnum);\n        FlowConditionTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        VelocityTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        FlowrateTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        Fluid: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial);\n        PressureTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        UserDefinedPropertySource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        TemperatureSingleValue: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        WetBulbTemperatureSingleValue: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null;\n        WetBulbTemperatureTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        TemperatureTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null;\n        FlowrateSingleValue: (Handle<IFC2x3.IfcDerivedMeasureValue> | IFC2x3.IfcDerivedMeasureValue) | null;\n        FlowConditionSingleValue: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        VelocitySingleValue: (Handle<IFC2x3.IfcLinearVelocityMeasure> | IFC2x3.IfcLinearVelocityMeasure) | null;\n        PressureSingleValue: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, PropertySource: (Handle<IFC2x3.IfcPropertySourceEnum> | IFC2x3.IfcPropertySourceEnum), FlowConditionTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, VelocityTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, FlowrateTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, Fluid: (Handle<IFC2x3.IfcMaterial> | IFC2x3.IfcMaterial), PressureTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, UserDefinedPropertySource: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TemperatureSingleValue: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null, WetBulbTemperatureSingleValue: (Handle<IFC2x3.IfcThermodynamicTemperatureMeasure> | IFC2x3.IfcThermodynamicTemperatureMeasure) | null, WetBulbTemperatureTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, TemperatureTimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries) | null, FlowrateSingleValue: (Handle<IFC2x3.IfcDerivedMeasureValue> | IFC2x3.IfcDerivedMeasureValue) | null, FlowConditionSingleValue: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null, VelocitySingleValue: (Handle<IFC2x3.IfcLinearVelocityMeasure> | IFC2x3.IfcLinearVelocityMeasure) | null, PressureSingleValue: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFluidFlowProperties;\n        ToTape(): any[];\n    }\n    class IfcFurnishingElementType extends IFC2x3.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurnishingElementType;\n        ToTape(): any[];\n    }\n    class IfcFurnitureType extends IFC2x3.IfcFurnishingElementType {\n        AssemblyPlace: (Handle<IFC2x3.IfcAssemblyPlaceEnum> | IFC2x3.IfcAssemblyPlaceEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, AssemblyPlace: (Handle<IFC2x3.IfcAssemblyPlaceEnum> | IFC2x3.IfcAssemblyPlaceEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurnitureType;\n        ToTape(): any[];\n    }\n    class IfcGeometricCurveSet extends IFC2x3.IfcGeometricSet {\n        constructor(expressID: number, type: number, Elements: (Handle<IFC2x3.IfcGeometricSetSelect> | IFC2x3.IfcGeometricSetSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricCurveSet;\n        ToTape(): any[];\n    }\n    class IfcIShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        OverallWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        OverallDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), OverallWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), OverallDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcLShapeProfileDef extends IFC2x3.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        Width: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        EdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        LegSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null;\n        CentreOfGravityInX: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), Depth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), Width: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, EdgeRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, LegSlope: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure) | null, CentreOfGravityInX: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcLine extends IFC2x3.IfcCurve {\n        Pnt: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint);\n        Dir: (Handle<IFC2x3.IfcVector> | IFC2x3.IfcVector);\n        constructor(expressID: number, type: number, Pnt: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint), Dir: (Handle<IFC2x3.IfcVector> | IFC2x3.IfcVector));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLine;\n        ToTape(): any[];\n    }\n    class IfcManifoldSolidBrep extends IFC2x3.IfcSolidModel {\n        Outer: (Handle<IFC2x3.IfcClosedShell> | IFC2x3.IfcClosedShell);\n        constructor(expressID: number, type: number, Outer: (Handle<IFC2x3.IfcClosedShell> | IFC2x3.IfcClosedShell));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcManifoldSolidBrep;\n        ToTape(): any[];\n    }\n    class IfcObject extends IFC2x3.IfcObjectDefinition {\n        ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        IsDefinedBy: (Handle<IFC2x3.IfcRelDefines> | IFC2x3.IfcRelDefines)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObject;\n        ToTape(): any[];\n    }\n    class IfcOffsetCurve2D extends IFC2x3.IfcCurve {\n        BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        Distance: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        SelfIntersect: boolean;\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), Distance: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), SelfIntersect: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurve2D;\n        ToTape(): any[];\n    }\n    class IfcOffsetCurve3D extends IFC2x3.IfcCurve {\n        BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        Distance: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        SelfIntersect: boolean;\n        RefDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection);\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), Distance: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), SelfIntersect: boolean, RefDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurve3D;\n        ToTape(): any[];\n    }\n    class IfcPermeableCoveringProperties extends IFC2x3.IfcPropertySetDefinition {\n        OperationType: (Handle<IFC2x3.IfcPermeableCoveringOperationEnum> | IFC2x3.IfcPermeableCoveringOperationEnum);\n        PanelPosition: (Handle<IFC2x3.IfcWindowPanelPositionEnum> | IFC2x3.IfcWindowPanelPositionEnum);\n        FrameDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        FrameThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, OperationType: (Handle<IFC2x3.IfcPermeableCoveringOperationEnum> | IFC2x3.IfcPermeableCoveringOperationEnum), PanelPosition: (Handle<IFC2x3.IfcWindowPanelPositionEnum> | IFC2x3.IfcWindowPanelPositionEnum), FrameDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, FrameThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, ShapeAspectStyle: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPermeableCoveringProperties;\n        ToTape(): any[];\n    }\n    class IfcPlanarBox extends IFC2x3.IfcPlanarExtent {\n        Placement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement);\n        constructor(expressID: number, type: number, SizeInX: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), SizeInY: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure), Placement: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlanarBox;\n        ToTape(): any[];\n    }\n    class IfcPlane extends IFC2x3.IfcElementarySurface {\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlane;\n        ToTape(): any[];\n    }\n    class IfcProcess extends IFC2x3.IfcObject {\n        OperatesOn: (Handle<IFC2x3.IfcRelAssignsToProcess> | IFC2x3.IfcRelAssignsToProcess)[] | null;\n        IsSuccessorFrom: (Handle<IFC2x3.IfcRelSequence> | IFC2x3.IfcRelSequence)[] | null;\n        IsPredecessorTo: (Handle<IFC2x3.IfcRelSequence> | IFC2x3.IfcRelSequence)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProcess;\n        ToTape(): any[];\n    }\n    class IfcProduct extends IFC2x3.IfcObject {\n        ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null;\n        Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null;\n        ReferencedBy: (Handle<IFC2x3.IfcRelAssignsToProduct> | IFC2x3.IfcRelAssignsToProduct)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProduct;\n        ToTape(): any[];\n    }\n    class IfcProject extends IFC2x3.IfcObject {\n        LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Phase: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        RepresentationContexts: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext)[];\n        UnitsInContext: (Handle<IFC2x3.IfcUnitAssignment> | IFC2x3.IfcUnitAssignment);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Phase: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RepresentationContexts: (Handle<IFC2x3.IfcRepresentationContext> | IFC2x3.IfcRepresentationContext)[], UnitsInContext: (Handle<IFC2x3.IfcUnitAssignment> | IFC2x3.IfcUnitAssignment));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProject;\n        ToTape(): any[];\n    }\n    class IfcProjectionCurve extends IFC2x3.IfcAnnotationCurveOccurrence {\n        constructor(expressID: number, type: number, Item: (Handle<IFC2x3.IfcRepresentationItem> | IFC2x3.IfcRepresentationItem) | null, Styles: (Handle<IFC2x3.IfcPresentationStyleAssignment> | IFC2x3.IfcPresentationStyleAssignment)[], Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectionCurve;\n        ToTape(): any[];\n    }\n    class IfcPropertySet extends IFC2x3.IfcPropertySetDefinition {\n        HasProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, HasProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySet;\n        ToTape(): any[];\n    }\n    class IfcProxy extends IFC2x3.IfcProduct {\n        ProxyType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum);\n        Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, ProxyType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum), Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProxy;\n        ToTape(): any[];\n    }\n    class IfcRectangleHollowProfileDef extends IFC2x3.IfcRectangleProfileDef {\n        WallThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        InnerFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        OuterFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), XDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), YDim: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WallThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), InnerFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, OuterFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangleHollowProfileDef;\n        ToTape(): any[];\n    }\n    class IfcRectangularPyramid extends IFC2x3.IfcCsgPrimitive3D {\n        XLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        YLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), XLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), YLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangularPyramid;\n        ToTape(): any[];\n    }\n    class IfcRectangularTrimmedSurface extends IFC2x3.IfcBoundedSurface {\n        BasisSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface);\n        U1: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        V1: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        U2: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        V2: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        Usense: boolean;\n        Vsense: boolean;\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface), U1: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), V1: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), U2: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), V2: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), Usense: boolean, Vsense: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangularTrimmedSurface;\n        ToTape(): any[];\n    }\n    class IfcRelAssigns extends IFC2x3.IfcRelationship {\n        RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[];\n        RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssigns;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToActor extends IFC2x3.IfcRelAssigns {\n        RelatingActor: (Handle<IFC2x3.IfcActor> | IFC2x3.IfcActor);\n        ActingRole: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingActor: (Handle<IFC2x3.IfcActor> | IFC2x3.IfcActor), ActingRole: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToActor;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToControl extends IFC2x3.IfcRelAssigns {\n        RelatingControl: (Handle<IFC2x3.IfcControl> | IFC2x3.IfcControl);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingControl: (Handle<IFC2x3.IfcControl> | IFC2x3.IfcControl));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToControl;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToGroup extends IFC2x3.IfcRelAssigns {\n        RelatingGroup: (Handle<IFC2x3.IfcGroup> | IFC2x3.IfcGroup);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingGroup: (Handle<IFC2x3.IfcGroup> | IFC2x3.IfcGroup));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToGroup;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToProcess extends IFC2x3.IfcRelAssigns {\n        RelatingProcess: (Handle<IFC2x3.IfcProcess> | IFC2x3.IfcProcess);\n        QuantityInProcess: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingProcess: (Handle<IFC2x3.IfcProcess> | IFC2x3.IfcProcess), QuantityInProcess: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToProcess;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToProduct extends IFC2x3.IfcRelAssigns {\n        RelatingProduct: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingProduct: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToProduct;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToProjectOrder extends IFC2x3.IfcRelAssignsToControl {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingControl: (Handle<IFC2x3.IfcControl> | IFC2x3.IfcControl));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToProjectOrder;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToResource extends IFC2x3.IfcRelAssigns {\n        RelatingResource: (Handle<IFC2x3.IfcResource> | IFC2x3.IfcResource);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingResource: (Handle<IFC2x3.IfcResource> | IFC2x3.IfcResource));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToResource;\n        ToTape(): any[];\n    }\n    class IfcRelAssociates extends IFC2x3.IfcRelationship {\n        RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociates;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesAppliedValue extends IFC2x3.IfcRelAssociates {\n        RelatingAppliedValue: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], RelatingAppliedValue: (Handle<IFC2x3.IfcAppliedValue> | IFC2x3.IfcAppliedValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesAppliedValue;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesApproval extends IFC2x3.IfcRelAssociates {\n        RelatingApproval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], RelatingApproval: (Handle<IFC2x3.IfcApproval> | IFC2x3.IfcApproval));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesApproval;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesClassification extends IFC2x3.IfcRelAssociates {\n        RelatingClassification: (Handle<IFC2x3.IfcClassificationNotationSelect> | IFC2x3.IfcClassificationNotationSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], RelatingClassification: (Handle<IFC2x3.IfcClassificationNotationSelect> | IFC2x3.IfcClassificationNotationSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesClassification;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesConstraint extends IFC2x3.IfcRelAssociates {\n        Intent: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], Intent: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel), RelatingConstraint: (Handle<IFC2x3.IfcConstraint> | IFC2x3.IfcConstraint));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesConstraint;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesDocument extends IFC2x3.IfcRelAssociates {\n        RelatingDocument: (Handle<IFC2x3.IfcDocumentSelect> | IFC2x3.IfcDocumentSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], RelatingDocument: (Handle<IFC2x3.IfcDocumentSelect> | IFC2x3.IfcDocumentSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesDocument;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesLibrary extends IFC2x3.IfcRelAssociates {\n        RelatingLibrary: (Handle<IFC2x3.IfcLibrarySelect> | IFC2x3.IfcLibrarySelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], RelatingLibrary: (Handle<IFC2x3.IfcLibrarySelect> | IFC2x3.IfcLibrarySelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesLibrary;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesMaterial extends IFC2x3.IfcRelAssociates {\n        RelatingMaterial: (Handle<IFC2x3.IfcMaterialSelect> | IFC2x3.IfcMaterialSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], RelatingMaterial: (Handle<IFC2x3.IfcMaterialSelect> | IFC2x3.IfcMaterialSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesMaterial;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesProfileProperties extends IFC2x3.IfcRelAssociates {\n        RelatingProfileProperties: (Handle<IFC2x3.IfcProfileProperties> | IFC2x3.IfcProfileProperties);\n        ProfileSectionLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null;\n        ProfileOrientation: (Handle<IFC2x3.IfcOrientationSelect> | IFC2x3.IfcOrientationSelect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcRoot> | IFC2x3.IfcRoot)[], RelatingProfileProperties: (Handle<IFC2x3.IfcProfileProperties> | IFC2x3.IfcProfileProperties), ProfileSectionLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect) | null, ProfileOrientation: (Handle<IFC2x3.IfcOrientationSelect> | IFC2x3.IfcOrientationSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesProfileProperties;\n        ToTape(): any[];\n    }\n    class IfcRelConnects extends IFC2x3.IfcRelationship {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnects;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsElements extends IFC2x3.IfcRelConnects {\n        ConnectionGeometry: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry) | null;\n        RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        RelatedElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ConnectionGeometry: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry) | null, RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatedElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsElements;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsPathElements extends IFC2x3.IfcRelConnectsElements {\n        RelatingPriorities: number[];\n        RelatedPriorities: number[];\n        RelatedConnectionType: (Handle<IFC2x3.IfcConnectionTypeEnum> | IFC2x3.IfcConnectionTypeEnum);\n        RelatingConnectionType: (Handle<IFC2x3.IfcConnectionTypeEnum> | IFC2x3.IfcConnectionTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ConnectionGeometry: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry) | null, RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatedElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatingPriorities: number[], RelatedPriorities: number[], RelatedConnectionType: (Handle<IFC2x3.IfcConnectionTypeEnum> | IFC2x3.IfcConnectionTypeEnum), RelatingConnectionType: (Handle<IFC2x3.IfcConnectionTypeEnum> | IFC2x3.IfcConnectionTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPathElements;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsPortToElement extends IFC2x3.IfcRelConnects {\n        RelatingPort: (Handle<IFC2x3.IfcPort> | IFC2x3.IfcPort);\n        RelatedElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingPort: (Handle<IFC2x3.IfcPort> | IFC2x3.IfcPort), RelatedElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPortToElement;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsPorts extends IFC2x3.IfcRelConnects {\n        RelatingPort: (Handle<IFC2x3.IfcPort> | IFC2x3.IfcPort);\n        RelatedPort: (Handle<IFC2x3.IfcPort> | IFC2x3.IfcPort);\n        RealizingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingPort: (Handle<IFC2x3.IfcPort> | IFC2x3.IfcPort), RelatedPort: (Handle<IFC2x3.IfcPort> | IFC2x3.IfcPort), RealizingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPorts;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsStructuralActivity extends IFC2x3.IfcRelConnects {\n        RelatingElement: (Handle<IFC2x3.IfcStructuralActivityAssignmentSelect> | IFC2x3.IfcStructuralActivityAssignmentSelect);\n        RelatedStructuralActivity: (Handle<IFC2x3.IfcStructuralActivity> | IFC2x3.IfcStructuralActivity);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingElement: (Handle<IFC2x3.IfcStructuralActivityAssignmentSelect> | IFC2x3.IfcStructuralActivityAssignmentSelect), RelatedStructuralActivity: (Handle<IFC2x3.IfcStructuralActivity> | IFC2x3.IfcStructuralActivity));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsStructuralActivity;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsStructuralElement extends IFC2x3.IfcRelConnects {\n        RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        RelatedStructuralMember: (Handle<IFC2x3.IfcStructuralMember> | IFC2x3.IfcStructuralMember);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatedStructuralMember: (Handle<IFC2x3.IfcStructuralMember> | IFC2x3.IfcStructuralMember));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsStructuralElement;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsStructuralMember extends IFC2x3.IfcRelConnects {\n        RelatingStructuralMember: (Handle<IFC2x3.IfcStructuralMember> | IFC2x3.IfcStructuralMember);\n        RelatedStructuralConnection: (Handle<IFC2x3.IfcStructuralConnection> | IFC2x3.IfcStructuralConnection);\n        AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null;\n        AdditionalConditions: (Handle<IFC2x3.IfcStructuralConnectionCondition> | IFC2x3.IfcStructuralConnectionCondition) | null;\n        SupportedLength: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        ConditionCoordinateSystem: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingStructuralMember: (Handle<IFC2x3.IfcStructuralMember> | IFC2x3.IfcStructuralMember), RelatedStructuralConnection: (Handle<IFC2x3.IfcStructuralConnection> | IFC2x3.IfcStructuralConnection), AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null, AdditionalConditions: (Handle<IFC2x3.IfcStructuralConnectionCondition> | IFC2x3.IfcStructuralConnectionCondition) | null, SupportedLength: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ConditionCoordinateSystem: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsStructuralMember;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsWithEccentricity extends IFC2x3.IfcRelConnectsStructuralMember {\n        ConnectionConstraint: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingStructuralMember: (Handle<IFC2x3.IfcStructuralMember> | IFC2x3.IfcStructuralMember), RelatedStructuralConnection: (Handle<IFC2x3.IfcStructuralConnection> | IFC2x3.IfcStructuralConnection), AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null, AdditionalConditions: (Handle<IFC2x3.IfcStructuralConnectionCondition> | IFC2x3.IfcStructuralConnectionCondition) | null, SupportedLength: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ConditionCoordinateSystem: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D) | null, ConnectionConstraint: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsWithEccentricity;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsWithRealizingElements extends IFC2x3.IfcRelConnectsElements {\n        RealizingElements: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement)[];\n        ConnectionType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ConnectionGeometry: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry) | null, RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatedElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RealizingElements: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement)[], ConnectionType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsWithRealizingElements;\n        ToTape(): any[];\n    }\n    class IfcRelContainedInSpatialStructure extends IFC2x3.IfcRelConnects {\n        RelatedElements: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct)[];\n        RelatingStructure: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedElements: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct)[], RelatingStructure: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelContainedInSpatialStructure;\n        ToTape(): any[];\n    }\n    class IfcRelCoversBldgElements extends IFC2x3.IfcRelConnects {\n        RelatingBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        RelatedCoverings: (Handle<IFC2x3.IfcCovering> | IFC2x3.IfcCovering)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatedCoverings: (Handle<IFC2x3.IfcCovering> | IFC2x3.IfcCovering)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelCoversBldgElements;\n        ToTape(): any[];\n    }\n    class IfcRelCoversSpaces extends IFC2x3.IfcRelConnects {\n        RelatedSpace: (Handle<IFC2x3.IfcSpace> | IFC2x3.IfcSpace);\n        RelatedCoverings: (Handle<IFC2x3.IfcCovering> | IFC2x3.IfcCovering)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedSpace: (Handle<IFC2x3.IfcSpace> | IFC2x3.IfcSpace), RelatedCoverings: (Handle<IFC2x3.IfcCovering> | IFC2x3.IfcCovering)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelCoversSpaces;\n        ToTape(): any[];\n    }\n    class IfcRelDecomposes extends IFC2x3.IfcRelationship {\n        RelatingObject: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition);\n        RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingObject: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition), RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDecomposes;\n        ToTape(): any[];\n    }\n    class IfcRelDefines extends IFC2x3.IfcRelationship {\n        RelatedObjects: (Handle<IFC2x3.IfcObject> | IFC2x3.IfcObject)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObject> | IFC2x3.IfcObject)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefines;\n        ToTape(): any[];\n    }\n    class IfcRelDefinesByProperties extends IFC2x3.IfcRelDefines {\n        RelatingPropertyDefinition: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObject> | IFC2x3.IfcObject)[], RelatingPropertyDefinition: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByProperties;\n        ToTape(): any[];\n    }\n    class IfcRelDefinesByType extends IFC2x3.IfcRelDefines {\n        RelatingType: (Handle<IFC2x3.IfcTypeObject> | IFC2x3.IfcTypeObject);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObject> | IFC2x3.IfcObject)[], RelatingType: (Handle<IFC2x3.IfcTypeObject> | IFC2x3.IfcTypeObject));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByType;\n        ToTape(): any[];\n    }\n    class IfcRelFillsElement extends IFC2x3.IfcRelConnects {\n        RelatingOpeningElement: (Handle<IFC2x3.IfcOpeningElement> | IFC2x3.IfcOpeningElement);\n        RelatedBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingOpeningElement: (Handle<IFC2x3.IfcOpeningElement> | IFC2x3.IfcOpeningElement), RelatedBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelFillsElement;\n        ToTape(): any[];\n    }\n    class IfcRelFlowControlElements extends IFC2x3.IfcRelConnects {\n        RelatedControlElements: (Handle<IFC2x3.IfcDistributionControlElement> | IFC2x3.IfcDistributionControlElement)[];\n        RelatingFlowElement: (Handle<IFC2x3.IfcDistributionFlowElement> | IFC2x3.IfcDistributionFlowElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedControlElements: (Handle<IFC2x3.IfcDistributionControlElement> | IFC2x3.IfcDistributionControlElement)[], RelatingFlowElement: (Handle<IFC2x3.IfcDistributionFlowElement> | IFC2x3.IfcDistributionFlowElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelFlowControlElements;\n        ToTape(): any[];\n    }\n    class IfcRelInteractionRequirements extends IFC2x3.IfcRelConnects {\n        DailyInteraction: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure) | null;\n        ImportanceRating: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        LocationOfInteraction: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement) | null;\n        RelatedSpaceProgram: (Handle<IFC2x3.IfcSpaceProgram> | IFC2x3.IfcSpaceProgram);\n        RelatingSpaceProgram: (Handle<IFC2x3.IfcSpaceProgram> | IFC2x3.IfcSpaceProgram);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, DailyInteraction: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure) | null, ImportanceRating: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, LocationOfInteraction: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement) | null, RelatedSpaceProgram: (Handle<IFC2x3.IfcSpaceProgram> | IFC2x3.IfcSpaceProgram), RelatingSpaceProgram: (Handle<IFC2x3.IfcSpaceProgram> | IFC2x3.IfcSpaceProgram));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelInteractionRequirements;\n        ToTape(): any[];\n    }\n    class IfcRelNests extends IFC2x3.IfcRelDecomposes {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingObject: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition), RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelNests;\n        ToTape(): any[];\n    }\n    class IfcRelOccupiesSpaces extends IFC2x3.IfcRelAssignsToActor {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingActor: (Handle<IFC2x3.IfcActor> | IFC2x3.IfcActor), ActingRole: (Handle<IFC2x3.IfcActorRole> | IFC2x3.IfcActorRole) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelOccupiesSpaces;\n        ToTape(): any[];\n    }\n    class IfcRelOverridesProperties extends IFC2x3.IfcRelDefinesByProperties {\n        OverridingProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObject> | IFC2x3.IfcObject)[], RelatingPropertyDefinition: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition), OverridingProperties: (Handle<IFC2x3.IfcProperty> | IFC2x3.IfcProperty)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelOverridesProperties;\n        ToTape(): any[];\n    }\n    class IfcRelProjectsElement extends IFC2x3.IfcRelConnects {\n        RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        RelatedFeatureElement: (Handle<IFC2x3.IfcFeatureElementAddition> | IFC2x3.IfcFeatureElementAddition);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatedFeatureElement: (Handle<IFC2x3.IfcFeatureElementAddition> | IFC2x3.IfcFeatureElementAddition));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelProjectsElement;\n        ToTape(): any[];\n    }\n    class IfcRelReferencedInSpatialStructure extends IFC2x3.IfcRelConnects {\n        RelatedElements: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct)[];\n        RelatingStructure: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedElements: (Handle<IFC2x3.IfcProduct> | IFC2x3.IfcProduct)[], RelatingStructure: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelReferencedInSpatialStructure;\n        ToTape(): any[];\n    }\n    class IfcRelSchedulesCostItems extends IFC2x3.IfcRelAssignsToControl {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingControl: (Handle<IFC2x3.IfcControl> | IFC2x3.IfcControl));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelSchedulesCostItems;\n        ToTape(): any[];\n    }\n    class IfcRelSequence extends IFC2x3.IfcRelConnects {\n        RelatingProcess: (Handle<IFC2x3.IfcProcess> | IFC2x3.IfcProcess);\n        RelatedProcess: (Handle<IFC2x3.IfcProcess> | IFC2x3.IfcProcess);\n        TimeLag: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure);\n        SequenceType: (Handle<IFC2x3.IfcSequenceEnum> | IFC2x3.IfcSequenceEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingProcess: (Handle<IFC2x3.IfcProcess> | IFC2x3.IfcProcess), RelatedProcess: (Handle<IFC2x3.IfcProcess> | IFC2x3.IfcProcess), TimeLag: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure), SequenceType: (Handle<IFC2x3.IfcSequenceEnum> | IFC2x3.IfcSequenceEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelSequence;\n        ToTape(): any[];\n    }\n    class IfcRelServicesBuildings extends IFC2x3.IfcRelConnects {\n        RelatingSystem: (Handle<IFC2x3.IfcSystem> | IFC2x3.IfcSystem);\n        RelatedBuildings: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingSystem: (Handle<IFC2x3.IfcSystem> | IFC2x3.IfcSystem), RelatedBuildings: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelServicesBuildings;\n        ToTape(): any[];\n    }\n    class IfcRelSpaceBoundary extends IFC2x3.IfcRelConnects {\n        RelatingSpace: (Handle<IFC2x3.IfcSpace> | IFC2x3.IfcSpace);\n        RelatedBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement) | null;\n        ConnectionGeometry: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry) | null;\n        PhysicalOrVirtualBoundary: (Handle<IFC2x3.IfcPhysicalOrVirtualEnum> | IFC2x3.IfcPhysicalOrVirtualEnum);\n        InternalOrExternalBoundary: (Handle<IFC2x3.IfcInternalOrExternalEnum> | IFC2x3.IfcInternalOrExternalEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingSpace: (Handle<IFC2x3.IfcSpace> | IFC2x3.IfcSpace), RelatedBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement) | null, ConnectionGeometry: (Handle<IFC2x3.IfcConnectionGeometry> | IFC2x3.IfcConnectionGeometry) | null, PhysicalOrVirtualBoundary: (Handle<IFC2x3.IfcPhysicalOrVirtualEnum> | IFC2x3.IfcPhysicalOrVirtualEnum), InternalOrExternalBoundary: (Handle<IFC2x3.IfcInternalOrExternalEnum> | IFC2x3.IfcInternalOrExternalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelSpaceBoundary;\n        ToTape(): any[];\n    }\n    class IfcRelVoidsElement extends IFC2x3.IfcRelConnects {\n        RelatingBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement);\n        RelatedOpeningElement: (Handle<IFC2x3.IfcFeatureElementSubtraction> | IFC2x3.IfcFeatureElementSubtraction);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingBuildingElement: (Handle<IFC2x3.IfcElement> | IFC2x3.IfcElement), RelatedOpeningElement: (Handle<IFC2x3.IfcFeatureElementSubtraction> | IFC2x3.IfcFeatureElementSubtraction));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelVoidsElement;\n        ToTape(): any[];\n    }\n    class IfcResource extends IFC2x3.IfcObject {\n        ResourceOf: (Handle<IFC2x3.IfcRelAssignsToResource> | IFC2x3.IfcRelAssignsToResource)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcResource;\n        ToTape(): any[];\n    }\n    class IfcRevolvedAreaSolid extends IFC2x3.IfcSweptAreaSolid {\n        Axis: (Handle<IFC2x3.IfcAxis1Placement> | IFC2x3.IfcAxis1Placement);\n        Angle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), Axis: (Handle<IFC2x3.IfcAxis1Placement> | IFC2x3.IfcAxis1Placement), Angle: (Handle<IFC2x3.IfcPlaneAngleMeasure> | IFC2x3.IfcPlaneAngleMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRevolvedAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcRightCircularCone extends IFC2x3.IfcCsgPrimitive3D {\n        Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        BottomRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), BottomRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRightCircularCone;\n        ToTape(): any[];\n    }\n    class IfcRightCircularCylinder extends IFC2x3.IfcCsgPrimitive3D {\n        Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRightCircularCylinder;\n        ToTape(): any[];\n    }\n    class IfcSpatialStructureElement extends IFC2x3.IfcProduct {\n        LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum);\n        ReferencesElements: (Handle<IFC2x3.IfcRelReferencedInSpatialStructure> | IFC2x3.IfcRelReferencedInSpatialStructure)[] | null;\n        ServicedBySystems: (Handle<IFC2x3.IfcRelServicesBuildings> | IFC2x3.IfcRelServicesBuildings)[] | null;\n        ContainsElements: (Handle<IFC2x3.IfcRelContainedInSpatialStructure> | IFC2x3.IfcRelContainedInSpatialStructure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialStructureElement;\n        ToTape(): any[];\n    }\n    class IfcSpatialStructureElementType extends IFC2x3.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialStructureElementType;\n        ToTape(): any[];\n    }\n    class IfcSphere extends IFC2x3.IfcCsgPrimitive3D {\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSphere;\n        ToTape(): any[];\n    }\n    class IfcStructuralActivity extends IFC2x3.IfcProduct {\n        AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad);\n        GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum);\n        AssignedToStructuralItem: (Handle<IFC2x3.IfcRelConnectsStructuralActivity> | IFC2x3.IfcRelConnectsStructuralActivity) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralActivity;\n        ToTape(): any[];\n    }\n    class IfcStructuralItem extends IFC2x3.IfcProduct {\n        AssignedStructuralActivity: (Handle<IFC2x3.IfcRelConnectsStructuralActivity> | IFC2x3.IfcRelConnectsStructuralActivity)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralItem;\n        ToTape(): any[];\n    }\n    class IfcStructuralMember extends IFC2x3.IfcStructuralItem {\n        ReferencesElement: (Handle<IFC2x3.IfcRelConnectsStructuralElement> | IFC2x3.IfcRelConnectsStructuralElement)[] | null;\n        ConnectedBy: (Handle<IFC2x3.IfcRelConnectsStructuralMember> | IFC2x3.IfcRelConnectsStructuralMember)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralMember;\n        ToTape(): any[];\n    }\n    class IfcStructuralReaction extends IFC2x3.IfcStructuralActivity {\n        Causes: (Handle<IFC2x3.IfcStructuralAction> | IFC2x3.IfcStructuralAction)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralReaction;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceMember extends IFC2x3.IfcStructuralMember {\n        PredefinedType: (Handle<IFC2x3.IfcStructuralSurfaceTypeEnum> | IFC2x3.IfcStructuralSurfaceTypeEnum);\n        Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC2x3.IfcStructuralSurfaceTypeEnum> | IFC2x3.IfcStructuralSurfaceTypeEnum), Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceMember;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceMemberVarying extends IFC2x3.IfcStructuralSurfaceMember {\n        SubsequentThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure)[];\n        VaryingThicknessLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC2x3.IfcStructuralSurfaceTypeEnum> | IFC2x3.IfcStructuralSurfaceTypeEnum), Thickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, SubsequentThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure)[], VaryingThicknessLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceMemberVarying;\n        ToTape(): any[];\n    }\n    class IfcStructuredDimensionCallout extends IFC2x3.IfcDraughtingCallout {\n        constructor(expressID: number, type: number, Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuredDimensionCallout;\n        ToTape(): any[];\n    }\n    class IfcSurfaceCurveSweptAreaSolid extends IFC2x3.IfcSweptAreaSolid {\n        Directrix: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        StartParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        EndParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue);\n        ReferenceSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), Directrix: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), StartParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), EndParam: (Handle<IFC2x3.IfcParameterValue> | IFC2x3.IfcParameterValue), ReferenceSurface: (Handle<IFC2x3.IfcSurface> | IFC2x3.IfcSurface));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceCurveSweptAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcSurfaceOfLinearExtrusion extends IFC2x3.IfcSweptSurface {\n        ExtrudedDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection);\n        Depth: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure);\n        constructor(expressID: number, type: number, SweptCurve: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), ExtrudedDirection: (Handle<IFC2x3.IfcDirection> | IFC2x3.IfcDirection), Depth: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceOfLinearExtrusion;\n        ToTape(): any[];\n    }\n    class IfcSurfaceOfRevolution extends IFC2x3.IfcSweptSurface {\n        AxisPosition: (Handle<IFC2x3.IfcAxis1Placement> | IFC2x3.IfcAxis1Placement);\n        constructor(expressID: number, type: number, SweptCurve: (Handle<IFC2x3.IfcProfileDef> | IFC2x3.IfcProfileDef), Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), AxisPosition: (Handle<IFC2x3.IfcAxis1Placement> | IFC2x3.IfcAxis1Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceOfRevolution;\n        ToTape(): any[];\n    }\n    class IfcSystemFurnitureElementType extends IFC2x3.IfcFurnishingElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSystemFurnitureElementType;\n        ToTape(): any[];\n    }\n    class IfcTask extends IFC2x3.IfcProcess {\n        TaskId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        WorkMethod: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        IsMilestone: boolean;\n        Priority: number | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TaskId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, WorkMethod: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, IsMilestone: boolean, Priority: number | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTask;\n        ToTape(): any[];\n    }\n    class IfcTransportElementType extends IFC2x3.IfcElementType {\n        PredefinedType: (Handle<IFC2x3.IfcTransportElementTypeEnum> | IFC2x3.IfcTransportElementTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcTransportElementTypeEnum> | IFC2x3.IfcTransportElementTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTransportElementType;\n        ToTape(): any[];\n    }\n    class IfcActor extends IFC2x3.IfcObject {\n        TheActor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect);\n        IsActingUpon: (Handle<IFC2x3.IfcRelAssignsToActor> | IFC2x3.IfcRelAssignsToActor)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TheActor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActor;\n        ToTape(): any[];\n    }\n    class IfcAnnotation extends IFC2x3.IfcProduct {\n        ContainedInStructure: (Handle<IFC2x3.IfcRelContainedInSpatialStructure> | IFC2x3.IfcRelContainedInSpatialStructure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotation;\n        ToTape(): any[];\n    }\n    class IfcAsymmetricIShapeProfileDef extends IFC2x3.IfcIShapeProfileDef {\n        TopFlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        TopFlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        TopFlangeFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), OverallWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), OverallDepth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, TopFlangeWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), TopFlangeThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, TopFlangeFilletRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, CentreOfGravityInY: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAsymmetricIShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcBlock extends IFC2x3.IfcCsgPrimitive3D {\n        XLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        YLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        ZLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D), XLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), YLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), ZLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBlock;\n        ToTape(): any[];\n    }\n    class IfcBooleanClippingResult extends IFC2x3.IfcBooleanResult {\n        constructor(expressID: number, type: number, Operator: (Handle<IFC2x3.IfcBooleanOperator> | IFC2x3.IfcBooleanOperator), FirstOperand: (Handle<IFC2x3.IfcBooleanOperand> | IFC2x3.IfcBooleanOperand), SecondOperand: (Handle<IFC2x3.IfcBooleanOperand> | IFC2x3.IfcBooleanOperand));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBooleanClippingResult;\n        ToTape(): any[];\n    }\n    class IfcBoundedCurve extends IFC2x3.IfcCurve {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundedCurve;\n        ToTape(): any[];\n    }\n    class IfcBuilding extends IFC2x3.IfcSpatialStructureElement {\n        ElevationOfRefHeight: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        ElevationOfTerrain: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        BuildingAddress: (Handle<IFC2x3.IfcPostalAddress> | IFC2x3.IfcPostalAddress) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum), ElevationOfRefHeight: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, ElevationOfTerrain: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, BuildingAddress: (Handle<IFC2x3.IfcPostalAddress> | IFC2x3.IfcPostalAddress) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuilding;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementType extends IFC2x3.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementType;\n        ToTape(): any[];\n    }\n    class IfcBuildingStorey extends IFC2x3.IfcSpatialStructureElement {\n        Elevation: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum), Elevation: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingStorey;\n        ToTape(): any[];\n    }\n    class IfcCircleHollowProfileDef extends IFC2x3.IfcCircleProfileDef {\n        WallThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC2x3.IfcProfileTypeEnum> | IFC2x3.IfcProfileTypeEnum), ProfileName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Position: (Handle<IFC2x3.IfcAxis2Placement2D> | IFC2x3.IfcAxis2Placement2D), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), WallThickness: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCircleHollowProfileDef;\n        ToTape(): any[];\n    }\n    class IfcColumnType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcColumnTypeEnum> | IFC2x3.IfcColumnTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcColumnTypeEnum> | IFC2x3.IfcColumnTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColumnType;\n        ToTape(): any[];\n    }\n    class IfcCompositeCurve extends IFC2x3.IfcBoundedCurve {\n        Segments: (Handle<IFC2x3.IfcCompositeCurveSegment> | IFC2x3.IfcCompositeCurveSegment)[];\n        SelfIntersect: boolean;\n        constructor(expressID: number, type: number, Segments: (Handle<IFC2x3.IfcCompositeCurveSegment> | IFC2x3.IfcCompositeCurveSegment)[], SelfIntersect: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurve;\n        ToTape(): any[];\n    }\n    class IfcConic extends IFC2x3.IfcCurve {\n        Position: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConic;\n        ToTape(): any[];\n    }\n    class IfcConstructionResource extends IFC2x3.IfcResource {\n        ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null;\n        ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null;\n        BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null, BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionResource;\n        ToTape(): any[];\n    }\n    class IfcControl extends IFC2x3.IfcObject {\n        Controls: (Handle<IFC2x3.IfcRelAssignsToControl> | IFC2x3.IfcRelAssignsToControl)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcControl;\n        ToTape(): any[];\n    }\n    class IfcCostItem extends IFC2x3.IfcControl {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCostItem;\n        ToTape(): any[];\n    }\n    class IfcCostSchedule extends IFC2x3.IfcControl {\n        SubmittedBy: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null;\n        PreparedBy: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null;\n        SubmittedOn: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        TargetUsers: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect)[] | null;\n        UpdateDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        ID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        PredefinedType: (Handle<IFC2x3.IfcCostScheduleTypeEnum> | IFC2x3.IfcCostScheduleTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, SubmittedBy: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null, PreparedBy: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null, SubmittedOn: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TargetUsers: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect)[] | null, UpdateDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, ID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), PredefinedType: (Handle<IFC2x3.IfcCostScheduleTypeEnum> | IFC2x3.IfcCostScheduleTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCostSchedule;\n        ToTape(): any[];\n    }\n    class IfcCoveringType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcCoveringTypeEnum> | IFC2x3.IfcCoveringTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCoveringTypeEnum> | IFC2x3.IfcCoveringTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoveringType;\n        ToTape(): any[];\n    }\n    class IfcCrewResource extends IFC2x3.IfcConstructionResource {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null, BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCrewResource;\n        ToTape(): any[];\n    }\n    class IfcCurtainWallType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcCurtainWallTypeEnum> | IFC2x3.IfcCurtainWallTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCurtainWallTypeEnum> | IFC2x3.IfcCurtainWallTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurtainWallType;\n        ToTape(): any[];\n    }\n    class IfcDimensionCurveDirectedCallout extends IFC2x3.IfcDraughtingCallout {\n        constructor(expressID: number, type: number, Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionCurveDirectedCallout;\n        ToTape(): any[];\n    }\n    class IfcDistributionElementType extends IFC2x3.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionElementType;\n        ToTape(): any[];\n    }\n    class IfcDistributionFlowElementType extends IFC2x3.IfcDistributionElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionFlowElementType;\n        ToTape(): any[];\n    }\n    class IfcElectricalBaseProperties extends IFC2x3.IfcEnergyProperties {\n        ElectricCurrentType: (Handle<IFC2x3.IfcElectricCurrentEnum> | IFC2x3.IfcElectricCurrentEnum) | null;\n        InputVoltage: (Handle<IFC2x3.IfcElectricVoltageMeasure> | IFC2x3.IfcElectricVoltageMeasure);\n        InputFrequency: (Handle<IFC2x3.IfcFrequencyMeasure> | IFC2x3.IfcFrequencyMeasure);\n        FullLoadCurrent: (Handle<IFC2x3.IfcElectricCurrentMeasure> | IFC2x3.IfcElectricCurrentMeasure) | null;\n        MinimumCircuitCurrent: (Handle<IFC2x3.IfcElectricCurrentMeasure> | IFC2x3.IfcElectricCurrentMeasure) | null;\n        MaximumPowerInput: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure) | null;\n        RatedPowerInput: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure) | null;\n        InputPhase: number;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, EnergySequence: (Handle<IFC2x3.IfcEnergySequenceEnum> | IFC2x3.IfcEnergySequenceEnum) | null, UserDefinedEnergySequence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElectricCurrentType: (Handle<IFC2x3.IfcElectricCurrentEnum> | IFC2x3.IfcElectricCurrentEnum) | null, InputVoltage: (Handle<IFC2x3.IfcElectricVoltageMeasure> | IFC2x3.IfcElectricVoltageMeasure), InputFrequency: (Handle<IFC2x3.IfcFrequencyMeasure> | IFC2x3.IfcFrequencyMeasure), FullLoadCurrent: (Handle<IFC2x3.IfcElectricCurrentMeasure> | IFC2x3.IfcElectricCurrentMeasure) | null, MinimumCircuitCurrent: (Handle<IFC2x3.IfcElectricCurrentMeasure> | IFC2x3.IfcElectricCurrentMeasure) | null, MaximumPowerInput: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure) | null, RatedPowerInput: (Handle<IFC2x3.IfcPowerMeasure> | IFC2x3.IfcPowerMeasure) | null, InputPhase: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricalBaseProperties;\n        ToTape(): any[];\n    }\n    class IfcElement extends IFC2x3.IfcProduct {\n        Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null;\n        HasStructuralMember: (Handle<IFC2x3.IfcRelConnectsStructuralElement> | IFC2x3.IfcRelConnectsStructuralElement)[] | null;\n        FillsVoids: (Handle<IFC2x3.IfcRelFillsElement> | IFC2x3.IfcRelFillsElement)[] | null;\n        ConnectedTo: (Handle<IFC2x3.IfcRelConnectsElements> | IFC2x3.IfcRelConnectsElements)[] | null;\n        HasCoverings: (Handle<IFC2x3.IfcRelCoversBldgElements> | IFC2x3.IfcRelCoversBldgElements)[] | null;\n        HasProjections: (Handle<IFC2x3.IfcRelProjectsElement> | IFC2x3.IfcRelProjectsElement)[] | null;\n        ReferencedInStructures: (Handle<IFC2x3.IfcRelReferencedInSpatialStructure> | IFC2x3.IfcRelReferencedInSpatialStructure)[] | null;\n        HasPorts: (Handle<IFC2x3.IfcRelConnectsPortToElement> | IFC2x3.IfcRelConnectsPortToElement)[] | null;\n        HasOpenings: (Handle<IFC2x3.IfcRelVoidsElement> | IFC2x3.IfcRelVoidsElement)[] | null;\n        IsConnectionRealization: (Handle<IFC2x3.IfcRelConnectsWithRealizingElements> | IFC2x3.IfcRelConnectsWithRealizingElements)[] | null;\n        ProvidesBoundaries: (Handle<IFC2x3.IfcRelSpaceBoundary> | IFC2x3.IfcRelSpaceBoundary)[] | null;\n        ConnectedFrom: (Handle<IFC2x3.IfcRelConnectsElements> | IFC2x3.IfcRelConnectsElements)[] | null;\n        ContainedInStructure: (Handle<IFC2x3.IfcRelContainedInSpatialStructure> | IFC2x3.IfcRelContainedInSpatialStructure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElement;\n        ToTape(): any[];\n    }\n    class IfcElementAssembly extends IFC2x3.IfcElement {\n        AssemblyPlace: (Handle<IFC2x3.IfcAssemblyPlaceEnum> | IFC2x3.IfcAssemblyPlaceEnum) | null;\n        PredefinedType: (Handle<IFC2x3.IfcElementAssemblyTypeEnum> | IFC2x3.IfcElementAssemblyTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, AssemblyPlace: (Handle<IFC2x3.IfcAssemblyPlaceEnum> | IFC2x3.IfcAssemblyPlaceEnum) | null, PredefinedType: (Handle<IFC2x3.IfcElementAssemblyTypeEnum> | IFC2x3.IfcElementAssemblyTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementAssembly;\n        ToTape(): any[];\n    }\n    class IfcElementComponent extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementComponent;\n        ToTape(): any[];\n    }\n    class IfcElementComponentType extends IFC2x3.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementComponentType;\n        ToTape(): any[];\n    }\n    class IfcEllipse extends IFC2x3.IfcConic {\n        SemiAxis1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        SemiAxis2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), SemiAxis1: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), SemiAxis2: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEllipse;\n        ToTape(): any[];\n    }\n    class IfcEnergyConversionDeviceType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEnergyConversionDeviceType;\n        ToTape(): any[];\n    }\n    class IfcEquipmentElement extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEquipmentElement;\n        ToTape(): any[];\n    }\n    class IfcEquipmentStandard extends IFC2x3.IfcControl {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEquipmentStandard;\n        ToTape(): any[];\n    }\n    class IfcEvaporativeCoolerType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcEvaporativeCoolerTypeEnum> | IFC2x3.IfcEvaporativeCoolerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcEvaporativeCoolerTypeEnum> | IFC2x3.IfcEvaporativeCoolerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporativeCoolerType;\n        ToTape(): any[];\n    }\n    class IfcEvaporatorType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcEvaporatorTypeEnum> | IFC2x3.IfcEvaporatorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcEvaporatorTypeEnum> | IFC2x3.IfcEvaporatorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporatorType;\n        ToTape(): any[];\n    }\n    class IfcFacetedBrep extends IFC2x3.IfcManifoldSolidBrep {\n        constructor(expressID: number, type: number, Outer: (Handle<IFC2x3.IfcClosedShell> | IFC2x3.IfcClosedShell));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFacetedBrep;\n        ToTape(): any[];\n    }\n    class IfcFacetedBrepWithVoids extends IFC2x3.IfcManifoldSolidBrep {\n        Voids: (Handle<IFC2x3.IfcClosedShell> | IFC2x3.IfcClosedShell)[];\n        constructor(expressID: number, type: number, Outer: (Handle<IFC2x3.IfcClosedShell> | IFC2x3.IfcClosedShell), Voids: (Handle<IFC2x3.IfcClosedShell> | IFC2x3.IfcClosedShell)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFacetedBrepWithVoids;\n        ToTape(): any[];\n    }\n    class IfcFastener extends IFC2x3.IfcElementComponent {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFastener;\n        ToTape(): any[];\n    }\n    class IfcFastenerType extends IFC2x3.IfcElementComponentType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFastenerType;\n        ToTape(): any[];\n    }\n    class IfcFeatureElement extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElement;\n        ToTape(): any[];\n    }\n    class IfcFeatureElementAddition extends IFC2x3.IfcFeatureElement {\n        ProjectsElements: (Handle<IFC2x3.IfcRelProjectsElement> | IFC2x3.IfcRelProjectsElement) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElementAddition;\n        ToTape(): any[];\n    }\n    class IfcFeatureElementSubtraction extends IFC2x3.IfcFeatureElement {\n        VoidsElements: (Handle<IFC2x3.IfcRelVoidsElement> | IFC2x3.IfcRelVoidsElement) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElementSubtraction;\n        ToTape(): any[];\n    }\n    class IfcFlowControllerType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowControllerType;\n        ToTape(): any[];\n    }\n    class IfcFlowFittingType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowFittingType;\n        ToTape(): any[];\n    }\n    class IfcFlowMeterType extends IFC2x3.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC2x3.IfcFlowMeterTypeEnum> | IFC2x3.IfcFlowMeterTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcFlowMeterTypeEnum> | IFC2x3.IfcFlowMeterTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMeterType;\n        ToTape(): any[];\n    }\n    class IfcFlowMovingDeviceType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMovingDeviceType;\n        ToTape(): any[];\n    }\n    class IfcFlowSegmentType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowSegmentType;\n        ToTape(): any[];\n    }\n    class IfcFlowStorageDeviceType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowStorageDeviceType;\n        ToTape(): any[];\n    }\n    class IfcFlowTerminalType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTerminalType;\n        ToTape(): any[];\n    }\n    class IfcFlowTreatmentDeviceType extends IFC2x3.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTreatmentDeviceType;\n        ToTape(): any[];\n    }\n    class IfcFurnishingElement extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurnishingElement;\n        ToTape(): any[];\n    }\n    class IfcFurnitureStandard extends IFC2x3.IfcControl {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurnitureStandard;\n        ToTape(): any[];\n    }\n    class IfcGasTerminalType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcGasTerminalTypeEnum> | IFC2x3.IfcGasTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcGasTerminalTypeEnum> | IFC2x3.IfcGasTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGasTerminalType;\n        ToTape(): any[];\n    }\n    class IfcGrid extends IFC2x3.IfcProduct {\n        UAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[];\n        VAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[];\n        WAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[] | null;\n        ContainedInStructure: (Handle<IFC2x3.IfcRelContainedInSpatialStructure> | IFC2x3.IfcRelContainedInSpatialStructure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, UAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[], VAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[], WAxes: (Handle<IFC2x3.IfcGridAxis> | IFC2x3.IfcGridAxis)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGrid;\n        ToTape(): any[];\n    }\n    class IfcGroup extends IFC2x3.IfcObject {\n        IsGroupedBy: (Handle<IFC2x3.IfcRelAssignsToGroup> | IFC2x3.IfcRelAssignsToGroup) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGroup;\n        ToTape(): any[];\n    }\n    class IfcHeatExchangerType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcHeatExchangerTypeEnum> | IFC2x3.IfcHeatExchangerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcHeatExchangerTypeEnum> | IFC2x3.IfcHeatExchangerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHeatExchangerType;\n        ToTape(): any[];\n    }\n    class IfcHumidifierType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcHumidifierTypeEnum> | IFC2x3.IfcHumidifierTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcHumidifierTypeEnum> | IFC2x3.IfcHumidifierTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHumidifierType;\n        ToTape(): any[];\n    }\n    class IfcInventory extends IFC2x3.IfcGroup {\n        InventoryType: (Handle<IFC2x3.IfcInventoryTypeEnum> | IFC2x3.IfcInventoryTypeEnum);\n        Jurisdiction: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect);\n        ResponsiblePersons: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson)[];\n        LastUpdateDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate);\n        CurrentValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue) | null;\n        OriginalValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, InventoryType: (Handle<IFC2x3.IfcInventoryTypeEnum> | IFC2x3.IfcInventoryTypeEnum), Jurisdiction: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect), ResponsiblePersons: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson)[], LastUpdateDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate), CurrentValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue) | null, OriginalValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcInventory;\n        ToTape(): any[];\n    }\n    class IfcJunctionBoxType extends IFC2x3.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC2x3.IfcJunctionBoxTypeEnum> | IFC2x3.IfcJunctionBoxTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcJunctionBoxTypeEnum> | IFC2x3.IfcJunctionBoxTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcJunctionBoxType;\n        ToTape(): any[];\n    }\n    class IfcLaborResource extends IFC2x3.IfcConstructionResource {\n        SkillSet: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null, BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null, SkillSet: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLaborResource;\n        ToTape(): any[];\n    }\n    class IfcLampType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcLampTypeEnum> | IFC2x3.IfcLampTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcLampTypeEnum> | IFC2x3.IfcLampTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLampType;\n        ToTape(): any[];\n    }\n    class IfcLightFixtureType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcLightFixtureTypeEnum> | IFC2x3.IfcLightFixtureTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcLightFixtureTypeEnum> | IFC2x3.IfcLightFixtureTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightFixtureType;\n        ToTape(): any[];\n    }\n    class IfcLinearDimension extends IFC2x3.IfcDimensionCurveDirectedCallout {\n        constructor(expressID: number, type: number, Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLinearDimension;\n        ToTape(): any[];\n    }\n    class IfcMechanicalFastener extends IFC2x3.IfcFastener {\n        NominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        NominalLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, NominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, NominalLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalFastener;\n        ToTape(): any[];\n    }\n    class IfcMechanicalFastenerType extends IFC2x3.IfcFastenerType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalFastenerType;\n        ToTape(): any[];\n    }\n    class IfcMemberType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcMemberTypeEnum> | IFC2x3.IfcMemberTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcMemberTypeEnum> | IFC2x3.IfcMemberTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMemberType;\n        ToTape(): any[];\n    }\n    class IfcMotorConnectionType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcMotorConnectionTypeEnum> | IFC2x3.IfcMotorConnectionTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcMotorConnectionTypeEnum> | IFC2x3.IfcMotorConnectionTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMotorConnectionType;\n        ToTape(): any[];\n    }\n    class IfcMove extends IFC2x3.IfcTask {\n        MoveFrom: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement);\n        MoveTo: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement);\n        PunchList: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TaskId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, WorkMethod: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, IsMilestone: boolean, Priority: number | null, MoveFrom: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement), MoveTo: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement), PunchList: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMove;\n        ToTape(): any[];\n    }\n    class IfcOccupant extends IFC2x3.IfcActor {\n        PredefinedType: (Handle<IFC2x3.IfcOccupantTypeEnum> | IFC2x3.IfcOccupantTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TheActor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect), PredefinedType: (Handle<IFC2x3.IfcOccupantTypeEnum> | IFC2x3.IfcOccupantTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOccupant;\n        ToTape(): any[];\n    }\n    class IfcOpeningElement extends IFC2x3.IfcFeatureElementSubtraction {\n        HasFillings: (Handle<IFC2x3.IfcRelFillsElement> | IFC2x3.IfcRelFillsElement)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOpeningElement;\n        ToTape(): any[];\n    }\n    class IfcOrderAction extends IFC2x3.IfcTask {\n        ActionID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TaskId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, WorkMethod: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, IsMilestone: boolean, Priority: number | null, ActionID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOrderAction;\n        ToTape(): any[];\n    }\n    class IfcOutletType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcOutletTypeEnum> | IFC2x3.IfcOutletTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcOutletTypeEnum> | IFC2x3.IfcOutletTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOutletType;\n        ToTape(): any[];\n    }\n    class IfcPerformanceHistory extends IFC2x3.IfcControl {\n        LifeCyclePhase: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, LifeCyclePhase: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPerformanceHistory;\n        ToTape(): any[];\n    }\n    class IfcPermit extends IFC2x3.IfcControl {\n        PermitID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PermitID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPermit;\n        ToTape(): any[];\n    }\n    class IfcPipeFittingType extends IFC2x3.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC2x3.IfcPipeFittingTypeEnum> | IFC2x3.IfcPipeFittingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcPipeFittingTypeEnum> | IFC2x3.IfcPipeFittingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPipeFittingType;\n        ToTape(): any[];\n    }\n    class IfcPipeSegmentType extends IFC2x3.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC2x3.IfcPipeSegmentTypeEnum> | IFC2x3.IfcPipeSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcPipeSegmentTypeEnum> | IFC2x3.IfcPipeSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPipeSegmentType;\n        ToTape(): any[];\n    }\n    class IfcPlateType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcPlateTypeEnum> | IFC2x3.IfcPlateTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcPlateTypeEnum> | IFC2x3.IfcPlateTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlateType;\n        ToTape(): any[];\n    }\n    class IfcPolyline extends IFC2x3.IfcBoundedCurve {\n        Points: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[];\n        constructor(expressID: number, type: number, Points: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPolyline;\n        ToTape(): any[];\n    }\n    class IfcPort extends IFC2x3.IfcProduct {\n        ContainedIn: (Handle<IFC2x3.IfcRelConnectsPortToElement> | IFC2x3.IfcRelConnectsPortToElement) | null;\n        ConnectedFrom: (Handle<IFC2x3.IfcRelConnectsPorts> | IFC2x3.IfcRelConnectsPorts)[] | null;\n        ConnectedTo: (Handle<IFC2x3.IfcRelConnectsPorts> | IFC2x3.IfcRelConnectsPorts)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPort;\n        ToTape(): any[];\n    }\n    class IfcProcedure extends IFC2x3.IfcProcess {\n        ProcedureID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        ProcedureType: (Handle<IFC2x3.IfcProcedureTypeEnum> | IFC2x3.IfcProcedureTypeEnum);\n        UserDefinedProcedureType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ProcedureID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), ProcedureType: (Handle<IFC2x3.IfcProcedureTypeEnum> | IFC2x3.IfcProcedureTypeEnum), UserDefinedProcedureType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProcedure;\n        ToTape(): any[];\n    }\n    class IfcProjectOrder extends IFC2x3.IfcControl {\n        ID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        PredefinedType: (Handle<IFC2x3.IfcProjectOrderTypeEnum> | IFC2x3.IfcProjectOrderTypeEnum);\n        Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), PredefinedType: (Handle<IFC2x3.IfcProjectOrderTypeEnum> | IFC2x3.IfcProjectOrderTypeEnum), Status: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectOrder;\n        ToTape(): any[];\n    }\n    class IfcProjectOrderRecord extends IFC2x3.IfcControl {\n        Records: (Handle<IFC2x3.IfcRelAssignsToProjectOrder> | IFC2x3.IfcRelAssignsToProjectOrder)[];\n        PredefinedType: (Handle<IFC2x3.IfcProjectOrderRecordTypeEnum> | IFC2x3.IfcProjectOrderRecordTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Records: (Handle<IFC2x3.IfcRelAssignsToProjectOrder> | IFC2x3.IfcRelAssignsToProjectOrder)[], PredefinedType: (Handle<IFC2x3.IfcProjectOrderRecordTypeEnum> | IFC2x3.IfcProjectOrderRecordTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectOrderRecord;\n        ToTape(): any[];\n    }\n    class IfcProjectionElement extends IFC2x3.IfcFeatureElementAddition {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectionElement;\n        ToTape(): any[];\n    }\n    class IfcProtectiveDeviceType extends IFC2x3.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC2x3.IfcProtectiveDeviceTypeEnum> | IFC2x3.IfcProtectiveDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcProtectiveDeviceTypeEnum> | IFC2x3.IfcProtectiveDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDeviceType;\n        ToTape(): any[];\n    }\n    class IfcPumpType extends IFC2x3.IfcFlowMovingDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcPumpTypeEnum> | IFC2x3.IfcPumpTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcPumpTypeEnum> | IFC2x3.IfcPumpTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPumpType;\n        ToTape(): any[];\n    }\n    class IfcRadiusDimension extends IFC2x3.IfcDimensionCurveDirectedCallout {\n        constructor(expressID: number, type: number, Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRadiusDimension;\n        ToTape(): any[];\n    }\n    class IfcRailingType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcRailingTypeEnum> | IFC2x3.IfcRailingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcRailingTypeEnum> | IFC2x3.IfcRailingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRailingType;\n        ToTape(): any[];\n    }\n    class IfcRampFlightType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcRampFlightTypeEnum> | IFC2x3.IfcRampFlightTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcRampFlightTypeEnum> | IFC2x3.IfcRampFlightTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRampFlightType;\n        ToTape(): any[];\n    }\n    class IfcRelAggregates extends IFC2x3.IfcRelDecomposes {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatingObject: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition), RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAggregates;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsTasks extends IFC2x3.IfcRelAssignsToControl {\n        TimeForTask: (Handle<IFC2x3.IfcScheduleTimeControl> | IFC2x3.IfcScheduleTimeControl) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, RelatedObjects: (Handle<IFC2x3.IfcObjectDefinition> | IFC2x3.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC2x3.IfcObjectTypeEnum> | IFC2x3.IfcObjectTypeEnum) | null, RelatingControl: (Handle<IFC2x3.IfcControl> | IFC2x3.IfcControl), TimeForTask: (Handle<IFC2x3.IfcScheduleTimeControl> | IFC2x3.IfcScheduleTimeControl) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsTasks;\n        ToTape(): any[];\n    }\n    class IfcSanitaryTerminalType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcSanitaryTerminalTypeEnum> | IFC2x3.IfcSanitaryTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcSanitaryTerminalTypeEnum> | IFC2x3.IfcSanitaryTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSanitaryTerminalType;\n        ToTape(): any[];\n    }\n    class IfcScheduleTimeControl extends IFC2x3.IfcControl {\n        ActualStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        EarlyStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        LateStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        ScheduleStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        ActualFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        EarlyFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        LateFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        ScheduleFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        ScheduleDuration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        ActualDuration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        RemainingTime: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        FreeFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        TotalFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        IsCritical: boolean | null;\n        StatusTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        StartFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        FinishFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        Completion: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null;\n        ScheduleTimeControlAssigned: (Handle<IFC2x3.IfcRelAssignsTasks> | IFC2x3.IfcRelAssignsTasks) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ActualStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, EarlyStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, LateStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, ScheduleStart: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, ActualFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, EarlyFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, LateFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, ScheduleFinish: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, ScheduleDuration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, ActualDuration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, RemainingTime: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, FreeFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, TotalFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, IsCritical: boolean | null, StatusTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, StartFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, FinishFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, Completion: (Handle<IFC2x3.IfcPositiveRatioMeasure> | IFC2x3.IfcPositiveRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcScheduleTimeControl;\n        ToTape(): any[];\n    }\n    class IfcServiceLife extends IFC2x3.IfcControl {\n        ServiceLifeType: (Handle<IFC2x3.IfcServiceLifeTypeEnum> | IFC2x3.IfcServiceLifeTypeEnum);\n        ServiceLifeDuration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ServiceLifeType: (Handle<IFC2x3.IfcServiceLifeTypeEnum> | IFC2x3.IfcServiceLifeTypeEnum), ServiceLifeDuration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcServiceLife;\n        ToTape(): any[];\n    }\n    class IfcSite extends IFC2x3.IfcSpatialStructureElement {\n        RefLatitude: (Handle<IFC2x3.IfcCompoundPlaneAngleMeasure> | IFC2x3.IfcCompoundPlaneAngleMeasure) | null;\n        RefLongitude: (Handle<IFC2x3.IfcCompoundPlaneAngleMeasure> | IFC2x3.IfcCompoundPlaneAngleMeasure) | null;\n        RefElevation: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        LandTitleNumber: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        SiteAddress: (Handle<IFC2x3.IfcPostalAddress> | IFC2x3.IfcPostalAddress) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum), RefLatitude: (Handle<IFC2x3.IfcCompoundPlaneAngleMeasure> | IFC2x3.IfcCompoundPlaneAngleMeasure) | null, RefLongitude: (Handle<IFC2x3.IfcCompoundPlaneAngleMeasure> | IFC2x3.IfcCompoundPlaneAngleMeasure) | null, RefElevation: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null, LandTitleNumber: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, SiteAddress: (Handle<IFC2x3.IfcPostalAddress> | IFC2x3.IfcPostalAddress) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSite;\n        ToTape(): any[];\n    }\n    class IfcSlabType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcSlabTypeEnum> | IFC2x3.IfcSlabTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcSlabTypeEnum> | IFC2x3.IfcSlabTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlabType;\n        ToTape(): any[];\n    }\n    class IfcSpace extends IFC2x3.IfcSpatialStructureElement {\n        InteriorOrExteriorSpace: (Handle<IFC2x3.IfcInternalOrExternalEnum> | IFC2x3.IfcInternalOrExternalEnum);\n        ElevationWithFlooring: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null;\n        HasCoverings: (Handle<IFC2x3.IfcRelCoversSpaces> | IFC2x3.IfcRelCoversSpaces)[] | null;\n        BoundedBy: (Handle<IFC2x3.IfcRelSpaceBoundary> | IFC2x3.IfcRelSpaceBoundary)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, LongName: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum), InteriorOrExteriorSpace: (Handle<IFC2x3.IfcInternalOrExternalEnum> | IFC2x3.IfcInternalOrExternalEnum), ElevationWithFlooring: (Handle<IFC2x3.IfcLengthMeasure> | IFC2x3.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpace;\n        ToTape(): any[];\n    }\n    class IfcSpaceHeaterType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcSpaceHeaterTypeEnum> | IFC2x3.IfcSpaceHeaterTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcSpaceHeaterTypeEnum> | IFC2x3.IfcSpaceHeaterTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceHeaterType;\n        ToTape(): any[];\n    }\n    class IfcSpaceProgram extends IFC2x3.IfcControl {\n        SpaceProgramIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        MaxRequiredArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null;\n        MinRequiredArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null;\n        RequestedLocation: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement) | null;\n        StandardRequiredArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure);\n        HasInteractionReqsFrom: (Handle<IFC2x3.IfcRelInteractionRequirements> | IFC2x3.IfcRelInteractionRequirements)[] | null;\n        HasInteractionReqsTo: (Handle<IFC2x3.IfcRelInteractionRequirements> | IFC2x3.IfcRelInteractionRequirements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, SpaceProgramIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), MaxRequiredArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, MinRequiredArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure) | null, RequestedLocation: (Handle<IFC2x3.IfcSpatialStructureElement> | IFC2x3.IfcSpatialStructureElement) | null, StandardRequiredArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceProgram;\n        ToTape(): any[];\n    }\n    class IfcSpaceType extends IFC2x3.IfcSpatialStructureElementType {\n        PredefinedType: (Handle<IFC2x3.IfcSpaceTypeEnum> | IFC2x3.IfcSpaceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcSpaceTypeEnum> | IFC2x3.IfcSpaceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceType;\n        ToTape(): any[];\n    }\n    class IfcStackTerminalType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcStackTerminalTypeEnum> | IFC2x3.IfcStackTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcStackTerminalTypeEnum> | IFC2x3.IfcStackTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStackTerminalType;\n        ToTape(): any[];\n    }\n    class IfcStairFlightType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcStairFlightTypeEnum> | IFC2x3.IfcStairFlightTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcStairFlightTypeEnum> | IFC2x3.IfcStairFlightTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStairFlightType;\n        ToTape(): any[];\n    }\n    class IfcStructuralAction extends IFC2x3.IfcStructuralActivity {\n        DestabilizingLoad: boolean;\n        CausedBy: (Handle<IFC2x3.IfcStructuralReaction> | IFC2x3.IfcStructuralReaction) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum), DestabilizingLoad: boolean, CausedBy: (Handle<IFC2x3.IfcStructuralReaction> | IFC2x3.IfcStructuralReaction) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralConnection extends IFC2x3.IfcStructuralItem {\n        AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null;\n        ConnectsStructuralMembers: (Handle<IFC2x3.IfcRelConnectsStructuralMember> | IFC2x3.IfcRelConnectsStructuralMember)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralConnection;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveConnection extends IFC2x3.IfcStructuralConnection {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveConnection;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveMember extends IFC2x3.IfcStructuralMember {\n        PredefinedType: (Handle<IFC2x3.IfcStructuralCurveTypeEnum> | IFC2x3.IfcStructuralCurveTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC2x3.IfcStructuralCurveTypeEnum> | IFC2x3.IfcStructuralCurveTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveMember;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveMemberVarying extends IFC2x3.IfcStructuralCurveMember {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC2x3.IfcStructuralCurveTypeEnum> | IFC2x3.IfcStructuralCurveTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveMemberVarying;\n        ToTape(): any[];\n    }\n    class IfcStructuralLinearAction extends IFC2x3.IfcStructuralAction {\n        ProjectedOrTrue: (Handle<IFC2x3.IfcProjectedOrTrueLengthEnum> | IFC2x3.IfcProjectedOrTrueLengthEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum), DestabilizingLoad: boolean, CausedBy: (Handle<IFC2x3.IfcStructuralReaction> | IFC2x3.IfcStructuralReaction) | null, ProjectedOrTrue: (Handle<IFC2x3.IfcProjectedOrTrueLengthEnum> | IFC2x3.IfcProjectedOrTrueLengthEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLinearAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralLinearActionVarying extends IFC2x3.IfcStructuralLinearAction {\n        VaryingAppliedLoadLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect);\n        SubsequentAppliedLoads: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum), DestabilizingLoad: boolean, CausedBy: (Handle<IFC2x3.IfcStructuralReaction> | IFC2x3.IfcStructuralReaction) | null, ProjectedOrTrue: (Handle<IFC2x3.IfcProjectedOrTrueLengthEnum> | IFC2x3.IfcProjectedOrTrueLengthEnum), VaryingAppliedLoadLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect), SubsequentAppliedLoads: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLinearActionVarying;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadGroup extends IFC2x3.IfcGroup {\n        PredefinedType: (Handle<IFC2x3.IfcLoadGroupTypeEnum> | IFC2x3.IfcLoadGroupTypeEnum);\n        ActionType: (Handle<IFC2x3.IfcActionTypeEnum> | IFC2x3.IfcActionTypeEnum);\n        ActionSource: (Handle<IFC2x3.IfcActionSourceTypeEnum> | IFC2x3.IfcActionSourceTypeEnum);\n        Coefficient: (Handle<IFC2x3.IfcRatioMeasure> | IFC2x3.IfcRatioMeasure) | null;\n        Purpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        SourceOfResultGroup: (Handle<IFC2x3.IfcStructuralResultGroup> | IFC2x3.IfcStructuralResultGroup)[] | null;\n        LoadGroupFor: (Handle<IFC2x3.IfcStructuralAnalysisModel> | IFC2x3.IfcStructuralAnalysisModel)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcLoadGroupTypeEnum> | IFC2x3.IfcLoadGroupTypeEnum), ActionType: (Handle<IFC2x3.IfcActionTypeEnum> | IFC2x3.IfcActionTypeEnum), ActionSource: (Handle<IFC2x3.IfcActionSourceTypeEnum> | IFC2x3.IfcActionSourceTypeEnum), Coefficient: (Handle<IFC2x3.IfcRatioMeasure> | IFC2x3.IfcRatioMeasure) | null, Purpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadGroup;\n        ToTape(): any[];\n    }\n    class IfcStructuralPlanarAction extends IFC2x3.IfcStructuralAction {\n        ProjectedOrTrue: (Handle<IFC2x3.IfcProjectedOrTrueLengthEnum> | IFC2x3.IfcProjectedOrTrueLengthEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum), DestabilizingLoad: boolean, CausedBy: (Handle<IFC2x3.IfcStructuralReaction> | IFC2x3.IfcStructuralReaction) | null, ProjectedOrTrue: (Handle<IFC2x3.IfcProjectedOrTrueLengthEnum> | IFC2x3.IfcProjectedOrTrueLengthEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPlanarAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralPlanarActionVarying extends IFC2x3.IfcStructuralPlanarAction {\n        VaryingAppliedLoadLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect);\n        SubsequentAppliedLoads: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum), DestabilizingLoad: boolean, CausedBy: (Handle<IFC2x3.IfcStructuralReaction> | IFC2x3.IfcStructuralReaction) | null, ProjectedOrTrue: (Handle<IFC2x3.IfcProjectedOrTrueLengthEnum> | IFC2x3.IfcProjectedOrTrueLengthEnum), VaryingAppliedLoadLocation: (Handle<IFC2x3.IfcShapeAspect> | IFC2x3.IfcShapeAspect), SubsequentAppliedLoads: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPlanarActionVarying;\n        ToTape(): any[];\n    }\n    class IfcStructuralPointAction extends IFC2x3.IfcStructuralAction {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum), DestabilizingLoad: boolean, CausedBy: (Handle<IFC2x3.IfcStructuralReaction> | IFC2x3.IfcStructuralReaction) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralPointConnection extends IFC2x3.IfcStructuralConnection {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointConnection;\n        ToTape(): any[];\n    }\n    class IfcStructuralPointReaction extends IFC2x3.IfcStructuralReaction {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC2x3.IfcStructuralLoad> | IFC2x3.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC2x3.IfcGlobalOrLocalEnum> | IFC2x3.IfcGlobalOrLocalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointReaction;\n        ToTape(): any[];\n    }\n    class IfcStructuralResultGroup extends IFC2x3.IfcGroup {\n        TheoryType: (Handle<IFC2x3.IfcAnalysisTheoryTypeEnum> | IFC2x3.IfcAnalysisTheoryTypeEnum);\n        ResultForLoadGroup: (Handle<IFC2x3.IfcStructuralLoadGroup> | IFC2x3.IfcStructuralLoadGroup) | null;\n        IsLinear: boolean;\n        ResultGroupFor: (Handle<IFC2x3.IfcStructuralAnalysisModel> | IFC2x3.IfcStructuralAnalysisModel)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, TheoryType: (Handle<IFC2x3.IfcAnalysisTheoryTypeEnum> | IFC2x3.IfcAnalysisTheoryTypeEnum), ResultForLoadGroup: (Handle<IFC2x3.IfcStructuralLoadGroup> | IFC2x3.IfcStructuralLoadGroup) | null, IsLinear: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralResultGroup;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceConnection extends IFC2x3.IfcStructuralConnection {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC2x3.IfcBoundaryCondition> | IFC2x3.IfcBoundaryCondition) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceConnection;\n        ToTape(): any[];\n    }\n    class IfcSubContractResource extends IFC2x3.IfcConstructionResource {\n        SubContractor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null;\n        JobDescription: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null, BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null, SubContractor: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect) | null, JobDescription: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSubContractResource;\n        ToTape(): any[];\n    }\n    class IfcSwitchingDeviceType extends IFC2x3.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC2x3.IfcSwitchingDeviceTypeEnum> | IFC2x3.IfcSwitchingDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcSwitchingDeviceTypeEnum> | IFC2x3.IfcSwitchingDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSwitchingDeviceType;\n        ToTape(): any[];\n    }\n    class IfcSystem extends IFC2x3.IfcGroup {\n        ServicesBuildings: (Handle<IFC2x3.IfcRelServicesBuildings> | IFC2x3.IfcRelServicesBuildings)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSystem;\n        ToTape(): any[];\n    }\n    class IfcTankType extends IFC2x3.IfcFlowStorageDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcTankTypeEnum> | IFC2x3.IfcTankTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcTankTypeEnum> | IFC2x3.IfcTankTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTankType;\n        ToTape(): any[];\n    }\n    class IfcTimeSeriesSchedule extends IFC2x3.IfcControl {\n        ApplicableDates: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect)[] | null;\n        TimeSeriesScheduleType: (Handle<IFC2x3.IfcTimeSeriesScheduleTypeEnum> | IFC2x3.IfcTimeSeriesScheduleTypeEnum);\n        TimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ApplicableDates: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect)[] | null, TimeSeriesScheduleType: (Handle<IFC2x3.IfcTimeSeriesScheduleTypeEnum> | IFC2x3.IfcTimeSeriesScheduleTypeEnum), TimeSeries: (Handle<IFC2x3.IfcTimeSeries> | IFC2x3.IfcTimeSeries));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeriesSchedule;\n        ToTape(): any[];\n    }\n    class IfcTransformerType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcTransformerTypeEnum> | IFC2x3.IfcTransformerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcTransformerTypeEnum> | IFC2x3.IfcTransformerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTransformerType;\n        ToTape(): any[];\n    }\n    class IfcTransportElement extends IFC2x3.IfcElement {\n        OperationType: (Handle<IFC2x3.IfcTransportElementTypeEnum> | IFC2x3.IfcTransportElementTypeEnum) | null;\n        CapacityByWeight: (Handle<IFC2x3.IfcMassMeasure> | IFC2x3.IfcMassMeasure) | null;\n        CapacityByNumber: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, OperationType: (Handle<IFC2x3.IfcTransportElementTypeEnum> | IFC2x3.IfcTransportElementTypeEnum) | null, CapacityByWeight: (Handle<IFC2x3.IfcMassMeasure> | IFC2x3.IfcMassMeasure) | null, CapacityByNumber: (Handle<IFC2x3.IfcCountMeasure> | IFC2x3.IfcCountMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTransportElement;\n        ToTape(): any[];\n    }\n    class IfcTrimmedCurve extends IFC2x3.IfcBoundedCurve {\n        BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve);\n        Trim1: (Handle<IFC2x3.IfcTrimmingSelect> | IFC2x3.IfcTrimmingSelect)[];\n        Trim2: (Handle<IFC2x3.IfcTrimmingSelect> | IFC2x3.IfcTrimmingSelect)[];\n        SenseAgreement: boolean;\n        MasterRepresentation: (Handle<IFC2x3.IfcTrimmingPreference> | IFC2x3.IfcTrimmingPreference);\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC2x3.IfcCurve> | IFC2x3.IfcCurve), Trim1: (Handle<IFC2x3.IfcTrimmingSelect> | IFC2x3.IfcTrimmingSelect)[], Trim2: (Handle<IFC2x3.IfcTrimmingSelect> | IFC2x3.IfcTrimmingSelect)[], SenseAgreement: boolean, MasterRepresentation: (Handle<IFC2x3.IfcTrimmingPreference> | IFC2x3.IfcTrimmingPreference));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTrimmedCurve;\n        ToTape(): any[];\n    }\n    class IfcTubeBundleType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcTubeBundleTypeEnum> | IFC2x3.IfcTubeBundleTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcTubeBundleTypeEnum> | IFC2x3.IfcTubeBundleTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTubeBundleType;\n        ToTape(): any[];\n    }\n    class IfcUnitaryEquipmentType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcUnitaryEquipmentTypeEnum> | IFC2x3.IfcUnitaryEquipmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcUnitaryEquipmentTypeEnum> | IFC2x3.IfcUnitaryEquipmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryEquipmentType;\n        ToTape(): any[];\n    }\n    class IfcValveType extends IFC2x3.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC2x3.IfcValveTypeEnum> | IFC2x3.IfcValveTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcValveTypeEnum> | IFC2x3.IfcValveTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcValveType;\n        ToTape(): any[];\n    }\n    class IfcVirtualElement extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVirtualElement;\n        ToTape(): any[];\n    }\n    class IfcWallType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcWallTypeEnum> | IFC2x3.IfcWallTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcWallTypeEnum> | IFC2x3.IfcWallTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWallType;\n        ToTape(): any[];\n    }\n    class IfcWasteTerminalType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcWasteTerminalTypeEnum> | IFC2x3.IfcWasteTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcWasteTerminalTypeEnum> | IFC2x3.IfcWasteTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWasteTerminalType;\n        ToTape(): any[];\n    }\n    class IfcWorkControl extends IFC2x3.IfcControl {\n        Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        CreationDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect);\n        Creators: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson)[] | null;\n        Purpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        Duration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        TotalFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null;\n        StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect);\n        FinishTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null;\n        WorkControlType: (Handle<IFC2x3.IfcWorkControlTypeEnum> | IFC2x3.IfcWorkControlTypeEnum) | null;\n        UserDefinedControlType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), CreationDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), Creators: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson)[] | null, Purpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Duration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, TotalFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), FinishTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, WorkControlType: (Handle<IFC2x3.IfcWorkControlTypeEnum> | IFC2x3.IfcWorkControlTypeEnum) | null, UserDefinedControlType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkControl;\n        ToTape(): any[];\n    }\n    class IfcWorkPlan extends IFC2x3.IfcWorkControl {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), CreationDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), Creators: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson)[] | null, Purpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Duration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, TotalFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), FinishTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, WorkControlType: (Handle<IFC2x3.IfcWorkControlTypeEnum> | IFC2x3.IfcWorkControlTypeEnum) | null, UserDefinedControlType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkPlan;\n        ToTape(): any[];\n    }\n    class IfcWorkSchedule extends IFC2x3.IfcWorkControl {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Identifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), CreationDate: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), Creators: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson)[] | null, Purpose: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Duration: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, TotalFloat: (Handle<IFC2x3.IfcTimeMeasure> | IFC2x3.IfcTimeMeasure) | null, StartTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect), FinishTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect) | null, WorkControlType: (Handle<IFC2x3.IfcWorkControlTypeEnum> | IFC2x3.IfcWorkControlTypeEnum) | null, UserDefinedControlType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkSchedule;\n        ToTape(): any[];\n    }\n    class IfcZone extends IFC2x3.IfcGroup {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcZone;\n        ToTape(): any[];\n    }\n    class Ifc2DCompositeCurve extends IFC2x3.IfcCompositeCurve {\n        constructor(expressID: number, type: number, Segments: (Handle<IFC2x3.IfcCompositeCurveSegment> | IFC2x3.IfcCompositeCurveSegment)[], SelfIntersect: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): Ifc2DCompositeCurve;\n        ToTape(): any[];\n    }\n    class IfcActionRequest extends IFC2x3.IfcControl {\n        RequestID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, RequestID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActionRequest;\n        ToTape(): any[];\n    }\n    class IfcAirTerminalBoxType extends IFC2x3.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC2x3.IfcAirTerminalBoxTypeEnum> | IFC2x3.IfcAirTerminalBoxTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcAirTerminalBoxTypeEnum> | IFC2x3.IfcAirTerminalBoxTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalBoxType;\n        ToTape(): any[];\n    }\n    class IfcAirTerminalType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcAirTerminalTypeEnum> | IFC2x3.IfcAirTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcAirTerminalTypeEnum> | IFC2x3.IfcAirTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalType;\n        ToTape(): any[];\n    }\n    class IfcAirToAirHeatRecoveryType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcAirToAirHeatRecoveryTypeEnum> | IFC2x3.IfcAirToAirHeatRecoveryTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcAirToAirHeatRecoveryTypeEnum> | IFC2x3.IfcAirToAirHeatRecoveryTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirToAirHeatRecoveryType;\n        ToTape(): any[];\n    }\n    class IfcAngularDimension extends IFC2x3.IfcDimensionCurveDirectedCallout {\n        constructor(expressID: number, type: number, Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAngularDimension;\n        ToTape(): any[];\n    }\n    class IfcAsset extends IFC2x3.IfcGroup {\n        AssetID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier);\n        OriginalValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue);\n        CurrentValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue);\n        TotalReplacementCost: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue);\n        Owner: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect);\n        User: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect);\n        ResponsiblePerson: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson);\n        IncorporationDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate);\n        DepreciatedValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, AssetID: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier), OriginalValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue), CurrentValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue), TotalReplacementCost: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue), Owner: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect), User: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect), ResponsiblePerson: (Handle<IFC2x3.IfcPerson> | IFC2x3.IfcPerson), IncorporationDate: (Handle<IFC2x3.IfcCalendarDate> | IFC2x3.IfcCalendarDate), DepreciatedValue: (Handle<IFC2x3.IfcCostValue> | IFC2x3.IfcCostValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAsset;\n        ToTape(): any[];\n    }\n    class IfcBSplineCurve extends IFC2x3.IfcBoundedCurve {\n        Degree: number;\n        ControlPointsList: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[];\n        CurveForm: (Handle<IFC2x3.IfcBSplineCurveForm> | IFC2x3.IfcBSplineCurveForm);\n        ClosedCurve: boolean;\n        SelfIntersect: boolean;\n        constructor(expressID: number, type: number, Degree: number, ControlPointsList: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[], CurveForm: (Handle<IFC2x3.IfcBSplineCurveForm> | IFC2x3.IfcBSplineCurveForm), ClosedCurve: boolean, SelfIntersect: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineCurve;\n        ToTape(): any[];\n    }\n    class IfcBeamType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcBeamTypeEnum> | IFC2x3.IfcBeamTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcBeamTypeEnum> | IFC2x3.IfcBeamTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBeamType;\n        ToTape(): any[];\n    }\n    class IfcBezierCurve extends IFC2x3.IfcBSplineCurve {\n        constructor(expressID: number, type: number, Degree: number, ControlPointsList: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[], CurveForm: (Handle<IFC2x3.IfcBSplineCurveForm> | IFC2x3.IfcBSplineCurveForm), ClosedCurve: boolean, SelfIntersect: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBezierCurve;\n        ToTape(): any[];\n    }\n    class IfcBoilerType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcBoilerTypeEnum> | IFC2x3.IfcBoilerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcBoilerTypeEnum> | IFC2x3.IfcBoilerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoilerType;\n        ToTape(): any[];\n    }\n    class IfcBuildingElement extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElement;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementComponent extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementComponent;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementPart extends IFC2x3.IfcBuildingElementComponent {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementPart;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementProxy extends IFC2x3.IfcBuildingElement {\n        CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, CompositionType: (Handle<IFC2x3.IfcElementCompositionEnum> | IFC2x3.IfcElementCompositionEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementProxy;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementProxyType extends IFC2x3.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC2x3.IfcBuildingElementProxyTypeEnum> | IFC2x3.IfcBuildingElementProxyTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcBuildingElementProxyTypeEnum> | IFC2x3.IfcBuildingElementProxyTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementProxyType;\n        ToTape(): any[];\n    }\n    class IfcCableCarrierFittingType extends IFC2x3.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC2x3.IfcCableCarrierFittingTypeEnum> | IFC2x3.IfcCableCarrierFittingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCableCarrierFittingTypeEnum> | IFC2x3.IfcCableCarrierFittingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierFittingType;\n        ToTape(): any[];\n    }\n    class IfcCableCarrierSegmentType extends IFC2x3.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC2x3.IfcCableCarrierSegmentTypeEnum> | IFC2x3.IfcCableCarrierSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCableCarrierSegmentTypeEnum> | IFC2x3.IfcCableCarrierSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierSegmentType;\n        ToTape(): any[];\n    }\n    class IfcCableSegmentType extends IFC2x3.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC2x3.IfcCableSegmentTypeEnum> | IFC2x3.IfcCableSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCableSegmentTypeEnum> | IFC2x3.IfcCableSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableSegmentType;\n        ToTape(): any[];\n    }\n    class IfcChillerType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcChillerTypeEnum> | IFC2x3.IfcChillerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcChillerTypeEnum> | IFC2x3.IfcChillerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcChillerType;\n        ToTape(): any[];\n    }\n    class IfcCircle extends IFC2x3.IfcConic {\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC2x3.IfcAxis2Placement> | IFC2x3.IfcAxis2Placement), Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCircle;\n        ToTape(): any[];\n    }\n    class IfcCoilType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcCoilTypeEnum> | IFC2x3.IfcCoilTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCoilTypeEnum> | IFC2x3.IfcCoilTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoilType;\n        ToTape(): any[];\n    }\n    class IfcColumn extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColumn;\n        ToTape(): any[];\n    }\n    class IfcCompressorType extends IFC2x3.IfcFlowMovingDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcCompressorTypeEnum> | IFC2x3.IfcCompressorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCompressorTypeEnum> | IFC2x3.IfcCompressorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompressorType;\n        ToTape(): any[];\n    }\n    class IfcCondenserType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcCondenserTypeEnum> | IFC2x3.IfcCondenserTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCondenserTypeEnum> | IFC2x3.IfcCondenserTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCondenserType;\n        ToTape(): any[];\n    }\n    class IfcCondition extends IFC2x3.IfcGroup {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCondition;\n        ToTape(): any[];\n    }\n    class IfcConditionCriterion extends IFC2x3.IfcControl {\n        Criterion: (Handle<IFC2x3.IfcConditionCriterionSelect> | IFC2x3.IfcConditionCriterionSelect);\n        CriterionDateTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Criterion: (Handle<IFC2x3.IfcConditionCriterionSelect> | IFC2x3.IfcConditionCriterionSelect), CriterionDateTime: (Handle<IFC2x3.IfcDateTimeSelect> | IFC2x3.IfcDateTimeSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConditionCriterion;\n        ToTape(): any[];\n    }\n    class IfcConstructionEquipmentResource extends IFC2x3.IfcConstructionResource {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null, BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionEquipmentResource;\n        ToTape(): any[];\n    }\n    class IfcConstructionMaterialResource extends IFC2x3.IfcConstructionResource {\n        Suppliers: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect)[] | null;\n        UsageRatio: (Handle<IFC2x3.IfcRatioMeasure> | IFC2x3.IfcRatioMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null, BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null, Suppliers: (Handle<IFC2x3.IfcActorSelect> | IFC2x3.IfcActorSelect)[] | null, UsageRatio: (Handle<IFC2x3.IfcRatioMeasure> | IFC2x3.IfcRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionMaterialResource;\n        ToTape(): any[];\n    }\n    class IfcConstructionProductResource extends IFC2x3.IfcConstructionResource {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceIdentifier: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ResourceGroup: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ResourceConsumption: (Handle<IFC2x3.IfcResourceConsumptionEnum> | IFC2x3.IfcResourceConsumptionEnum) | null, BaseQuantity: (Handle<IFC2x3.IfcMeasureWithUnit> | IFC2x3.IfcMeasureWithUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionProductResource;\n        ToTape(): any[];\n    }\n    class IfcCooledBeamType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcCooledBeamTypeEnum> | IFC2x3.IfcCooledBeamTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCooledBeamTypeEnum> | IFC2x3.IfcCooledBeamTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCooledBeamType;\n        ToTape(): any[];\n    }\n    class IfcCoolingTowerType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcCoolingTowerTypeEnum> | IFC2x3.IfcCoolingTowerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcCoolingTowerTypeEnum> | IFC2x3.IfcCoolingTowerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoolingTowerType;\n        ToTape(): any[];\n    }\n    class IfcCovering extends IFC2x3.IfcBuildingElement {\n        PredefinedType: (Handle<IFC2x3.IfcCoveringTypeEnum> | IFC2x3.IfcCoveringTypeEnum) | null;\n        CoversSpaces: (Handle<IFC2x3.IfcRelCoversSpaces> | IFC2x3.IfcRelCoversSpaces)[] | null;\n        Covers: (Handle<IFC2x3.IfcRelCoversBldgElements> | IFC2x3.IfcRelCoversBldgElements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, PredefinedType: (Handle<IFC2x3.IfcCoveringTypeEnum> | IFC2x3.IfcCoveringTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCovering;\n        ToTape(): any[];\n    }\n    class IfcCurtainWall extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurtainWall;\n        ToTape(): any[];\n    }\n    class IfcDamperType extends IFC2x3.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC2x3.IfcDamperTypeEnum> | IFC2x3.IfcDamperTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcDamperTypeEnum> | IFC2x3.IfcDamperTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDamperType;\n        ToTape(): any[];\n    }\n    class IfcDiameterDimension extends IFC2x3.IfcDimensionCurveDirectedCallout {\n        constructor(expressID: number, type: number, Contents: (Handle<IFC2x3.IfcDraughtingCalloutElement> | IFC2x3.IfcDraughtingCalloutElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDiameterDimension;\n        ToTape(): any[];\n    }\n    class IfcDiscreteAccessory extends IFC2x3.IfcElementComponent {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDiscreteAccessory;\n        ToTape(): any[];\n    }\n    class IfcDiscreteAccessoryType extends IFC2x3.IfcElementComponentType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDiscreteAccessoryType;\n        ToTape(): any[];\n    }\n    class IfcDistributionChamberElementType extends IFC2x3.IfcDistributionFlowElementType {\n        PredefinedType: (Handle<IFC2x3.IfcDistributionChamberElementTypeEnum> | IFC2x3.IfcDistributionChamberElementTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcDistributionChamberElementTypeEnum> | IFC2x3.IfcDistributionChamberElementTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionChamberElementType;\n        ToTape(): any[];\n    }\n    class IfcDistributionControlElementType extends IFC2x3.IfcDistributionElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionControlElementType;\n        ToTape(): any[];\n    }\n    class IfcDistributionElement extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionElement;\n        ToTape(): any[];\n    }\n    class IfcDistributionFlowElement extends IFC2x3.IfcDistributionElement {\n        HasControlElements: (Handle<IFC2x3.IfcRelFlowControlElements> | IFC2x3.IfcRelFlowControlElements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionFlowElement;\n        ToTape(): any[];\n    }\n    class IfcDistributionPort extends IFC2x3.IfcPort {\n        FlowDirection: (Handle<IFC2x3.IfcFlowDirectionEnum> | IFC2x3.IfcFlowDirectionEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, FlowDirection: (Handle<IFC2x3.IfcFlowDirectionEnum> | IFC2x3.IfcFlowDirectionEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionPort;\n        ToTape(): any[];\n    }\n    class IfcDoor extends IFC2x3.IfcBuildingElement {\n        OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        OverallWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, OverallWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoor;\n        ToTape(): any[];\n    }\n    class IfcDuctFittingType extends IFC2x3.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC2x3.IfcDuctFittingTypeEnum> | IFC2x3.IfcDuctFittingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcDuctFittingTypeEnum> | IFC2x3.IfcDuctFittingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctFittingType;\n        ToTape(): any[];\n    }\n    class IfcDuctSegmentType extends IFC2x3.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC2x3.IfcDuctSegmentTypeEnum> | IFC2x3.IfcDuctSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcDuctSegmentTypeEnum> | IFC2x3.IfcDuctSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSegmentType;\n        ToTape(): any[];\n    }\n    class IfcDuctSilencerType extends IFC2x3.IfcFlowTreatmentDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcDuctSilencerTypeEnum> | IFC2x3.IfcDuctSilencerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcDuctSilencerTypeEnum> | IFC2x3.IfcDuctSilencerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSilencerType;\n        ToTape(): any[];\n    }\n    class IfcEdgeFeature extends IFC2x3.IfcFeatureElementSubtraction {\n        FeatureLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, FeatureLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEdgeFeature;\n        ToTape(): any[];\n    }\n    class IfcElectricApplianceType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcElectricApplianceTypeEnum> | IFC2x3.IfcElectricApplianceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcElectricApplianceTypeEnum> | IFC2x3.IfcElectricApplianceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricApplianceType;\n        ToTape(): any[];\n    }\n    class IfcElectricFlowStorageDeviceType extends IFC2x3.IfcFlowStorageDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcElectricFlowStorageDeviceTypeEnum> | IFC2x3.IfcElectricFlowStorageDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcElectricFlowStorageDeviceTypeEnum> | IFC2x3.IfcElectricFlowStorageDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricFlowStorageDeviceType;\n        ToTape(): any[];\n    }\n    class IfcElectricGeneratorType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcElectricGeneratorTypeEnum> | IFC2x3.IfcElectricGeneratorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcElectricGeneratorTypeEnum> | IFC2x3.IfcElectricGeneratorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricGeneratorType;\n        ToTape(): any[];\n    }\n    class IfcElectricHeaterType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcElectricHeaterTypeEnum> | IFC2x3.IfcElectricHeaterTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcElectricHeaterTypeEnum> | IFC2x3.IfcElectricHeaterTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricHeaterType;\n        ToTape(): any[];\n    }\n    class IfcElectricMotorType extends IFC2x3.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcElectricMotorTypeEnum> | IFC2x3.IfcElectricMotorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcElectricMotorTypeEnum> | IFC2x3.IfcElectricMotorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricMotorType;\n        ToTape(): any[];\n    }\n    class IfcElectricTimeControlType extends IFC2x3.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC2x3.IfcElectricTimeControlTypeEnum> | IFC2x3.IfcElectricTimeControlTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcElectricTimeControlTypeEnum> | IFC2x3.IfcElectricTimeControlTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricTimeControlType;\n        ToTape(): any[];\n    }\n    class IfcElectricalCircuit extends IFC2x3.IfcSystem {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricalCircuit;\n        ToTape(): any[];\n    }\n    class IfcElectricalElement extends IFC2x3.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricalElement;\n        ToTape(): any[];\n    }\n    class IfcEnergyConversionDevice extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEnergyConversionDevice;\n        ToTape(): any[];\n    }\n    class IfcFanType extends IFC2x3.IfcFlowMovingDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcFanTypeEnum> | IFC2x3.IfcFanTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcFanTypeEnum> | IFC2x3.IfcFanTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFanType;\n        ToTape(): any[];\n    }\n    class IfcFilterType extends IFC2x3.IfcFlowTreatmentDeviceType {\n        PredefinedType: (Handle<IFC2x3.IfcFilterTypeEnum> | IFC2x3.IfcFilterTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcFilterTypeEnum> | IFC2x3.IfcFilterTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFilterType;\n        ToTape(): any[];\n    }\n    class IfcFireSuppressionTerminalType extends IFC2x3.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC2x3.IfcFireSuppressionTerminalTypeEnum> | IFC2x3.IfcFireSuppressionTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcFireSuppressionTerminalTypeEnum> | IFC2x3.IfcFireSuppressionTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFireSuppressionTerminalType;\n        ToTape(): any[];\n    }\n    class IfcFlowController extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowController;\n        ToTape(): any[];\n    }\n    class IfcFlowFitting extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowFitting;\n        ToTape(): any[];\n    }\n    class IfcFlowInstrumentType extends IFC2x3.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC2x3.IfcFlowInstrumentTypeEnum> | IFC2x3.IfcFlowInstrumentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcFlowInstrumentTypeEnum> | IFC2x3.IfcFlowInstrumentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowInstrumentType;\n        ToTape(): any[];\n    }\n    class IfcFlowMovingDevice extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMovingDevice;\n        ToTape(): any[];\n    }\n    class IfcFlowSegment extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowSegment;\n        ToTape(): any[];\n    }\n    class IfcFlowStorageDevice extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowStorageDevice;\n        ToTape(): any[];\n    }\n    class IfcFlowTerminal extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTerminal;\n        ToTape(): any[];\n    }\n    class IfcFlowTreatmentDevice extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTreatmentDevice;\n        ToTape(): any[];\n    }\n    class IfcFooting extends IFC2x3.IfcBuildingElement {\n        PredefinedType: (Handle<IFC2x3.IfcFootingTypeEnum> | IFC2x3.IfcFootingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, PredefinedType: (Handle<IFC2x3.IfcFootingTypeEnum> | IFC2x3.IfcFootingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFooting;\n        ToTape(): any[];\n    }\n    class IfcMember extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMember;\n        ToTape(): any[];\n    }\n    class IfcPile extends IFC2x3.IfcBuildingElement {\n        PredefinedType: (Handle<IFC2x3.IfcPileTypeEnum> | IFC2x3.IfcPileTypeEnum);\n        ConstructionType: (Handle<IFC2x3.IfcPileConstructionEnum> | IFC2x3.IfcPileConstructionEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, PredefinedType: (Handle<IFC2x3.IfcPileTypeEnum> | IFC2x3.IfcPileTypeEnum), ConstructionType: (Handle<IFC2x3.IfcPileConstructionEnum> | IFC2x3.IfcPileConstructionEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPile;\n        ToTape(): any[];\n    }\n    class IfcPlate extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlate;\n        ToTape(): any[];\n    }\n    class IfcRailing extends IFC2x3.IfcBuildingElement {\n        PredefinedType: (Handle<IFC2x3.IfcRailingTypeEnum> | IFC2x3.IfcRailingTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, PredefinedType: (Handle<IFC2x3.IfcRailingTypeEnum> | IFC2x3.IfcRailingTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRailing;\n        ToTape(): any[];\n    }\n    class IfcRamp extends IFC2x3.IfcBuildingElement {\n        ShapeType: (Handle<IFC2x3.IfcRampTypeEnum> | IFC2x3.IfcRampTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ShapeType: (Handle<IFC2x3.IfcRampTypeEnum> | IFC2x3.IfcRampTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRamp;\n        ToTape(): any[];\n    }\n    class IfcRampFlight extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRampFlight;\n        ToTape(): any[];\n    }\n    class IfcRationalBezierCurve extends IFC2x3.IfcBezierCurve {\n        WeightsData: number[];\n        constructor(expressID: number, type: number, Degree: number, ControlPointsList: (Handle<IFC2x3.IfcCartesianPoint> | IFC2x3.IfcCartesianPoint)[], CurveForm: (Handle<IFC2x3.IfcBSplineCurveForm> | IFC2x3.IfcBSplineCurveForm), ClosedCurve: boolean, SelfIntersect: boolean, WeightsData: number[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRationalBezierCurve;\n        ToTape(): any[];\n    }\n    class IfcReinforcingElement extends IFC2x3.IfcBuildingElementComponent {\n        SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingElement;\n        ToTape(): any[];\n    }\n    class IfcReinforcingMesh extends IFC2x3.IfcReinforcingElement {\n        MeshLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        MeshWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        LongitudinalBarNominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        TransverseBarNominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        LongitudinalBarCrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure);\n        TransverseBarCrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure);\n        LongitudinalBarSpacing: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        TransverseBarSpacing: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, MeshLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MeshWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, LongitudinalBarNominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), TransverseBarNominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), LongitudinalBarCrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure), TransverseBarCrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure), LongitudinalBarSpacing: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), TransverseBarSpacing: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingMesh;\n        ToTape(): any[];\n    }\n    class IfcRoof extends IFC2x3.IfcBuildingElement {\n        ShapeType: (Handle<IFC2x3.IfcRoofTypeEnum> | IFC2x3.IfcRoofTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ShapeType: (Handle<IFC2x3.IfcRoofTypeEnum> | IFC2x3.IfcRoofTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoof;\n        ToTape(): any[];\n    }\n    class IfcRoundedEdgeFeature extends IFC2x3.IfcEdgeFeature {\n        Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, FeatureLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, Radius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoundedEdgeFeature;\n        ToTape(): any[];\n    }\n    class IfcSensorType extends IFC2x3.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC2x3.IfcSensorTypeEnum> | IFC2x3.IfcSensorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcSensorTypeEnum> | IFC2x3.IfcSensorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSensorType;\n        ToTape(): any[];\n    }\n    class IfcSlab extends IFC2x3.IfcBuildingElement {\n        PredefinedType: (Handle<IFC2x3.IfcSlabTypeEnum> | IFC2x3.IfcSlabTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, PredefinedType: (Handle<IFC2x3.IfcSlabTypeEnum> | IFC2x3.IfcSlabTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlab;\n        ToTape(): any[];\n    }\n    class IfcStair extends IFC2x3.IfcBuildingElement {\n        ShapeType: (Handle<IFC2x3.IfcStairTypeEnum> | IFC2x3.IfcStairTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ShapeType: (Handle<IFC2x3.IfcStairTypeEnum> | IFC2x3.IfcStairTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStair;\n        ToTape(): any[];\n    }\n    class IfcStairFlight extends IFC2x3.IfcBuildingElement {\n        NumberOfRiser: number | null;\n        NumberOfTreads: number | null;\n        RiserHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        TreadLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, NumberOfRiser: number | null, NumberOfTreads: number | null, RiserHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, TreadLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStairFlight;\n        ToTape(): any[];\n    }\n    class IfcStructuralAnalysisModel extends IFC2x3.IfcSystem {\n        PredefinedType: (Handle<IFC2x3.IfcAnalysisModelTypeEnum> | IFC2x3.IfcAnalysisModelTypeEnum);\n        OrientationOf2DPlane: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D) | null;\n        LoadedBy: (Handle<IFC2x3.IfcStructuralLoadGroup> | IFC2x3.IfcStructuralLoadGroup)[] | null;\n        HasResults: (Handle<IFC2x3.IfcStructuralResultGroup> | IFC2x3.IfcStructuralResultGroup)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcAnalysisModelTypeEnum> | IFC2x3.IfcAnalysisModelTypeEnum), OrientationOf2DPlane: (Handle<IFC2x3.IfcAxis2Placement3D> | IFC2x3.IfcAxis2Placement3D) | null, LoadedBy: (Handle<IFC2x3.IfcStructuralLoadGroup> | IFC2x3.IfcStructuralLoadGroup)[] | null, HasResults: (Handle<IFC2x3.IfcStructuralResultGroup> | IFC2x3.IfcStructuralResultGroup)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralAnalysisModel;\n        ToTape(): any[];\n    }\n    class IfcTendon extends IFC2x3.IfcReinforcingElement {\n        PredefinedType: (Handle<IFC2x3.IfcTendonTypeEnum> | IFC2x3.IfcTendonTypeEnum);\n        NominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure);\n        TensionForce: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null;\n        PreStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null;\n        FrictionCoefficient: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null;\n        AnchorageSlip: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        MinCurvatureRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcTendonTypeEnum> | IFC2x3.IfcTendonTypeEnum), NominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure), TensionForce: (Handle<IFC2x3.IfcForceMeasure> | IFC2x3.IfcForceMeasure) | null, PreStress: (Handle<IFC2x3.IfcPressureMeasure> | IFC2x3.IfcPressureMeasure) | null, FrictionCoefficient: (Handle<IFC2x3.IfcNormalisedRatioMeasure> | IFC2x3.IfcNormalisedRatioMeasure) | null, AnchorageSlip: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, MinCurvatureRadius: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTendon;\n        ToTape(): any[];\n    }\n    class IfcTendonAnchor extends IFC2x3.IfcReinforcingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTendonAnchor;\n        ToTape(): any[];\n    }\n    class IfcVibrationIsolatorType extends IFC2x3.IfcDiscreteAccessoryType {\n        PredefinedType: (Handle<IFC2x3.IfcVibrationIsolatorTypeEnum> | IFC2x3.IfcVibrationIsolatorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcVibrationIsolatorTypeEnum> | IFC2x3.IfcVibrationIsolatorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVibrationIsolatorType;\n        ToTape(): any[];\n    }\n    class IfcWall extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWall;\n        ToTape(): any[];\n    }\n    class IfcWallStandardCase extends IFC2x3.IfcWall {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWallStandardCase;\n        ToTape(): any[];\n    }\n    class IfcWindow extends IFC2x3.IfcBuildingElement {\n        OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        OverallWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, OverallHeight: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, OverallWidth: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindow;\n        ToTape(): any[];\n    }\n    class IfcActuatorType extends IFC2x3.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC2x3.IfcActuatorTypeEnum> | IFC2x3.IfcActuatorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcActuatorTypeEnum> | IFC2x3.IfcActuatorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActuatorType;\n        ToTape(): any[];\n    }\n    class IfcAlarmType extends IFC2x3.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC2x3.IfcAlarmTypeEnum> | IFC2x3.IfcAlarmTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcAlarmTypeEnum> | IFC2x3.IfcAlarmTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAlarmType;\n        ToTape(): any[];\n    }\n    class IfcBeam extends IFC2x3.IfcBuildingElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBeam;\n        ToTape(): any[];\n    }\n    class IfcChamferEdgeFeature extends IFC2x3.IfcEdgeFeature {\n        Width: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, FeatureLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, Width: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, Height: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcChamferEdgeFeature;\n        ToTape(): any[];\n    }\n    class IfcControllerType extends IFC2x3.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC2x3.IfcControllerTypeEnum> | IFC2x3.IfcControllerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ApplicableOccurrence: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, HasPropertySets: (Handle<IFC2x3.IfcPropertySetDefinition> | IFC2x3.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC2x3.IfcRepresentationMap> | IFC2x3.IfcRepresentationMap)[] | null, Tag: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ElementType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, PredefinedType: (Handle<IFC2x3.IfcControllerTypeEnum> | IFC2x3.IfcControllerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcControllerType;\n        ToTape(): any[];\n    }\n    class IfcDistributionChamberElement extends IFC2x3.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionChamberElement;\n        ToTape(): any[];\n    }\n    class IfcDistributionControlElement extends IFC2x3.IfcDistributionElement {\n        ControlElementId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null;\n        AssignedToFlowElement: (Handle<IFC2x3.IfcRelFlowControlElements> | IFC2x3.IfcRelFlowControlElements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, ControlElementId: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionControlElement;\n        ToTape(): any[];\n    }\n    class IfcElectricDistributionPoint extends IFC2x3.IfcFlowController {\n        DistributionPointFunction: (Handle<IFC2x3.IfcElectricDistributionPointFunctionEnum> | IFC2x3.IfcElectricDistributionPointFunctionEnum);\n        UserDefinedFunction: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, DistributionPointFunction: (Handle<IFC2x3.IfcElectricDistributionPointFunctionEnum> | IFC2x3.IfcElectricDistributionPointFunctionEnum), UserDefinedFunction: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricDistributionPoint;\n        ToTape(): any[];\n    }\n    class IfcReinforcingBar extends IFC2x3.IfcReinforcingElement {\n        NominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure);\n        CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure);\n        BarLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null;\n        BarRole: (Handle<IFC2x3.IfcReinforcingBarRoleEnum> | IFC2x3.IfcReinforcingBarRoleEnum);\n        BarSurface: (Handle<IFC2x3.IfcReinforcingBarSurfaceEnum> | IFC2x3.IfcReinforcingBarSurfaceEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC2x3.IfcGloballyUniqueId> | IFC2x3.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC2x3.IfcOwnerHistory> | IFC2x3.IfcOwnerHistory), Name: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, Description: (Handle<IFC2x3.IfcText> | IFC2x3.IfcText) | null, ObjectType: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, ObjectPlacement: (Handle<IFC2x3.IfcObjectPlacement> | IFC2x3.IfcObjectPlacement) | null, Representation: (Handle<IFC2x3.IfcProductRepresentation> | IFC2x3.IfcProductRepresentation) | null, Tag: (Handle<IFC2x3.IfcIdentifier> | IFC2x3.IfcIdentifier) | null, SteelGrade: (Handle<IFC2x3.IfcLabel> | IFC2x3.IfcLabel) | null, NominalDiameter: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure), CrossSectionArea: (Handle<IFC2x3.IfcAreaMeasure> | IFC2x3.IfcAreaMeasure), BarLength: (Handle<IFC2x3.IfcPositiveLengthMeasure> | IFC2x3.IfcPositiveLengthMeasure) | null, BarRole: (Handle<IFC2x3.IfcReinforcingBarRoleEnum> | IFC2x3.IfcReinforcingBarRoleEnum), BarSurface: (Handle<IFC2x3.IfcReinforcingBarSurfaceEnum> | IFC2x3.IfcReinforcingBarSurfaceEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingBar;\n        ToTape(): any[];\n    }\n}\n declare namespace IFC4 {\n    class IfcAbsorbedDoseMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAccelerationMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAmountOfSubstanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAngularVelocityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    type IfcArcIndex = Array<IfcPositiveInteger>;\n    class IfcAreaDensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcAreaMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcBinary {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcBoolean {\n        value: boolean;\n        constructor(v: boolean);\n    }\n    class IfcBoxAlignment {\n        value: IfcLabel;\n        constructor(v: IfcLabel);\n    }\n    class IfcCardinalPointReference {\n        value: number;\n        constructor(v: number);\n    }\n    type IfcComplexNumber = Array<number>;\n    type IfcCompoundPlaneAngleMeasure = Array<number>;\n    class IfcContextDependentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcCountMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcCurvatureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDate {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcDateTime {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcDayInMonthNumber {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDayInWeekNumber {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDescriptiveMeasure {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcDimensionCount {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDoseEquivalentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcDuration {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcDynamicViscosityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricCapacitanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricChargeMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricConductanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricCurrentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricResistanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcElectricVoltageMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcEnergyMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcFontStyle {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcFontVariant {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcFontWeight {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcForceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcFrequencyMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcGloballyUniqueId {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcHeatFluxDensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcHeatingValueMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIdentifier {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcIlluminanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcInductanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcInteger {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIntegerCountRateMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIonConcentrationMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcIsothermalMoistureCapacityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcKinematicViscosityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLabel {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcLanguageId {\n        value: IfcIdentifier;\n        constructor(v: IfcIdentifier);\n    }\n    class IfcLengthMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    type IfcLineIndex = Array<IfcPositiveInteger>;\n    class IfcLinearForceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLinearMomentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLinearStiffnessMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLinearVelocityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLogical {\n        value: boolean;\n        constructor(v: boolean);\n    }\n    class IfcLuminousFluxMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLuminousIntensityDistributionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcLuminousIntensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMagneticFluxDensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMagneticFluxMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassDensityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassFlowRateMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMassPerLengthMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfElasticityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfLinearSubgradeReactionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfRotationalSubgradeReactionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcModulusOfSubgradeReactionMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMoistureDiffusivityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMolecularWeightMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMomentOfInertiaMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMonetaryMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcMonthInYearNumber {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcNonNegativeLengthMeasure {\n        value: IfcLengthMeasure;\n        constructor(v: IfcLengthMeasure);\n    }\n    class IfcNormalisedRatioMeasure {\n        value: IfcRatioMeasure;\n        constructor(v: IfcRatioMeasure);\n    }\n    class IfcNumericMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPHMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcParameterValue {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPlanarForceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPlaneAngleMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPositiveInteger {\n        value: IfcInteger;\n        constructor(v: IfcInteger);\n    }\n    class IfcPositiveLengthMeasure {\n        value: IfcLengthMeasure;\n        constructor(v: IfcLengthMeasure);\n    }\n    class IfcPositivePlaneAngleMeasure {\n        value: IfcPlaneAngleMeasure;\n        constructor(v: IfcPlaneAngleMeasure);\n    }\n    class IfcPositiveRatioMeasure {\n        value: IfcRatioMeasure;\n        constructor(v: IfcRatioMeasure);\n    }\n    class IfcPowerMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcPresentableText {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcPressureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    type IfcPropertySetDefinitionSet = Array<IfcPropertySetDefinition>;\n    class IfcRadioActivityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRatioMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcReal {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRotationalFrequencyMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRotationalMassMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcRotationalStiffnessMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSectionModulusMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSectionalAreaIntegralMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcShearModulusMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSolidAngleMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSoundPowerLevelMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSoundPowerMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSoundPressureLevelMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSoundPressureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSpecificHeatCapacityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSpecularExponent {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcSpecularRoughness {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTemperatureGradientMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTemperatureRateOfChangeMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcText {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextAlignment {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextDecoration {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextFontName {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTextTransformation {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcThermalAdmittanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalConductivityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalExpansionCoefficientMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalResistanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermalTransmittanceMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcThermodynamicTemperatureMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTime {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcTimeMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTimeStamp {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcTorqueMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcURIReference {\n        value: string;\n        constructor(v: string);\n    }\n    class IfcVaporPermeabilityMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcVolumeMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcVolumetricFlowRateMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcWarpingConstantMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcWarpingMomentMeasure {\n        value: number;\n        constructor(v: number);\n    }\n    class IfcActionRequestTypeEnum {\n        value: string;\n        constructor(v: string);\n        static EMAIL: string;\n        static FAX: string;\n        static PHONE: string;\n        static POST: string;\n        static VERBAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcActionSourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DEAD_LOAD_G: string;\n        static COMPLETION_G1: string;\n        static LIVE_LOAD_Q: string;\n        static SNOW_S: string;\n        static WIND_W: string;\n        static PRESTRESSING_P: string;\n        static SETTLEMENT_U: string;\n        static TEMPERATURE_T: string;\n        static EARTHQUAKE_E: string;\n        static FIRE: string;\n        static IMPULSE: string;\n        static IMPACT: string;\n        static TRANSPORT: string;\n        static ERECTION: string;\n        static PROPPING: string;\n        static SYSTEM_IMPERFECTION: string;\n        static SHRINKAGE: string;\n        static CREEP: string;\n        static LACK_OF_FIT: string;\n        static BUOYANCY: string;\n        static ICE: string;\n        static CURRENT: string;\n        static WAVE: string;\n        static RAIN: string;\n        static BRAKES: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcActionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PERMANENT_G: string;\n        static VARIABLE_Q: string;\n        static EXTRAORDINARY_A: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcActuatorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ELECTRICACTUATOR: string;\n        static HANDOPERATEDACTUATOR: string;\n        static HYDRAULICACTUATOR: string;\n        static PNEUMATICACTUATOR: string;\n        static THERMOSTATICACTUATOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAddressTypeEnum {\n        value: string;\n        constructor(v: string);\n        static OFFICE: string;\n        static SITE: string;\n        static HOME: string;\n        static DISTRIBUTIONPOINT: string;\n        static USERDEFINED: string;\n    }\n    class IfcAirTerminalBoxTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONSTANTFLOW: string;\n        static VARIABLEFLOWPRESSUREDEPENDANT: string;\n        static VARIABLEFLOWPRESSUREINDEPENDANT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAirTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DIFFUSER: string;\n        static GRILLE: string;\n        static LOUVRE: string;\n        static REGISTER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAirToAirHeatRecoveryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FIXEDPLATECOUNTERFLOWEXCHANGER: string;\n        static FIXEDPLATECROSSFLOWEXCHANGER: string;\n        static FIXEDPLATEPARALLELFLOWEXCHANGER: string;\n        static ROTARYWHEEL: string;\n        static RUNAROUNDCOILLOOP: string;\n        static HEATPIPE: string;\n        static TWINTOWERENTHALPYRECOVERYLOOPS: string;\n        static THERMOSIPHONSEALEDTUBEHEATEXCHANGERS: string;\n        static THERMOSIPHONCOILTYPEHEATEXCHANGERS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAlarmTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BELL: string;\n        static BREAKGLASSBUTTON: string;\n        static LIGHT: string;\n        static MANUALPULLBOX: string;\n        static SIREN: string;\n        static WHISTLE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAnalysisModelTypeEnum {\n        value: string;\n        constructor(v: string);\n        static IN_PLANE_LOADING_2D: string;\n        static OUT_PLANE_LOADING_2D: string;\n        static LOADING_3D: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAnalysisTheoryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FIRST_ORDER_THEORY: string;\n        static SECOND_ORDER_THEORY: string;\n        static THIRD_ORDER_THEORY: string;\n        static FULL_NONLINEAR_THEORY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcArithmeticOperatorEnum {\n        value: string;\n        constructor(v: string);\n        static ADD: string;\n        static DIVIDE: string;\n        static MULTIPLY: string;\n        static SUBTRACT: string;\n    }\n    class IfcAssemblyPlaceEnum {\n        value: string;\n        constructor(v: string);\n        static SITE: string;\n        static FACTORY: string;\n        static NOTDEFINED: string;\n    }\n    class IfcAudioVisualApplianceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AMPLIFIER: string;\n        static CAMERA: string;\n        static DISPLAY: string;\n        static MICROPHONE: string;\n        static PLAYER: string;\n        static PROJECTOR: string;\n        static RECEIVER: string;\n        static SPEAKER: string;\n        static SWITCHER: string;\n        static TELEPHONE: string;\n        static TUNER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBSplineCurveForm {\n        value: string;\n        constructor(v: string);\n        static POLYLINE_FORM: string;\n        static CIRCULAR_ARC: string;\n        static ELLIPTIC_ARC: string;\n        static PARABOLIC_ARC: string;\n        static HYPERBOLIC_ARC: string;\n        static UNSPECIFIED: string;\n    }\n    class IfcBSplineSurfaceForm {\n        value: string;\n        constructor(v: string);\n        static PLANE_SURF: string;\n        static CYLINDRICAL_SURF: string;\n        static CONICAL_SURF: string;\n        static SPHERICAL_SURF: string;\n        static TOROIDAL_SURF: string;\n        static SURF_OF_REVOLUTION: string;\n        static RULED_SURF: string;\n        static GENERALISED_CONE: string;\n        static QUADRIC_SURF: string;\n        static SURF_OF_LINEAR_EXTRUSION: string;\n        static UNSPECIFIED: string;\n    }\n    class IfcBeamTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEAM: string;\n        static JOIST: string;\n        static HOLLOWCORE: string;\n        static LINTEL: string;\n        static SPANDREL: string;\n        static T_BEAM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBenchmarkEnum {\n        value: string;\n        constructor(v: string);\n        static GREATERTHAN: string;\n        static GREATERTHANOREQUALTO: string;\n        static LESSTHAN: string;\n        static LESSTHANOREQUALTO: string;\n        static EQUALTO: string;\n        static NOTEQUALTO: string;\n        static INCLUDES: string;\n        static NOTINCLUDES: string;\n        static INCLUDEDIN: string;\n        static NOTINCLUDEDIN: string;\n    }\n    class IfcBoilerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static WATER: string;\n        static STEAM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBooleanOperator {\n        value: string;\n        constructor(v: string);\n        static UNION: string;\n        static INTERSECTION: string;\n        static DIFFERENCE: string;\n    }\n    class IfcBuildingElementPartTypeEnum {\n        value: string;\n        constructor(v: string);\n        static INSULATION: string;\n        static PRECASTPANEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBuildingElementProxyTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COMPLEX: string;\n        static ELEMENT: string;\n        static PARTIAL: string;\n        static PROVISIONFORVOID: string;\n        static PROVISIONFORSPACE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBuildingSystemTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FENESTRATION: string;\n        static FOUNDATION: string;\n        static LOADBEARING: string;\n        static OUTERSHELL: string;\n        static SHADING: string;\n        static TRANSPORT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcBurnerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCableCarrierFittingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEND: string;\n        static CROSS: string;\n        static REDUCER: string;\n        static TEE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCableCarrierSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CABLELADDERSEGMENT: string;\n        static CABLETRAYSEGMENT: string;\n        static CABLETRUNKINGSEGMENT: string;\n        static CONDUITSEGMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCableFittingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONNECTOR: string;\n        static ENTRY: string;\n        static EXIT: string;\n        static JUNCTION: string;\n        static TRANSITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCableSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BUSBARSEGMENT: string;\n        static CABLESEGMENT: string;\n        static CONDUCTORSEGMENT: string;\n        static CORESEGMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcChangeActionEnum {\n        value: string;\n        constructor(v: string);\n        static NOCHANGE: string;\n        static MODIFIED: string;\n        static ADDED: string;\n        static DELETED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcChillerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRCOOLED: string;\n        static WATERCOOLED: string;\n        static HEATRECOVERY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcChimneyTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCoilTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DXCOOLINGCOIL: string;\n        static ELECTRICHEATINGCOIL: string;\n        static GASHEATINGCOIL: string;\n        static HYDRONICCOIL: string;\n        static STEAMHEATINGCOIL: string;\n        static WATERCOOLINGCOIL: string;\n        static WATERHEATINGCOIL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcColumnTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COLUMN: string;\n        static PILASTER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCommunicationsApplianceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ANTENNA: string;\n        static COMPUTER: string;\n        static FAX: string;\n        static GATEWAY: string;\n        static MODEM: string;\n        static NETWORKAPPLIANCE: string;\n        static NETWORKBRIDGE: string;\n        static NETWORKHUB: string;\n        static PRINTER: string;\n        static REPEATER: string;\n        static ROUTER: string;\n        static SCANNER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcComplexPropertyTemplateTypeEnum {\n        value: string;\n        constructor(v: string);\n        static P_COMPLEX: string;\n        static Q_COMPLEX: string;\n    }\n    class IfcCompressorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DYNAMIC: string;\n        static RECIPROCATING: string;\n        static ROTARY: string;\n        static SCROLL: string;\n        static TROCHOIDAL: string;\n        static SINGLESTAGE: string;\n        static BOOSTER: string;\n        static OPENTYPE: string;\n        static HERMETIC: string;\n        static SEMIHERMETIC: string;\n        static WELDEDSHELLHERMETIC: string;\n        static ROLLINGPISTON: string;\n        static ROTARYVANE: string;\n        static SINGLESCREW: string;\n        static TWINSCREW: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCondenserTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRCOOLED: string;\n        static EVAPORATIVECOOLED: string;\n        static WATERCOOLED: string;\n        static WATERCOOLEDBRAZEDPLATE: string;\n        static WATERCOOLEDSHELLCOIL: string;\n        static WATERCOOLEDSHELLTUBE: string;\n        static WATERCOOLEDTUBEINTUBE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcConnectionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ATPATH: string;\n        static ATSTART: string;\n        static ATEND: string;\n        static NOTDEFINED: string;\n    }\n    class IfcConstraintEnum {\n        value: string;\n        constructor(v: string);\n        static HARD: string;\n        static SOFT: string;\n        static ADVISORY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcConstructionEquipmentResourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DEMOLISHING: string;\n        static EARTHMOVING: string;\n        static ERECTING: string;\n        static HEATING: string;\n        static LIGHTING: string;\n        static PAVING: string;\n        static PUMPING: string;\n        static TRANSPORTING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcConstructionMaterialResourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AGGREGATES: string;\n        static CONCRETE: string;\n        static DRYWALL: string;\n        static FUEL: string;\n        static GYPSUM: string;\n        static MASONRY: string;\n        static METAL: string;\n        static PLASTIC: string;\n        static WOOD: string;\n        static NOTDEFINED: string;\n        static USERDEFINED: string;\n    }\n    class IfcConstructionProductResourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ASSEMBLY: string;\n        static FORMWORK: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcControllerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLOATING: string;\n        static PROGRAMMABLE: string;\n        static PROPORTIONAL: string;\n        static MULTIPOSITION: string;\n        static TWOPOSITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCooledBeamTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACTIVE: string;\n        static PASSIVE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCoolingTowerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static NATURALDRAFT: string;\n        static MECHANICALINDUCEDDRAFT: string;\n        static MECHANICALFORCEDDRAFT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCostItemTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCostScheduleTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BUDGET: string;\n        static COSTPLAN: string;\n        static ESTIMATE: string;\n        static TENDER: string;\n        static PRICEDBILLOFQUANTITIES: string;\n        static UNPRICEDBILLOFQUANTITIES: string;\n        static SCHEDULEOFRATES: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCoveringTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CEILING: string;\n        static FLOORING: string;\n        static CLADDING: string;\n        static ROOFING: string;\n        static MOLDING: string;\n        static SKIRTINGBOARD: string;\n        static INSULATION: string;\n        static MEMBRANE: string;\n        static SLEEVING: string;\n        static WRAPPING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCrewResourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static OFFICE: string;\n        static SITE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCurtainWallTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcCurveInterpolationEnum {\n        value: string;\n        constructor(v: string);\n        static LINEAR: string;\n        static LOG_LINEAR: string;\n        static LOG_LOG: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDamperTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BACKDRAFTDAMPER: string;\n        static BALANCINGDAMPER: string;\n        static BLASTDAMPER: string;\n        static CONTROLDAMPER: string;\n        static FIREDAMPER: string;\n        static FIRESMOKEDAMPER: string;\n        static FUMEHOODEXHAUST: string;\n        static GRAVITYDAMPER: string;\n        static GRAVITYRELIEFDAMPER: string;\n        static RELIEFDAMPER: string;\n        static SMOKEDAMPER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDataOriginEnum {\n        value: string;\n        constructor(v: string);\n        static MEASURED: string;\n        static PREDICTED: string;\n        static SIMULATED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDerivedUnitEnum {\n        value: string;\n        constructor(v: string);\n        static ANGULARVELOCITYUNIT: string;\n        static AREADENSITYUNIT: string;\n        static COMPOUNDPLANEANGLEUNIT: string;\n        static DYNAMICVISCOSITYUNIT: string;\n        static HEATFLUXDENSITYUNIT: string;\n        static INTEGERCOUNTRATEUNIT: string;\n        static ISOTHERMALMOISTURECAPACITYUNIT: string;\n        static KINEMATICVISCOSITYUNIT: string;\n        static LINEARVELOCITYUNIT: string;\n        static MASSDENSITYUNIT: string;\n        static MASSFLOWRATEUNIT: string;\n        static MOISTUREDIFFUSIVITYUNIT: string;\n        static MOLECULARWEIGHTUNIT: string;\n        static SPECIFICHEATCAPACITYUNIT: string;\n        static THERMALADMITTANCEUNIT: string;\n        static THERMALCONDUCTANCEUNIT: string;\n        static THERMALRESISTANCEUNIT: string;\n        static THERMALTRANSMITTANCEUNIT: string;\n        static VAPORPERMEABILITYUNIT: string;\n        static VOLUMETRICFLOWRATEUNIT: string;\n        static ROTATIONALFREQUENCYUNIT: string;\n        static TORQUEUNIT: string;\n        static MOMENTOFINERTIAUNIT: string;\n        static LINEARMOMENTUNIT: string;\n        static LINEARFORCEUNIT: string;\n        static PLANARFORCEUNIT: string;\n        static MODULUSOFELASTICITYUNIT: string;\n        static SHEARMODULUSUNIT: string;\n        static LINEARSTIFFNESSUNIT: string;\n        static ROTATIONALSTIFFNESSUNIT: string;\n        static MODULUSOFSUBGRADEREACTIONUNIT: string;\n        static ACCELERATIONUNIT: string;\n        static CURVATUREUNIT: string;\n        static HEATINGVALUEUNIT: string;\n        static IONCONCENTRATIONUNIT: string;\n        static LUMINOUSINTENSITYDISTRIBUTIONUNIT: string;\n        static MASSPERLENGTHUNIT: string;\n        static MODULUSOFLINEARSUBGRADEREACTIONUNIT: string;\n        static MODULUSOFROTATIONALSUBGRADEREACTIONUNIT: string;\n        static PHUNIT: string;\n        static ROTATIONALMASSUNIT: string;\n        static SECTIONAREAINTEGRALUNIT: string;\n        static SECTIONMODULUSUNIT: string;\n        static SOUNDPOWERLEVELUNIT: string;\n        static SOUNDPOWERUNIT: string;\n        static SOUNDPRESSURELEVELUNIT: string;\n        static SOUNDPRESSUREUNIT: string;\n        static TEMPERATUREGRADIENTUNIT: string;\n        static TEMPERATURERATEOFCHANGEUNIT: string;\n        static THERMALEXPANSIONCOEFFICIENTUNIT: string;\n        static WARPINGCONSTANTUNIT: string;\n        static WARPINGMOMENTUNIT: string;\n        static USERDEFINED: string;\n    }\n    class IfcDirectionSenseEnum {\n        value: string;\n        constructor(v: string);\n        static POSITIVE: string;\n        static NEGATIVE: string;\n    }\n    class IfcDiscreteAccessoryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ANCHORPLATE: string;\n        static BRACKET: string;\n        static SHOE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDistributionChamberElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FORMEDDUCT: string;\n        static INSPECTIONCHAMBER: string;\n        static INSPECTIONPIT: string;\n        static MANHOLE: string;\n        static METERCHAMBER: string;\n        static SUMP: string;\n        static TRENCH: string;\n        static VALVECHAMBER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDistributionPortTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CABLE: string;\n        static CABLECARRIER: string;\n        static DUCT: string;\n        static PIPE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDistributionSystemEnum {\n        value: string;\n        constructor(v: string);\n        static AIRCONDITIONING: string;\n        static AUDIOVISUAL: string;\n        static CHEMICAL: string;\n        static CHILLEDWATER: string;\n        static COMMUNICATION: string;\n        static COMPRESSEDAIR: string;\n        static CONDENSERWATER: string;\n        static CONTROL: string;\n        static CONVEYING: string;\n        static DATA: string;\n        static DISPOSAL: string;\n        static DOMESTICCOLDWATER: string;\n        static DOMESTICHOTWATER: string;\n        static DRAINAGE: string;\n        static EARTHING: string;\n        static ELECTRICAL: string;\n        static ELECTROACOUSTIC: string;\n        static EXHAUST: string;\n        static FIREPROTECTION: string;\n        static FUEL: string;\n        static GAS: string;\n        static HAZARDOUS: string;\n        static HEATING: string;\n        static LIGHTING: string;\n        static LIGHTNINGPROTECTION: string;\n        static MUNICIPALSOLIDWASTE: string;\n        static OIL: string;\n        static OPERATIONAL: string;\n        static POWERGENERATION: string;\n        static RAINWATER: string;\n        static REFRIGERATION: string;\n        static SECURITY: string;\n        static SEWAGE: string;\n        static SIGNAL: string;\n        static STORMWATER: string;\n        static TELEPHONE: string;\n        static TV: string;\n        static VACUUM: string;\n        static VENT: string;\n        static VENTILATION: string;\n        static WASTEWATER: string;\n        static WATERSUPPLY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDocumentConfidentialityEnum {\n        value: string;\n        constructor(v: string);\n        static PUBLIC: string;\n        static RESTRICTED: string;\n        static CONFIDENTIAL: string;\n        static PERSONAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDocumentStatusEnum {\n        value: string;\n        constructor(v: string);\n        static DRAFT: string;\n        static FINALDRAFT: string;\n        static FINAL: string;\n        static REVISION: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorPanelOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SWINGING: string;\n        static DOUBLE_ACTING: string;\n        static SLIDING: string;\n        static FOLDING: string;\n        static REVOLVING: string;\n        static ROLLINGUP: string;\n        static FIXEDPANEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorPanelPositionEnum {\n        value: string;\n        constructor(v: string);\n        static LEFT: string;\n        static MIDDLE: string;\n        static RIGHT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorStyleConstructionEnum {\n        value: string;\n        constructor(v: string);\n        static ALUMINIUM: string;\n        static HIGH_GRADE_STEEL: string;\n        static STEEL: string;\n        static WOOD: string;\n        static ALUMINIUM_WOOD: string;\n        static ALUMINIUM_PLASTIC: string;\n        static PLASTIC: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorStyleOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SINGLE_SWING_LEFT: string;\n        static SINGLE_SWING_RIGHT: string;\n        static DOUBLE_DOOR_SINGLE_SWING: string;\n        static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT: string;\n        static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT: string;\n        static DOUBLE_SWING_LEFT: string;\n        static DOUBLE_SWING_RIGHT: string;\n        static DOUBLE_DOOR_DOUBLE_SWING: string;\n        static SLIDING_TO_LEFT: string;\n        static SLIDING_TO_RIGHT: string;\n        static DOUBLE_DOOR_SLIDING: string;\n        static FOLDING_TO_LEFT: string;\n        static FOLDING_TO_RIGHT: string;\n        static DOUBLE_DOOR_FOLDING: string;\n        static REVOLVING: string;\n        static ROLLINGUP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DOOR: string;\n        static GATE: string;\n        static TRAPDOOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDoorTypeOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SINGLE_SWING_LEFT: string;\n        static SINGLE_SWING_RIGHT: string;\n        static DOUBLE_DOOR_SINGLE_SWING: string;\n        static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT: string;\n        static DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT: string;\n        static DOUBLE_SWING_LEFT: string;\n        static DOUBLE_SWING_RIGHT: string;\n        static DOUBLE_DOOR_DOUBLE_SWING: string;\n        static SLIDING_TO_LEFT: string;\n        static SLIDING_TO_RIGHT: string;\n        static DOUBLE_DOOR_SLIDING: string;\n        static FOLDING_TO_LEFT: string;\n        static FOLDING_TO_RIGHT: string;\n        static DOUBLE_DOOR_FOLDING: string;\n        static REVOLVING: string;\n        static ROLLINGUP: string;\n        static SWING_FIXED_LEFT: string;\n        static SWING_FIXED_RIGHT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDuctFittingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEND: string;\n        static CONNECTOR: string;\n        static ENTRY: string;\n        static EXIT: string;\n        static JUNCTION: string;\n        static OBSTRUCTION: string;\n        static TRANSITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDuctSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static RIGIDSEGMENT: string;\n        static FLEXIBLESEGMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcDuctSilencerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLATOVAL: string;\n        static RECTANGULAR: string;\n        static ROUND: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricApplianceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DISHWASHER: string;\n        static ELECTRICCOOKER: string;\n        static FREESTANDINGELECTRICHEATER: string;\n        static FREESTANDINGFAN: string;\n        static FREESTANDINGWATERHEATER: string;\n        static FREESTANDINGWATERCOOLER: string;\n        static FREEZER: string;\n        static FRIDGE_FREEZER: string;\n        static HANDDRYER: string;\n        static KITCHENMACHINE: string;\n        static MICROWAVE: string;\n        static PHOTOCOPIER: string;\n        static REFRIGERATOR: string;\n        static TUMBLEDRYER: string;\n        static VENDINGMACHINE: string;\n        static WASHINGMACHINE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricDistributionBoardTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONSUMERUNIT: string;\n        static DISTRIBUTIONBOARD: string;\n        static MOTORCONTROLCENTRE: string;\n        static SWITCHBOARD: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricFlowStorageDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BATTERY: string;\n        static CAPACITORBANK: string;\n        static HARMONICFILTER: string;\n        static INDUCTORBANK: string;\n        static UPS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricGeneratorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CHP: string;\n        static ENGINEGENERATOR: string;\n        static STANDALONE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricMotorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DC: string;\n        static INDUCTION: string;\n        static POLYPHASE: string;\n        static RELUCTANCESYNCHRONOUS: string;\n        static SYNCHRONOUS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElectricTimeControlTypeEnum {\n        value: string;\n        constructor(v: string);\n        static TIMECLOCK: string;\n        static TIMEDELAY: string;\n        static RELAY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElementAssemblyTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACCESSORY_ASSEMBLY: string;\n        static ARCH: string;\n        static BEAM_GRID: string;\n        static BRACED_FRAME: string;\n        static GIRDER: string;\n        static REINFORCEMENT_UNIT: string;\n        static RIGID_FRAME: string;\n        static SLAB_FIELD: string;\n        static TRUSS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcElementCompositionEnum {\n        value: string;\n        constructor(v: string);\n        static COMPLEX: string;\n        static ELEMENT: string;\n        static PARTIAL: string;\n    }\n    class IfcEngineTypeEnum {\n        value: string;\n        constructor(v: string);\n        static EXTERNALCOMBUSTION: string;\n        static INTERNALCOMBUSTION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcEvaporativeCoolerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER: string;\n        static DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER: string;\n        static DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER: string;\n        static DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER: string;\n        static DIRECTEVAPORATIVEAIRWASHER: string;\n        static INDIRECTEVAPORATIVEPACKAGEAIRCOOLER: string;\n        static INDIRECTEVAPORATIVEWETCOIL: string;\n        static INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER: string;\n        static INDIRECTDIRECTCOMBINATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcEvaporatorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DIRECTEXPANSION: string;\n        static DIRECTEXPANSIONSHELLANDTUBE: string;\n        static DIRECTEXPANSIONTUBEINTUBE: string;\n        static DIRECTEXPANSIONBRAZEDPLATE: string;\n        static FLOODEDSHELLANDTUBE: string;\n        static SHELLANDCOIL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcEventTriggerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static EVENTRULE: string;\n        static EVENTMESSAGE: string;\n        static EVENTTIME: string;\n        static EVENTCOMPLEX: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcEventTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STARTEVENT: string;\n        static ENDEVENT: string;\n        static INTERMEDIATEEVENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcExternalSpatialElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static EXTERNAL: string;\n        static EXTERNAL_EARTH: string;\n        static EXTERNAL_WATER: string;\n        static EXTERNAL_FIRE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFanTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CENTRIFUGALFORWARDCURVED: string;\n        static CENTRIFUGALRADIAL: string;\n        static CENTRIFUGALBACKWARDINCLINEDCURVED: string;\n        static CENTRIFUGALAIRFOIL: string;\n        static TUBEAXIAL: string;\n        static VANEAXIAL: string;\n        static PROPELLORAXIAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFastenerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static GLUE: string;\n        static MORTAR: string;\n        static WELD: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFilterTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRPARTICLEFILTER: string;\n        static COMPRESSEDAIRFILTER: string;\n        static ODORFILTER: string;\n        static OILFILTER: string;\n        static STRAINER: string;\n        static WATERFILTER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFireSuppressionTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BREECHINGINLET: string;\n        static FIREHYDRANT: string;\n        static HOSEREEL: string;\n        static SPRINKLER: string;\n        static SPRINKLERDEFLECTOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFlowDirectionEnum {\n        value: string;\n        constructor(v: string);\n        static SOURCE: string;\n        static SINK: string;\n        static SOURCEANDSINK: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFlowInstrumentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PRESSUREGAUGE: string;\n        static THERMOMETER: string;\n        static AMMETER: string;\n        static FREQUENCYMETER: string;\n        static POWERFACTORMETER: string;\n        static PHASEANGLEMETER: string;\n        static VOLTMETER_PEAK: string;\n        static VOLTMETER_RMS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFlowMeterTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ENERGYMETER: string;\n        static GASMETER: string;\n        static OILMETER: string;\n        static WATERMETER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFootingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CAISSON_FOUNDATION: string;\n        static FOOTING_BEAM: string;\n        static PAD_FOOTING: string;\n        static PILE_CAP: string;\n        static STRIP_FOOTING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcFurnitureTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CHAIR: string;\n        static TABLE: string;\n        static DESK: string;\n        static BED: string;\n        static FILECABINET: string;\n        static SHELF: string;\n        static SOFA: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcGeographicElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static TERRAIN: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcGeometricProjectionEnum {\n        value: string;\n        constructor(v: string);\n        static GRAPH_VIEW: string;\n        static SKETCH_VIEW: string;\n        static MODEL_VIEW: string;\n        static PLAN_VIEW: string;\n        static REFLECTED_PLAN_VIEW: string;\n        static SECTION_VIEW: string;\n        static ELEVATION_VIEW: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcGlobalOrLocalEnum {\n        value: string;\n        constructor(v: string);\n        static GLOBAL_COORDS: string;\n        static LOCAL_COORDS: string;\n    }\n    class IfcGridTypeEnum {\n        value: string;\n        constructor(v: string);\n        static RECTANGULAR: string;\n        static RADIAL: string;\n        static TRIANGULAR: string;\n        static IRREGULAR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcHeatExchangerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PLATE: string;\n        static SHELLANDTUBE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcHumidifierTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STEAMINJECTION: string;\n        static ADIABATICAIRWASHER: string;\n        static ADIABATICPAN: string;\n        static ADIABATICWETTEDELEMENT: string;\n        static ADIABATICATOMIZING: string;\n        static ADIABATICULTRASONIC: string;\n        static ADIABATICRIGIDMEDIA: string;\n        static ADIABATICCOMPRESSEDAIRNOZZLE: string;\n        static ASSISTEDELECTRIC: string;\n        static ASSISTEDNATURALGAS: string;\n        static ASSISTEDPROPANE: string;\n        static ASSISTEDBUTANE: string;\n        static ASSISTEDSTEAM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcInterceptorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CYCLONIC: string;\n        static GREASE: string;\n        static OIL: string;\n        static PETROL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcInternalOrExternalEnum {\n        value: string;\n        constructor(v: string);\n        static INTERNAL: string;\n        static EXTERNAL: string;\n        static EXTERNAL_EARTH: string;\n        static EXTERNAL_WATER: string;\n        static EXTERNAL_FIRE: string;\n        static NOTDEFINED: string;\n    }\n    class IfcInventoryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ASSETINVENTORY: string;\n        static SPACEINVENTORY: string;\n        static FURNITUREINVENTORY: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcJunctionBoxTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DATA: string;\n        static POWER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcKnotType {\n        value: string;\n        constructor(v: string);\n        static UNIFORM_KNOTS: string;\n        static QUASI_UNIFORM_KNOTS: string;\n        static PIECEWISE_BEZIER_KNOTS: string;\n        static UNSPECIFIED: string;\n    }\n    class IfcLaborResourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ADMINISTRATION: string;\n        static CARPENTRY: string;\n        static CLEANING: string;\n        static CONCRETE: string;\n        static DRYWALL: string;\n        static ELECTRIC: string;\n        static FINISHING: string;\n        static FLOORING: string;\n        static GENERAL: string;\n        static HVAC: string;\n        static LANDSCAPING: string;\n        static MASONRY: string;\n        static PAINTING: string;\n        static PAVING: string;\n        static PLUMBING: string;\n        static ROOFING: string;\n        static SITEGRADING: string;\n        static STEELWORK: string;\n        static SURVEYING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLampTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COMPACTFLUORESCENT: string;\n        static FLUORESCENT: string;\n        static HALOGEN: string;\n        static HIGHPRESSUREMERCURY: string;\n        static HIGHPRESSURESODIUM: string;\n        static LED: string;\n        static METALHALIDE: string;\n        static OLED: string;\n        static TUNGSTENFILAMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLayerSetDirectionEnum {\n        value: string;\n        constructor(v: string);\n        static AXIS1: string;\n        static AXIS2: string;\n        static AXIS3: string;\n    }\n    class IfcLightDistributionCurveEnum {\n        value: string;\n        constructor(v: string);\n        static TYPE_A: string;\n        static TYPE_B: string;\n        static TYPE_C: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLightEmissionSourceEnum {\n        value: string;\n        constructor(v: string);\n        static COMPACTFLUORESCENT: string;\n        static FLUORESCENT: string;\n        static HIGHPRESSUREMERCURY: string;\n        static HIGHPRESSURESODIUM: string;\n        static LIGHTEMITTINGDIODE: string;\n        static LOWPRESSURESODIUM: string;\n        static LOWVOLTAGEHALOGEN: string;\n        static MAINVOLTAGEHALOGEN: string;\n        static METALHALIDE: string;\n        static TUNGSTENFILAMENT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLightFixtureTypeEnum {\n        value: string;\n        constructor(v: string);\n        static POINTSOURCE: string;\n        static DIRECTIONSOURCE: string;\n        static SECURITYLIGHTING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLoadGroupTypeEnum {\n        value: string;\n        constructor(v: string);\n        static LOAD_GROUP: string;\n        static LOAD_CASE: string;\n        static LOAD_COMBINATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcLogicalOperatorEnum {\n        value: string;\n        constructor(v: string);\n        static LOGICALAND: string;\n        static LOGICALOR: string;\n        static LOGICALXOR: string;\n        static LOGICALNOTAND: string;\n        static LOGICALNOTOR: string;\n    }\n    class IfcMechanicalFastenerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ANCHORBOLT: string;\n        static BOLT: string;\n        static DOWEL: string;\n        static NAIL: string;\n        static NAILPLATE: string;\n        static RIVET: string;\n        static SCREW: string;\n        static SHEARCONNECTOR: string;\n        static STAPLE: string;\n        static STUDSHEARCONNECTOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcMedicalDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRSTATION: string;\n        static FEEDAIRUNIT: string;\n        static OXYGENGENERATOR: string;\n        static OXYGENPLANT: string;\n        static VACUUMSTATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcMemberTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BRACE: string;\n        static CHORD: string;\n        static COLLAR: string;\n        static MEMBER: string;\n        static MULLION: string;\n        static PLATE: string;\n        static POST: string;\n        static PURLIN: string;\n        static RAFTER: string;\n        static STRINGER: string;\n        static STRUT: string;\n        static STUD: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcMotorConnectionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BELTDRIVE: string;\n        static COUPLING: string;\n        static DIRECTDRIVE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcNullStyle {\n        value: string;\n        constructor(v: string);\n        static NULL: string;\n    }\n    class IfcObjectTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PRODUCT: string;\n        static PROCESS: string;\n        static CONTROL: string;\n        static RESOURCE: string;\n        static ACTOR: string;\n        static GROUP: string;\n        static PROJECT: string;\n        static NOTDEFINED: string;\n    }\n    class IfcObjectiveEnum {\n        value: string;\n        constructor(v: string);\n        static CODECOMPLIANCE: string;\n        static CODEWAIVER: string;\n        static DESIGNINTENT: string;\n        static EXTERNAL: string;\n        static HEALTHANDSAFETY: string;\n        static MERGECONFLICT: string;\n        static MODELVIEW: string;\n        static PARAMETER: string;\n        static REQUIREMENT: string;\n        static SPECIFICATION: string;\n        static TRIGGERCONDITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcOccupantTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ASSIGNEE: string;\n        static ASSIGNOR: string;\n        static LESSEE: string;\n        static LESSOR: string;\n        static LETTINGAGENT: string;\n        static OWNER: string;\n        static TENANT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcOpeningElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static OPENING: string;\n        static RECESS: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcOutletTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AUDIOVISUALOUTLET: string;\n        static COMMUNICATIONSOUTLET: string;\n        static POWEROUTLET: string;\n        static DATAOUTLET: string;\n        static TELEPHONEOUTLET: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPerformanceHistoryTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPermeableCoveringOperationEnum {\n        value: string;\n        constructor(v: string);\n        static GRILL: string;\n        static LOUVER: string;\n        static SCREEN: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPermitTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACCESS: string;\n        static BUILDING: string;\n        static WORK: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPhysicalOrVirtualEnum {\n        value: string;\n        constructor(v: string);\n        static PHYSICAL: string;\n        static VIRTUAL: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPileConstructionEnum {\n        value: string;\n        constructor(v: string);\n        static CAST_IN_PLACE: string;\n        static COMPOSITE: string;\n        static PRECAST_CONCRETE: string;\n        static PREFAB_STEEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPileTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BORED: string;\n        static DRIVEN: string;\n        static JETGROUTING: string;\n        static COHESION: string;\n        static FRICTION: string;\n        static SUPPORT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPipeFittingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BEND: string;\n        static CONNECTOR: string;\n        static ENTRY: string;\n        static EXIT: string;\n        static JUNCTION: string;\n        static OBSTRUCTION: string;\n        static TRANSITION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPipeSegmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CULVERT: string;\n        static FLEXIBLESEGMENT: string;\n        static RIGIDSEGMENT: string;\n        static GUTTER: string;\n        static SPOOL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPlateTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CURTAIN_PANEL: string;\n        static SHEET: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPreferredSurfaceCurveRepresentation {\n        value: string;\n        constructor(v: string);\n        static CURVE3D: string;\n        static PCURVE_S1: string;\n        static PCURVE_S2: string;\n    }\n    class IfcProcedureTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ADVICE_CAUTION: string;\n        static ADVICE_NOTE: string;\n        static ADVICE_WARNING: string;\n        static CALIBRATION: string;\n        static DIAGNOSTIC: string;\n        static SHUTDOWN: string;\n        static STARTUP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProfileTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CURVE: string;\n        static AREA: string;\n    }\n    class IfcProjectOrderTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CHANGEORDER: string;\n        static MAINTENANCEWORKORDER: string;\n        static MOVEORDER: string;\n        static PURCHASEORDER: string;\n        static WORKORDER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProjectedOrTrueLengthEnum {\n        value: string;\n        constructor(v: string);\n        static PROJECTED_LENGTH: string;\n        static TRUE_LENGTH: string;\n    }\n    class IfcProjectionElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPropertySetTemplateTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PSET_TYPEDRIVENONLY: string;\n        static PSET_TYPEDRIVENOVERRIDE: string;\n        static PSET_OCCURRENCEDRIVEN: string;\n        static PSET_PERFORMANCEDRIVEN: string;\n        static QTO_TYPEDRIVENONLY: string;\n        static QTO_TYPEDRIVENOVERRIDE: string;\n        static QTO_OCCURRENCEDRIVEN: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProtectiveDeviceTrippingUnitTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ELECTRONIC: string;\n        static ELECTROMAGNETIC: string;\n        static RESIDUALCURRENT: string;\n        static THERMAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcProtectiveDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CIRCUITBREAKER: string;\n        static EARTHLEAKAGECIRCUITBREAKER: string;\n        static EARTHINGSWITCH: string;\n        static FUSEDISCONNECTOR: string;\n        static RESIDUALCURRENTCIRCUITBREAKER: string;\n        static RESIDUALCURRENTSWITCH: string;\n        static VARISTOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcPumpTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CIRCULATOR: string;\n        static ENDSUCTION: string;\n        static SPLITCASE: string;\n        static SUBMERSIBLEPUMP: string;\n        static SUMPPUMP: string;\n        static VERTICALINLINE: string;\n        static VERTICALTURBINE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRailingTypeEnum {\n        value: string;\n        constructor(v: string);\n        static HANDRAIL: string;\n        static GUARDRAIL: string;\n        static BALUSTRADE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRampFlightTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT: string;\n        static SPIRAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRampTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT_RUN_RAMP: string;\n        static TWO_STRAIGHT_RUN_RAMP: string;\n        static QUARTER_TURN_RAMP: string;\n        static TWO_QUARTER_TURN_RAMP: string;\n        static HALF_TURN_RAMP: string;\n        static SPIRAL_RAMP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRecurrenceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static DAILY: string;\n        static WEEKLY: string;\n        static MONTHLY_BY_DAY_OF_MONTH: string;\n        static MONTHLY_BY_POSITION: string;\n        static BY_DAY_COUNT: string;\n        static BY_WEEKDAY_COUNT: string;\n        static YEARLY_BY_DAY_OF_MONTH: string;\n        static YEARLY_BY_POSITION: string;\n    }\n    class IfcReflectanceMethodEnum {\n        value: string;\n        constructor(v: string);\n        static BLINN: string;\n        static FLAT: string;\n        static GLASS: string;\n        static MATT: string;\n        static METAL: string;\n        static MIRROR: string;\n        static PHONG: string;\n        static PLASTIC: string;\n        static STRAUSS: string;\n        static NOTDEFINED: string;\n    }\n    class IfcReinforcingBarRoleEnum {\n        value: string;\n        constructor(v: string);\n        static MAIN: string;\n        static SHEAR: string;\n        static LIGATURE: string;\n        static STUD: string;\n        static PUNCHING: string;\n        static EDGE: string;\n        static RING: string;\n        static ANCHORING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcReinforcingBarSurfaceEnum {\n        value: string;\n        constructor(v: string);\n        static PLAIN: string;\n        static TEXTURED: string;\n    }\n    class IfcReinforcingBarTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ANCHORING: string;\n        static EDGE: string;\n        static LIGATURE: string;\n        static MAIN: string;\n        static PUNCHING: string;\n        static RING: string;\n        static SHEAR: string;\n        static STUD: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcReinforcingMeshTypeEnum {\n        value: string;\n        constructor(v: string);\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcRoleEnum {\n        value: string;\n        constructor(v: string);\n        static SUPPLIER: string;\n        static MANUFACTURER: string;\n        static CONTRACTOR: string;\n        static SUBCONTRACTOR: string;\n        static ARCHITECT: string;\n        static STRUCTURALENGINEER: string;\n        static COSTENGINEER: string;\n        static CLIENT: string;\n        static BUILDINGOWNER: string;\n        static BUILDINGOPERATOR: string;\n        static MECHANICALENGINEER: string;\n        static ELECTRICALENGINEER: string;\n        static PROJECTMANAGER: string;\n        static FACILITIESMANAGER: string;\n        static CIVILENGINEER: string;\n        static COMMISSIONINGENGINEER: string;\n        static ENGINEER: string;\n        static OWNER: string;\n        static CONSULTANT: string;\n        static CONSTRUCTIONMANAGER: string;\n        static FIELDCONSTRUCTIONMANAGER: string;\n        static RESELLER: string;\n        static USERDEFINED: string;\n    }\n    class IfcRoofTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLAT_ROOF: string;\n        static SHED_ROOF: string;\n        static GABLE_ROOF: string;\n        static HIP_ROOF: string;\n        static HIPPED_GABLE_ROOF: string;\n        static GAMBREL_ROOF: string;\n        static MANSARD_ROOF: string;\n        static BARREL_ROOF: string;\n        static RAINBOW_ROOF: string;\n        static BUTTERFLY_ROOF: string;\n        static PAVILION_ROOF: string;\n        static DOME_ROOF: string;\n        static FREEFORM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSIPrefix {\n        value: string;\n        constructor(v: string);\n        static EXA: string;\n        static PETA: string;\n        static TERA: string;\n        static GIGA: string;\n        static MEGA: string;\n        static KILO: string;\n        static HECTO: string;\n        static DECA: string;\n        static DECI: string;\n        static CENTI: string;\n        static MILLI: string;\n        static MICRO: string;\n        static NANO: string;\n        static PICO: string;\n        static FEMTO: string;\n        static ATTO: string;\n    }\n    class IfcSIUnitName {\n        value: string;\n        constructor(v: string);\n        static AMPERE: string;\n        static BECQUEREL: string;\n        static CANDELA: string;\n        static COULOMB: string;\n        static CUBIC_METRE: string;\n        static DEGREE_CELSIUS: string;\n        static FARAD: string;\n        static GRAM: string;\n        static GRAY: string;\n        static HENRY: string;\n        static HERTZ: string;\n        static JOULE: string;\n        static KELVIN: string;\n        static LUMEN: string;\n        static LUX: string;\n        static METRE: string;\n        static MOLE: string;\n        static NEWTON: string;\n        static OHM: string;\n        static PASCAL: string;\n        static RADIAN: string;\n        static SECOND: string;\n        static SIEMENS: string;\n        static SIEVERT: string;\n        static SQUARE_METRE: string;\n        static STERADIAN: string;\n        static TESLA: string;\n        static VOLT: string;\n        static WATT: string;\n        static WEBER: string;\n    }\n    class IfcSanitaryTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BATH: string;\n        static BIDET: string;\n        static CISTERN: string;\n        static SHOWER: string;\n        static SINK: string;\n        static SANITARYFOUNTAIN: string;\n        static TOILETPAN: string;\n        static URINAL: string;\n        static WASHHANDBASIN: string;\n        static WCSEAT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSectionTypeEnum {\n        value: string;\n        constructor(v: string);\n        static UNIFORM: string;\n        static TAPERED: string;\n    }\n    class IfcSensorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COSENSOR: string;\n        static CO2SENSOR: string;\n        static CONDUCTANCESENSOR: string;\n        static CONTACTSENSOR: string;\n        static FIRESENSOR: string;\n        static FLOWSENSOR: string;\n        static FROSTSENSOR: string;\n        static GASSENSOR: string;\n        static HEATSENSOR: string;\n        static HUMIDITYSENSOR: string;\n        static IDENTIFIERSENSOR: string;\n        static IONCONCENTRATIONSENSOR: string;\n        static LEVELSENSOR: string;\n        static LIGHTSENSOR: string;\n        static MOISTURESENSOR: string;\n        static MOVEMENTSENSOR: string;\n        static PHSENSOR: string;\n        static PRESSURESENSOR: string;\n        static RADIATIONSENSOR: string;\n        static RADIOACTIVITYSENSOR: string;\n        static SMOKESENSOR: string;\n        static SOUNDSENSOR: string;\n        static TEMPERATURESENSOR: string;\n        static WINDSENSOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSequenceEnum {\n        value: string;\n        constructor(v: string);\n        static START_START: string;\n        static START_FINISH: string;\n        static FINISH_START: string;\n        static FINISH_FINISH: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcShadingDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static JALOUSIE: string;\n        static SHUTTER: string;\n        static AWNING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSimplePropertyTemplateTypeEnum {\n        value: string;\n        constructor(v: string);\n        static P_SINGLEVALUE: string;\n        static P_ENUMERATEDVALUE: string;\n        static P_BOUNDEDVALUE: string;\n        static P_LISTVALUE: string;\n        static P_TABLEVALUE: string;\n        static P_REFERENCEVALUE: string;\n        static Q_LENGTH: string;\n        static Q_AREA: string;\n        static Q_VOLUME: string;\n        static Q_COUNT: string;\n        static Q_WEIGHT: string;\n        static Q_TIME: string;\n    }\n    class IfcSlabTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLOOR: string;\n        static ROOF: string;\n        static LANDING: string;\n        static BASESLAB: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSolarDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static SOLARCOLLECTOR: string;\n        static SOLARPANEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSpaceHeaterTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONVECTOR: string;\n        static RADIATOR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSpaceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static SPACE: string;\n        static PARKING: string;\n        static GFA: string;\n        static INTERNAL: string;\n        static EXTERNAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSpatialZoneTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONSTRUCTION: string;\n        static FIRESAFETY: string;\n        static LIGHTING: string;\n        static OCCUPANCY: string;\n        static SECURITY: string;\n        static THERMAL: string;\n        static TRANSPORT: string;\n        static VENTILATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStackTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BIRDCAGE: string;\n        static COWL: string;\n        static RAINWATERHOPPER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStairFlightTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT: string;\n        static WINDER: string;\n        static SPIRAL: string;\n        static CURVED: string;\n        static FREEFORM: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStairTypeEnum {\n        value: string;\n        constructor(v: string);\n        static STRAIGHT_RUN_STAIR: string;\n        static TWO_STRAIGHT_RUN_STAIR: string;\n        static QUARTER_WINDING_STAIR: string;\n        static QUARTER_TURN_STAIR: string;\n        static HALF_WINDING_STAIR: string;\n        static HALF_TURN_STAIR: string;\n        static TWO_QUARTER_WINDING_STAIR: string;\n        static TWO_QUARTER_TURN_STAIR: string;\n        static THREE_QUARTER_WINDING_STAIR: string;\n        static THREE_QUARTER_TURN_STAIR: string;\n        static SPIRAL_STAIR: string;\n        static DOUBLE_RETURN_STAIR: string;\n        static CURVED_RUN_STAIR: string;\n        static TWO_CURVED_RUN_STAIR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStateEnum {\n        value: string;\n        constructor(v: string);\n        static READWRITE: string;\n        static READONLY: string;\n        static LOCKED: string;\n        static READWRITELOCKED: string;\n        static READONLYLOCKED: string;\n    }\n    class IfcStructuralCurveActivityTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONST: string;\n        static LINEAR: string;\n        static POLYGONAL: string;\n        static EQUIDISTANT: string;\n        static SINUS: string;\n        static PARABOLA: string;\n        static DISCRETE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStructuralCurveMemberTypeEnum {\n        value: string;\n        constructor(v: string);\n        static RIGID_JOINED_MEMBER: string;\n        static PIN_JOINED_MEMBER: string;\n        static CABLE: string;\n        static TENSION_MEMBER: string;\n        static COMPRESSION_MEMBER: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStructuralSurfaceActivityTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONST: string;\n        static BILINEAR: string;\n        static DISCRETE: string;\n        static ISOCONTOUR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcStructuralSurfaceMemberTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BENDING_ELEMENT: string;\n        static MEMBRANE_ELEMENT: string;\n        static SHELL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSubContractResourceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PURCHASE: string;\n        static WORK: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSurfaceFeatureTypeEnum {\n        value: string;\n        constructor(v: string);\n        static MARK: string;\n        static TAG: string;\n        static TREATMENT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSurfaceSide {\n        value: string;\n        constructor(v: string);\n        static POSITIVE: string;\n        static NEGATIVE: string;\n        static BOTH: string;\n    }\n    class IfcSwitchingDeviceTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONTACTOR: string;\n        static DIMMERSWITCH: string;\n        static EMERGENCYSTOP: string;\n        static KEYPAD: string;\n        static MOMENTARYSWITCH: string;\n        static SELECTORSWITCH: string;\n        static STARTER: string;\n        static SWITCHDISCONNECTOR: string;\n        static TOGGLESWITCH: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcSystemFurnitureElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static PANEL: string;\n        static WORKSURFACE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTankTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BASIN: string;\n        static BREAKPRESSURE: string;\n        static EXPANSION: string;\n        static FEEDANDEXPANSION: string;\n        static PRESSUREVESSEL: string;\n        static STORAGE: string;\n        static VESSEL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTaskDurationEnum {\n        value: string;\n        constructor(v: string);\n        static ELAPSEDTIME: string;\n        static WORKTIME: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTaskTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ATTENDANCE: string;\n        static CONSTRUCTION: string;\n        static DEMOLITION: string;\n        static DISMANTLE: string;\n        static DISPOSAL: string;\n        static INSTALLATION: string;\n        static LOGISTIC: string;\n        static MAINTENANCE: string;\n        static MOVE: string;\n        static OPERATION: string;\n        static REMOVAL: string;\n        static RENOVATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTendonAnchorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COUPLER: string;\n        static FIXED_END: string;\n        static TENSIONING_END: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTendonTypeEnum {\n        value: string;\n        constructor(v: string);\n        static BAR: string;\n        static COATED: string;\n        static STRAND: string;\n        static WIRE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTextPath {\n        value: string;\n        constructor(v: string);\n        static LEFT: string;\n        static RIGHT: string;\n        static UP: string;\n        static DOWN: string;\n    }\n    class IfcTimeSeriesDataTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CONTINUOUS: string;\n        static DISCRETE: string;\n        static DISCRETEBINARY: string;\n        static PIECEWISEBINARY: string;\n        static PIECEWISECONSTANT: string;\n        static PIECEWISECONTINUOUS: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTransformerTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CURRENT: string;\n        static FREQUENCY: string;\n        static INVERTER: string;\n        static RECTIFIER: string;\n        static VOLTAGE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTransitionCode {\n        value: string;\n        constructor(v: string);\n        static DISCONTINUOUS: string;\n        static CONTINUOUS: string;\n        static CONTSAMEGRADIENT: string;\n        static CONTSAMEGRADIENTSAMECURVATURE: string;\n    }\n    class IfcTransportElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ELEVATOR: string;\n        static ESCALATOR: string;\n        static MOVINGWALKWAY: string;\n        static CRANEWAY: string;\n        static LIFTINGGEAR: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcTrimmingPreference {\n        value: string;\n        constructor(v: string);\n        static CARTESIAN: string;\n        static PARAMETER: string;\n        static UNSPECIFIED: string;\n    }\n    class IfcTubeBundleTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FINNED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcUnitEnum {\n        value: string;\n        constructor(v: string);\n        static ABSORBEDDOSEUNIT: string;\n        static AMOUNTOFSUBSTANCEUNIT: string;\n        static AREAUNIT: string;\n        static DOSEEQUIVALENTUNIT: string;\n        static ELECTRICCAPACITANCEUNIT: string;\n        static ELECTRICCHARGEUNIT: string;\n        static ELECTRICCONDUCTANCEUNIT: string;\n        static ELECTRICCURRENTUNIT: string;\n        static ELECTRICRESISTANCEUNIT: string;\n        static ELECTRICVOLTAGEUNIT: string;\n        static ENERGYUNIT: string;\n        static FORCEUNIT: string;\n        static FREQUENCYUNIT: string;\n        static ILLUMINANCEUNIT: string;\n        static INDUCTANCEUNIT: string;\n        static LENGTHUNIT: string;\n        static LUMINOUSFLUXUNIT: string;\n        static LUMINOUSINTENSITYUNIT: string;\n        static MAGNETICFLUXDENSITYUNIT: string;\n        static MAGNETICFLUXUNIT: string;\n        static MASSUNIT: string;\n        static PLANEANGLEUNIT: string;\n        static POWERUNIT: string;\n        static PRESSUREUNIT: string;\n        static RADIOACTIVITYUNIT: string;\n        static SOLIDANGLEUNIT: string;\n        static THERMODYNAMICTEMPERATUREUNIT: string;\n        static TIMEUNIT: string;\n        static VOLUMEUNIT: string;\n        static USERDEFINED: string;\n    }\n    class IfcUnitaryControlElementTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ALARMPANEL: string;\n        static CONTROLPANEL: string;\n        static GASDETECTIONPANEL: string;\n        static INDICATORPANEL: string;\n        static MIMICPANEL: string;\n        static HUMIDISTAT: string;\n        static THERMOSTAT: string;\n        static WEATHERSTATION: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcUnitaryEquipmentTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRHANDLER: string;\n        static AIRCONDITIONINGUNIT: string;\n        static DEHUMIDIFIER: string;\n        static SPLITSYSTEM: string;\n        static ROOFTOPUNIT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcValveTypeEnum {\n        value: string;\n        constructor(v: string);\n        static AIRRELEASE: string;\n        static ANTIVACUUM: string;\n        static CHANGEOVER: string;\n        static CHECK: string;\n        static COMMISSIONING: string;\n        static DIVERTING: string;\n        static DRAWOFFCOCK: string;\n        static DOUBLECHECK: string;\n        static DOUBLEREGULATING: string;\n        static FAUCET: string;\n        static FLUSHING: string;\n        static GASCOCK: string;\n        static GASTAP: string;\n        static ISOLATING: string;\n        static MIXING: string;\n        static PRESSUREREDUCING: string;\n        static PRESSURERELIEF: string;\n        static REGULATING: string;\n        static SAFETYCUTOFF: string;\n        static STEAMTRAP: string;\n        static STOPCOCK: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcVibrationIsolatorTypeEnum {\n        value: string;\n        constructor(v: string);\n        static COMPRESSION: string;\n        static SPRING: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcVoidingFeatureTypeEnum {\n        value: string;\n        constructor(v: string);\n        static CUTOUT: string;\n        static NOTCH: string;\n        static HOLE: string;\n        static MITER: string;\n        static CHAMFER: string;\n        static EDGE: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWallTypeEnum {\n        value: string;\n        constructor(v: string);\n        static MOVABLE: string;\n        static PARAPET: string;\n        static PARTITIONING: string;\n        static PLUMBINGWALL: string;\n        static SHEAR: string;\n        static SOLIDWALL: string;\n        static STANDARD: string;\n        static POLYGONAL: string;\n        static ELEMENTEDWALL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWasteTerminalTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FLOORTRAP: string;\n        static FLOORWASTE: string;\n        static GULLYSUMP: string;\n        static GULLYTRAP: string;\n        static ROOFDRAIN: string;\n        static WASTEDISPOSALUNIT: string;\n        static WASTETRAP: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowPanelOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SIDEHUNGRIGHTHAND: string;\n        static SIDEHUNGLEFTHAND: string;\n        static TILTANDTURNRIGHTHAND: string;\n        static TILTANDTURNLEFTHAND: string;\n        static TOPHUNG: string;\n        static BOTTOMHUNG: string;\n        static PIVOTHORIZONTAL: string;\n        static PIVOTVERTICAL: string;\n        static SLIDINGHORIZONTAL: string;\n        static SLIDINGVERTICAL: string;\n        static REMOVABLECASEMENT: string;\n        static FIXEDCASEMENT: string;\n        static OTHEROPERATION: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowPanelPositionEnum {\n        value: string;\n        constructor(v: string);\n        static LEFT: string;\n        static MIDDLE: string;\n        static RIGHT: string;\n        static BOTTOM: string;\n        static TOP: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowStyleConstructionEnum {\n        value: string;\n        constructor(v: string);\n        static ALUMINIUM: string;\n        static HIGH_GRADE_STEEL: string;\n        static STEEL: string;\n        static WOOD: string;\n        static ALUMINIUM_WOOD: string;\n        static PLASTIC: string;\n        static OTHER_CONSTRUCTION: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowStyleOperationEnum {\n        value: string;\n        constructor(v: string);\n        static SINGLE_PANEL: string;\n        static DOUBLE_PANEL_VERTICAL: string;\n        static DOUBLE_PANEL_HORIZONTAL: string;\n        static TRIPLE_PANEL_VERTICAL: string;\n        static TRIPLE_PANEL_BOTTOM: string;\n        static TRIPLE_PANEL_TOP: string;\n        static TRIPLE_PANEL_LEFT: string;\n        static TRIPLE_PANEL_RIGHT: string;\n        static TRIPLE_PANEL_HORIZONTAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowTypeEnum {\n        value: string;\n        constructor(v: string);\n        static WINDOW: string;\n        static SKYLIGHT: string;\n        static LIGHTDOME: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWindowTypePartitioningEnum {\n        value: string;\n        constructor(v: string);\n        static SINGLE_PANEL: string;\n        static DOUBLE_PANEL_VERTICAL: string;\n        static DOUBLE_PANEL_HORIZONTAL: string;\n        static TRIPLE_PANEL_VERTICAL: string;\n        static TRIPLE_PANEL_BOTTOM: string;\n        static TRIPLE_PANEL_TOP: string;\n        static TRIPLE_PANEL_LEFT: string;\n        static TRIPLE_PANEL_RIGHT: string;\n        static TRIPLE_PANEL_HORIZONTAL: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWorkCalendarTypeEnum {\n        value: string;\n        constructor(v: string);\n        static FIRSTSHIFT: string;\n        static SECONDSHIFT: string;\n        static THIRDSHIFT: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWorkPlanTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACTUAL: string;\n        static BASELINE: string;\n        static PLANNED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    class IfcWorkScheduleTypeEnum {\n        value: string;\n        constructor(v: string);\n        static ACTUAL: string;\n        static BASELINE: string;\n        static PLANNED: string;\n        static USERDEFINED: string;\n        static NOTDEFINED: string;\n    }\n    type IfcActorSelect = (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization);\n    type IfcAppliedValueSelect = (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | (Handle<IfcReference> | IfcReference) | (Handle<IfcValue> | IfcValue);\n    type IfcAxis2Placement = (Handle<IfcAxis2Placement2D> | IfcAxis2Placement2D) | (Handle<IfcAxis2Placement3D> | IfcAxis2Placement3D);\n    type IfcBendingParameterSelect = (Handle<IfcLengthMeasure> | IfcLengthMeasure) | (Handle<IfcPlaneAngleMeasure> | IfcPlaneAngleMeasure);\n    type IfcBooleanOperand = (Handle<IfcBooleanResult> | IfcBooleanResult) | (Handle<IfcCsgPrimitive3D> | IfcCsgPrimitive3D) | (Handle<IfcHalfSpaceSolid> | IfcHalfSpaceSolid) | (Handle<IfcSolidModel> | IfcSolidModel) | (Handle<IfcTessellatedFaceSet> | IfcTessellatedFaceSet);\n    type IfcClassificationReferenceSelect = (Handle<IfcClassification> | IfcClassification) | (Handle<IfcClassificationReference> | IfcClassificationReference);\n    type IfcClassificationSelect = (Handle<IfcClassification> | IfcClassification) | (Handle<IfcClassificationReference> | IfcClassificationReference);\n    type IfcColour = (Handle<IfcColourSpecification> | IfcColourSpecification) | (Handle<IfcPreDefinedColour> | IfcPreDefinedColour);\n    type IfcColourOrFactor = (Handle<IfcColourRgb> | IfcColourRgb) | (Handle<IfcNormalisedRatioMeasure> | IfcNormalisedRatioMeasure);\n    type IfcCoordinateReferenceSystemSelect = (Handle<IfcCoordinateReferenceSystem> | IfcCoordinateReferenceSystem) | (Handle<IfcGeometricRepresentationContext> | IfcGeometricRepresentationContext);\n    type IfcCsgSelect = (Handle<IfcBooleanResult> | IfcBooleanResult) | (Handle<IfcCsgPrimitive3D> | IfcCsgPrimitive3D);\n    type IfcCurveFontOrScaledCurveFontSelect = (Handle<IfcCurveStyleFontAndScaling> | IfcCurveStyleFontAndScaling) | (Handle<IfcCurveStyleFontSelect> | IfcCurveStyleFontSelect);\n    type IfcCurveOnSurface = (Handle<IfcCompositeCurveOnSurface> | IfcCompositeCurveOnSurface) | (Handle<IfcPcurve> | IfcPcurve) | (Handle<IfcSurfaceCurve> | IfcSurfaceCurve);\n    type IfcCurveOrEdgeCurve = (Handle<IfcBoundedCurve> | IfcBoundedCurve) | (Handle<IfcEdgeCurve> | IfcEdgeCurve);\n    type IfcCurveStyleFontSelect = (Handle<IfcCurveStyleFont> | IfcCurveStyleFont) | (Handle<IfcPreDefinedCurveFont> | IfcPreDefinedCurveFont);\n    type IfcDefinitionSelect = (Handle<IfcObjectDefinition> | IfcObjectDefinition) | (Handle<IfcPropertyDefinition> | IfcPropertyDefinition);\n    type IfcDerivedMeasureValue = (Handle<IfcAbsorbedDoseMeasure> | IfcAbsorbedDoseMeasure) | (Handle<IfcAccelerationMeasure> | IfcAccelerationMeasure) | (Handle<IfcAngularVelocityMeasure> | IfcAngularVelocityMeasure) | (Handle<IfcAreaDensityMeasure> | IfcAreaDensityMeasure) | (Handle<IfcCompoundPlaneAngleMeasure> | IfcCompoundPlaneAngleMeasure) | (Handle<IfcCurvatureMeasure> | IfcCurvatureMeasure) | (Handle<IfcDoseEquivalentMeasure> | IfcDoseEquivalentMeasure) | (Handle<IfcDynamicViscosityMeasure> | IfcDynamicViscosityMeasure) | (Handle<IfcElectricCapacitanceMeasure> | IfcElectricCapacitanceMeasure) | (Handle<IfcElectricChargeMeasure> | IfcElectricChargeMeasure) | (Handle<IfcElectricConductanceMeasure> | IfcElectricConductanceMeasure) | (Handle<IfcElectricResistanceMeasure> | IfcElectricResistanceMeasure) | (Handle<IfcElectricVoltageMeasure> | IfcElectricVoltageMeasure) | (Handle<IfcEnergyMeasure> | IfcEnergyMeasure) | (Handle<IfcForceMeasure> | IfcForceMeasure) | (Handle<IfcFrequencyMeasure> | IfcFrequencyMeasure) | (Handle<IfcHeatFluxDensityMeasure> | IfcHeatFluxDensityMeasure) | (Handle<IfcHeatingValueMeasure> | IfcHeatingValueMeasure) | (Handle<IfcIlluminanceMeasure> | IfcIlluminanceMeasure) | (Handle<IfcInductanceMeasure> | IfcInductanceMeasure) | (Handle<IfcIntegerCountRateMeasure> | IfcIntegerCountRateMeasure) | (Handle<IfcIonConcentrationMeasure> | IfcIonConcentrationMeasure) | (Handle<IfcIsothermalMoistureCapacityMeasure> | IfcIsothermalMoistureCapacityMeasure) | (Handle<IfcKinematicViscosityMeasure> | IfcKinematicViscosityMeasure) | (Handle<IfcLinearForceMeasure> | IfcLinearForceMeasure) | (Handle<IfcLinearMomentMeasure> | IfcLinearMomentMeasure) | (Handle<IfcLinearStiffnessMeasure> | IfcLinearStiffnessMeasure) | (Handle<IfcLinearVelocityMeasure> | IfcLinearVelocityMeasure) | (Handle<IfcLuminousFluxMeasure> | IfcLuminousFluxMeasure) | (Handle<IfcLuminousIntensityDistributionMeasure> | IfcLuminousIntensityDistributionMeasure) | (Handle<IfcMagneticFluxDensityMeasure> | IfcMagneticFluxDensityMeasure) | (Handle<IfcMagneticFluxMeasure> | IfcMagneticFluxMeasure) | (Handle<IfcMassDensityMeasure> | IfcMassDensityMeasure) | (Handle<IfcMassFlowRateMeasure> | IfcMassFlowRateMeasure) | (Handle<IfcMassPerLengthMeasure> | IfcMassPerLengthMeasure) | (Handle<IfcModulusOfElasticityMeasure> | IfcModulusOfElasticityMeasure) | (Handle<IfcModulusOfLinearSubgradeReactionMeasure> | IfcModulusOfLinearSubgradeReactionMeasure) | (Handle<IfcModulusOfRotationalSubgradeReactionMeasure> | IfcModulusOfRotationalSubgradeReactionMeasure) | (Handle<IfcModulusOfSubgradeReactionMeasure> | IfcModulusOfSubgradeReactionMeasure) | (Handle<IfcMoistureDiffusivityMeasure> | IfcMoistureDiffusivityMeasure) | (Handle<IfcMolecularWeightMeasure> | IfcMolecularWeightMeasure) | (Handle<IfcMomentOfInertiaMeasure> | IfcMomentOfInertiaMeasure) | (Handle<IfcMonetaryMeasure> | IfcMonetaryMeasure) | (Handle<IfcPHMeasure> | IfcPHMeasure) | (Handle<IfcPlanarForceMeasure> | IfcPlanarForceMeasure) | (Handle<IfcPowerMeasure> | IfcPowerMeasure) | (Handle<IfcPressureMeasure> | IfcPressureMeasure) | (Handle<IfcRadioActivityMeasure> | IfcRadioActivityMeasure) | (Handle<IfcRotationalFrequencyMeasure> | IfcRotationalFrequencyMeasure) | (Handle<IfcRotationalMassMeasure> | IfcRotationalMassMeasure) | (Handle<IfcRotationalStiffnessMeasure> | IfcRotationalStiffnessMeasure) | (Handle<IfcSectionModulusMeasure> | IfcSectionModulusMeasure) | (Handle<IfcSectionalAreaIntegralMeasure> | IfcSectionalAreaIntegralMeasure) | (Handle<IfcShearModulusMeasure> | IfcShearModulusMeasure) | (Handle<IfcSoundPowerLevelMeasure> | IfcSoundPowerLevelMeasure) | (Handle<IfcSoundPowerMeasure> | IfcSoundPowerMeasure) | (Handle<IfcSoundPressureLevelMeasure> | IfcSoundPressureLevelMeasure) | (Handle<IfcSoundPressureMeasure> | IfcSoundPressureMeasure) | (Handle<IfcSpecificHeatCapacityMeasure> | IfcSpecificHeatCapacityMeasure) | (Handle<IfcTemperatureGradientMeasure> | IfcTemperatureGradientMeasure) | (Handle<IfcTemperatureRateOfChangeMeasure> | IfcTemperatureRateOfChangeMeasure) | (Handle<IfcThermalAdmittanceMeasure> | IfcThermalAdmittanceMeasure) | (Handle<IfcThermalConductivityMeasure> | IfcThermalConductivityMeasure) | (Handle<IfcThermalExpansionCoefficientMeasure> | IfcThermalExpansionCoefficientMeasure) | (Handle<IfcThermalResistanceMeasure> | IfcThermalResistanceMeasure) | (Handle<IfcThermalTransmittanceMeasure> | IfcThermalTransmittanceMeasure) | (Handle<IfcTorqueMeasure> | IfcTorqueMeasure) | (Handle<IfcVaporPermeabilityMeasure> | IfcVaporPermeabilityMeasure) | (Handle<IfcVolumetricFlowRateMeasure> | IfcVolumetricFlowRateMeasure) | (Handle<IfcWarpingConstantMeasure> | IfcWarpingConstantMeasure) | (Handle<IfcWarpingMomentMeasure> | IfcWarpingMomentMeasure);\n    type IfcDocumentSelect = (Handle<IfcDocumentInformation> | IfcDocumentInformation) | (Handle<IfcDocumentReference> | IfcDocumentReference);\n    type IfcFillStyleSelect = (Handle<IfcColour> | IfcColour) | (Handle<IfcExternallyDefinedHatchStyle> | IfcExternallyDefinedHatchStyle) | (Handle<IfcFillAreaStyleHatching> | IfcFillAreaStyleHatching) | (Handle<IfcFillAreaStyleTiles> | IfcFillAreaStyleTiles);\n    type IfcGeometricSetSelect = (Handle<IfcCurve> | IfcCurve) | (Handle<IfcPoint> | IfcPoint) | (Handle<IfcSurface> | IfcSurface);\n    type IfcGridPlacementDirectionSelect = (Handle<IfcDirection> | IfcDirection) | (Handle<IfcVirtualGridIntersection> | IfcVirtualGridIntersection);\n    type IfcHatchLineDistanceSelect = (Handle<IfcPositiveLengthMeasure> | IfcPositiveLengthMeasure) | (Handle<IfcVector> | IfcVector);\n    type IfcLayeredItem = (Handle<IfcRepresentation> | IfcRepresentation) | (Handle<IfcRepresentationItem> | IfcRepresentationItem);\n    type IfcLibrarySelect = (Handle<IfcLibraryInformation> | IfcLibraryInformation) | (Handle<IfcLibraryReference> | IfcLibraryReference);\n    type IfcLightDistributionDataSourceSelect = (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcLightIntensityDistribution> | IfcLightIntensityDistribution);\n    type IfcMaterialSelect = (Handle<IfcMaterialDefinition> | IfcMaterialDefinition) | (Handle<IfcMaterialList> | IfcMaterialList) | (Handle<IfcMaterialUsageDefinition> | IfcMaterialUsageDefinition);\n    type IfcMeasureValue = (Handle<IfcAmountOfSubstanceMeasure> | IfcAmountOfSubstanceMeasure) | (Handle<IfcAreaMeasure> | IfcAreaMeasure) | (Handle<IfcComplexNumber> | IfcComplexNumber) | (Handle<IfcContextDependentMeasure> | IfcContextDependentMeasure) | (Handle<IfcCountMeasure> | IfcCountMeasure) | (Handle<IfcDescriptiveMeasure> | IfcDescriptiveMeasure) | (Handle<IfcElectricCurrentMeasure> | IfcElectricCurrentMeasure) | (Handle<IfcLengthMeasure> | IfcLengthMeasure) | (Handle<IfcLuminousIntensityMeasure> | IfcLuminousIntensityMeasure) | (Handle<IfcMassMeasure> | IfcMassMeasure) | (Handle<IfcNonNegativeLengthMeasure> | IfcNonNegativeLengthMeasure) | (Handle<IfcNormalisedRatioMeasure> | IfcNormalisedRatioMeasure) | (Handle<IfcNumericMeasure> | IfcNumericMeasure) | (Handle<IfcParameterValue> | IfcParameterValue) | (Handle<IfcPlaneAngleMeasure> | IfcPlaneAngleMeasure) | (Handle<IfcPositiveLengthMeasure> | IfcPositiveLengthMeasure) | (Handle<IfcPositivePlaneAngleMeasure> | IfcPositivePlaneAngleMeasure) | (Handle<IfcPositiveRatioMeasure> | IfcPositiveRatioMeasure) | (Handle<IfcRatioMeasure> | IfcRatioMeasure) | (Handle<IfcSolidAngleMeasure> | IfcSolidAngleMeasure) | (Handle<IfcThermodynamicTemperatureMeasure> | IfcThermodynamicTemperatureMeasure) | (Handle<IfcTimeMeasure> | IfcTimeMeasure) | (Handle<IfcVolumeMeasure> | IfcVolumeMeasure);\n    type IfcMetricValueSelect = (Handle<IfcAppliedValue> | IfcAppliedValue) | (Handle<IfcMeasureWithUnit> | IfcMeasureWithUnit) | (Handle<IfcReference> | IfcReference) | (Handle<IfcTable> | IfcTable) | (Handle<IfcTimeSeries> | IfcTimeSeries) | (Handle<IfcValue> | IfcValue);\n    type IfcModulusOfRotationalSubgradeReactionSelect = (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcModulusOfRotationalSubgradeReactionMeasure> | IfcModulusOfRotationalSubgradeReactionMeasure);\n    type IfcModulusOfSubgradeReactionSelect = (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcModulusOfSubgradeReactionMeasure> | IfcModulusOfSubgradeReactionMeasure);\n    type IfcModulusOfTranslationalSubgradeReactionSelect = (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcModulusOfLinearSubgradeReactionMeasure> | IfcModulusOfLinearSubgradeReactionMeasure);\n    type IfcObjectReferenceSelect = (Handle<IfcAddress> | IfcAddress) | (Handle<IfcAppliedValue> | IfcAppliedValue) | (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcMaterialDefinition> | IfcMaterialDefinition) | (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization) | (Handle<IfcTable> | IfcTable) | (Handle<IfcTimeSeries> | IfcTimeSeries);\n    type IfcPointOrVertexPoint = (Handle<IfcPoint> | IfcPoint) | (Handle<IfcVertexPoint> | IfcVertexPoint);\n    type IfcPresentationStyleSelect = (Handle<IfcCurveStyle> | IfcCurveStyle) | (Handle<IfcFillAreaStyle> | IfcFillAreaStyle) | (Handle<IfcNullStyle> | IfcNullStyle) | (Handle<IfcSurfaceStyle> | IfcSurfaceStyle) | (Handle<IfcTextStyle> | IfcTextStyle);\n    type IfcProcessSelect = (Handle<IfcProcess> | IfcProcess) | (Handle<IfcTypeProcess> | IfcTypeProcess);\n    type IfcProductRepresentationSelect = (Handle<IfcProductDefinitionShape> | IfcProductDefinitionShape) | (Handle<IfcRepresentationMap> | IfcRepresentationMap);\n    type IfcProductSelect = (Handle<IfcProduct> | IfcProduct) | (Handle<IfcTypeProduct> | IfcTypeProduct);\n    type IfcPropertySetDefinitionSelect = (Handle<IfcPropertySetDefinition> | IfcPropertySetDefinition) | (Handle<IfcPropertySetDefinitionSet> | IfcPropertySetDefinitionSet);\n    type IfcResourceObjectSelect = (Handle<IfcActorRole> | IfcActorRole) | (Handle<IfcAppliedValue> | IfcAppliedValue) | (Handle<IfcApproval> | IfcApproval) | (Handle<IfcConstraint> | IfcConstraint) | (Handle<IfcContextDependentUnit> | IfcContextDependentUnit) | (Handle<IfcConversionBasedUnit> | IfcConversionBasedUnit) | (Handle<IfcExternalInformation> | IfcExternalInformation) | (Handle<IfcExternalReference> | IfcExternalReference) | (Handle<IfcMaterialDefinition> | IfcMaterialDefinition) | (Handle<IfcOrganization> | IfcOrganization) | (Handle<IfcPerson> | IfcPerson) | (Handle<IfcPersonAndOrganization> | IfcPersonAndOrganization) | (Handle<IfcPhysicalQuantity> | IfcPhysicalQuantity) | (Handle<IfcProfileDef> | IfcProfileDef) | (Handle<IfcPropertyAbstraction> | IfcPropertyAbstraction) | (Handle<IfcTimeSeries> | IfcTimeSeries);\n    type IfcResourceSelect = (Handle<IfcResource> | IfcResource) | (Handle<IfcTypeResource> | IfcTypeResource);\n    type IfcRotationalStiffnessSelect = (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcRotationalStiffnessMeasure> | IfcRotationalStiffnessMeasure);\n    type IfcSegmentIndexSelect = (Handle<IfcArcIndex> | IfcArcIndex) | (Handle<IfcLineIndex> | IfcLineIndex);\n    type IfcShell = (Handle<IfcClosedShell> | IfcClosedShell) | (Handle<IfcOpenShell> | IfcOpenShell);\n    type IfcSimpleValue = (Handle<IfcBinary> | IfcBinary) | (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcDate> | IfcDate) | (Handle<IfcDateTime> | IfcDateTime) | (Handle<IfcDuration> | IfcDuration) | (Handle<IfcIdentifier> | IfcIdentifier) | (Handle<IfcInteger> | IfcInteger) | (Handle<IfcLabel> | IfcLabel) | (Handle<IfcLogical> | IfcLogical) | (Handle<IfcPositiveInteger> | IfcPositiveInteger) | (Handle<IfcReal> | IfcReal) | (Handle<IfcText> | IfcText) | (Handle<IfcTime> | IfcTime) | (Handle<IfcTimeStamp> | IfcTimeStamp);\n    type IfcSizeSelect = (Handle<IfcDescriptiveMeasure> | IfcDescriptiveMeasure) | (Handle<IfcLengthMeasure> | IfcLengthMeasure) | (Handle<IfcNormalisedRatioMeasure> | IfcNormalisedRatioMeasure) | (Handle<IfcPositiveLengthMeasure> | IfcPositiveLengthMeasure) | (Handle<IfcPositiveRatioMeasure> | IfcPositiveRatioMeasure) | (Handle<IfcRatioMeasure> | IfcRatioMeasure);\n    type IfcSolidOrShell = (Handle<IfcClosedShell> | IfcClosedShell) | (Handle<IfcSolidModel> | IfcSolidModel);\n    type IfcSpaceBoundarySelect = (Handle<IfcExternalSpatialElement> | IfcExternalSpatialElement) | (Handle<IfcSpace> | IfcSpace);\n    type IfcSpecularHighlightSelect = (Handle<IfcSpecularExponent> | IfcSpecularExponent) | (Handle<IfcSpecularRoughness> | IfcSpecularRoughness);\n    type IfcStructuralActivityAssignmentSelect = (Handle<IfcElement> | IfcElement) | (Handle<IfcStructuralItem> | IfcStructuralItem);\n    type IfcStyleAssignmentSelect = (Handle<IfcPresentationStyle> | IfcPresentationStyle) | (Handle<IfcPresentationStyleAssignment> | IfcPresentationStyleAssignment);\n    type IfcSurfaceOrFaceSurface = (Handle<IfcFaceBasedSurfaceModel> | IfcFaceBasedSurfaceModel) | (Handle<IfcFaceSurface> | IfcFaceSurface) | (Handle<IfcSurface> | IfcSurface);\n    type IfcSurfaceStyleElementSelect = (Handle<IfcExternallyDefinedSurfaceStyle> | IfcExternallyDefinedSurfaceStyle) | (Handle<IfcSurfaceStyleLighting> | IfcSurfaceStyleLighting) | (Handle<IfcSurfaceStyleRefraction> | IfcSurfaceStyleRefraction) | (Handle<IfcSurfaceStyleShading> | IfcSurfaceStyleShading) | (Handle<IfcSurfaceStyleWithTextures> | IfcSurfaceStyleWithTextures);\n    type IfcTextFontSelect = (Handle<IfcExternallyDefinedTextFont> | IfcExternallyDefinedTextFont) | (Handle<IfcPreDefinedTextFont> | IfcPreDefinedTextFont);\n    type IfcTimeOrRatioSelect = (Handle<IfcDuration> | IfcDuration) | (Handle<IfcRatioMeasure> | IfcRatioMeasure);\n    type IfcTranslationalStiffnessSelect = (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcLinearStiffnessMeasure> | IfcLinearStiffnessMeasure);\n    type IfcTrimmingSelect = (Handle<IfcCartesianPoint> | IfcCartesianPoint) | (Handle<IfcParameterValue> | IfcParameterValue);\n    type IfcUnit = (Handle<IfcDerivedUnit> | IfcDerivedUnit) | (Handle<IfcMonetaryUnit> | IfcMonetaryUnit) | (Handle<IfcNamedUnit> | IfcNamedUnit);\n    type IfcValue = (Handle<IfcDerivedMeasureValue> | IfcDerivedMeasureValue) | (Handle<IfcMeasureValue> | IfcMeasureValue) | (Handle<IfcSimpleValue> | IfcSimpleValue);\n    type IfcVectorOrDirection = (Handle<IfcDirection> | IfcDirection) | (Handle<IfcVector> | IfcVector);\n    type IfcWarpingStiffnessSelect = (Handle<IfcBoolean> | IfcBoolean) | (Handle<IfcWarpingMomentMeasure> | IfcWarpingMomentMeasure);\n    class IfcActorRole {\n        expressID: number;\n        type: number;\n        Role: (Handle<IFC4.IfcRoleEnum> | IFC4.IfcRoleEnum);\n        UserDefinedRole: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        HasExternalReference: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number, Role: (Handle<IFC4.IfcRoleEnum> | IFC4.IfcRoleEnum), UserDefinedRole: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActorRole;\n        ToTape(): any[];\n    }\n    class IfcAddress {\n        expressID: number;\n        type: number;\n        Purpose: (Handle<IFC4.IfcAddressTypeEnum> | IFC4.IfcAddressTypeEnum) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        UserDefinedPurpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        OfPerson: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson)[] | null;\n        OfOrganization: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization)[] | null;\n        constructor(expressID: number, type: number, Purpose: (Handle<IFC4.IfcAddressTypeEnum> | IFC4.IfcAddressTypeEnum) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, UserDefinedPurpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAddress;\n        ToTape(): any[];\n    }\n    class IfcApplication {\n        expressID: number;\n        type: number;\n        ApplicationDeveloper: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization);\n        Version: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        ApplicationFullName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        ApplicationIdentifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier);\n        constructor(expressID: number, type: number, ApplicationDeveloper: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization), Version: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), ApplicationFullName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), ApplicationIdentifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApplication;\n        ToTape(): any[];\n    }\n    class IfcAppliedValue {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        AppliedValue: (Handle<IFC4.IfcAppliedValueSelect> | IFC4.IfcAppliedValueSelect) | null;\n        UnitBasis: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit) | null;\n        ApplicableDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        FixedUntilDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Condition: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ArithmeticOperator: (Handle<IFC4.IfcArithmeticOperatorEnum> | IFC4.IfcArithmeticOperatorEnum) | null;\n        Components: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null;\n        HasExternalReference: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, AppliedValue: (Handle<IFC4.IfcAppliedValueSelect> | IFC4.IfcAppliedValueSelect) | null, UnitBasis: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit) | null, ApplicableDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, FixedUntilDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Condition: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ArithmeticOperator: (Handle<IFC4.IfcArithmeticOperatorEnum> | IFC4.IfcArithmeticOperatorEnum) | null, Components: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAppliedValue;\n        ToTape(): any[];\n    }\n    class IfcApproval {\n        expressID: number;\n        type: number;\n        Identifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        TimeOfApproval: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Level: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Qualifier: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        RequestingApproval: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        GivingApproval: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        HasExternalReferences: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        ApprovedObjects: (Handle<IFC4.IfcRelAssociatesApproval> | IFC4.IfcRelAssociatesApproval)[] | null;\n        ApprovedResources: (Handle<IFC4.IfcResourceApprovalRelationship> | IFC4.IfcResourceApprovalRelationship)[] | null;\n        IsRelatedWith: (Handle<IFC4.IfcApprovalRelationship> | IFC4.IfcApprovalRelationship)[] | null;\n        Relates: (Handle<IFC4.IfcApprovalRelationship> | IFC4.IfcApprovalRelationship)[] | null;\n        constructor(expressID: number, type: number, Identifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, TimeOfApproval: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Level: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Qualifier: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RequestingApproval: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, GivingApproval: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApproval;\n        ToTape(): any[];\n    }\n    class IfcBoundaryCondition {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryEdgeCondition extends IFC4.IfcBoundaryCondition {\n        TranslationalStiffnessByLengthX: (Handle<IFC4.IfcModulusOfTranslationalSubgradeReactionSelect> | IFC4.IfcModulusOfTranslationalSubgradeReactionSelect) | null;\n        TranslationalStiffnessByLengthY: (Handle<IFC4.IfcModulusOfTranslationalSubgradeReactionSelect> | IFC4.IfcModulusOfTranslationalSubgradeReactionSelect) | null;\n        TranslationalStiffnessByLengthZ: (Handle<IFC4.IfcModulusOfTranslationalSubgradeReactionSelect> | IFC4.IfcModulusOfTranslationalSubgradeReactionSelect) | null;\n        RotationalStiffnessByLengthX: (Handle<IFC4.IfcModulusOfRotationalSubgradeReactionSelect> | IFC4.IfcModulusOfRotationalSubgradeReactionSelect) | null;\n        RotationalStiffnessByLengthY: (Handle<IFC4.IfcModulusOfRotationalSubgradeReactionSelect> | IFC4.IfcModulusOfRotationalSubgradeReactionSelect) | null;\n        RotationalStiffnessByLengthZ: (Handle<IFC4.IfcModulusOfRotationalSubgradeReactionSelect> | IFC4.IfcModulusOfRotationalSubgradeReactionSelect) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TranslationalStiffnessByLengthX: (Handle<IFC4.IfcModulusOfTranslationalSubgradeReactionSelect> | IFC4.IfcModulusOfTranslationalSubgradeReactionSelect) | null, TranslationalStiffnessByLengthY: (Handle<IFC4.IfcModulusOfTranslationalSubgradeReactionSelect> | IFC4.IfcModulusOfTranslationalSubgradeReactionSelect) | null, TranslationalStiffnessByLengthZ: (Handle<IFC4.IfcModulusOfTranslationalSubgradeReactionSelect> | IFC4.IfcModulusOfTranslationalSubgradeReactionSelect) | null, RotationalStiffnessByLengthX: (Handle<IFC4.IfcModulusOfRotationalSubgradeReactionSelect> | IFC4.IfcModulusOfRotationalSubgradeReactionSelect) | null, RotationalStiffnessByLengthY: (Handle<IFC4.IfcModulusOfRotationalSubgradeReactionSelect> | IFC4.IfcModulusOfRotationalSubgradeReactionSelect) | null, RotationalStiffnessByLengthZ: (Handle<IFC4.IfcModulusOfRotationalSubgradeReactionSelect> | IFC4.IfcModulusOfRotationalSubgradeReactionSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryEdgeCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryFaceCondition extends IFC4.IfcBoundaryCondition {\n        TranslationalStiffnessByAreaX: (Handle<IFC4.IfcModulusOfSubgradeReactionSelect> | IFC4.IfcModulusOfSubgradeReactionSelect) | null;\n        TranslationalStiffnessByAreaY: (Handle<IFC4.IfcModulusOfSubgradeReactionSelect> | IFC4.IfcModulusOfSubgradeReactionSelect) | null;\n        TranslationalStiffnessByAreaZ: (Handle<IFC4.IfcModulusOfSubgradeReactionSelect> | IFC4.IfcModulusOfSubgradeReactionSelect) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TranslationalStiffnessByAreaX: (Handle<IFC4.IfcModulusOfSubgradeReactionSelect> | IFC4.IfcModulusOfSubgradeReactionSelect) | null, TranslationalStiffnessByAreaY: (Handle<IFC4.IfcModulusOfSubgradeReactionSelect> | IFC4.IfcModulusOfSubgradeReactionSelect) | null, TranslationalStiffnessByAreaZ: (Handle<IFC4.IfcModulusOfSubgradeReactionSelect> | IFC4.IfcModulusOfSubgradeReactionSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryFaceCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryNodeCondition extends IFC4.IfcBoundaryCondition {\n        TranslationalStiffnessX: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null;\n        TranslationalStiffnessY: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null;\n        TranslationalStiffnessZ: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null;\n        RotationalStiffnessX: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null;\n        RotationalStiffnessY: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null;\n        RotationalStiffnessZ: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TranslationalStiffnessX: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null, TranslationalStiffnessY: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null, TranslationalStiffnessZ: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null, RotationalStiffnessX: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null, RotationalStiffnessY: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null, RotationalStiffnessZ: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryNodeCondition;\n        ToTape(): any[];\n    }\n    class IfcBoundaryNodeConditionWarping extends IFC4.IfcBoundaryNodeCondition {\n        WarpingStiffness: (Handle<IFC4.IfcWarpingStiffnessSelect> | IFC4.IfcWarpingStiffnessSelect) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TranslationalStiffnessX: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null, TranslationalStiffnessY: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null, TranslationalStiffnessZ: (Handle<IFC4.IfcTranslationalStiffnessSelect> | IFC4.IfcTranslationalStiffnessSelect) | null, RotationalStiffnessX: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null, RotationalStiffnessY: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null, RotationalStiffnessZ: (Handle<IFC4.IfcRotationalStiffnessSelect> | IFC4.IfcRotationalStiffnessSelect) | null, WarpingStiffness: (Handle<IFC4.IfcWarpingStiffnessSelect> | IFC4.IfcWarpingStiffnessSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryNodeConditionWarping;\n        ToTape(): any[];\n    }\n    class IfcConnectionGeometry {\n        expressID: number;\n        type: number;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionPointGeometry extends IFC4.IfcConnectionGeometry {\n        PointOnRelatingElement: (Handle<IFC4.IfcPointOrVertexPoint> | IFC4.IfcPointOrVertexPoint);\n        PointOnRelatedElement: (Handle<IFC4.IfcPointOrVertexPoint> | IFC4.IfcPointOrVertexPoint) | null;\n        constructor(expressID: number, type: number, PointOnRelatingElement: (Handle<IFC4.IfcPointOrVertexPoint> | IFC4.IfcPointOrVertexPoint), PointOnRelatedElement: (Handle<IFC4.IfcPointOrVertexPoint> | IFC4.IfcPointOrVertexPoint) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionPointGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionSurfaceGeometry extends IFC4.IfcConnectionGeometry {\n        SurfaceOnRelatingElement: (Handle<IFC4.IfcSurfaceOrFaceSurface> | IFC4.IfcSurfaceOrFaceSurface);\n        SurfaceOnRelatedElement: (Handle<IFC4.IfcSurfaceOrFaceSurface> | IFC4.IfcSurfaceOrFaceSurface) | null;\n        constructor(expressID: number, type: number, SurfaceOnRelatingElement: (Handle<IFC4.IfcSurfaceOrFaceSurface> | IFC4.IfcSurfaceOrFaceSurface), SurfaceOnRelatedElement: (Handle<IFC4.IfcSurfaceOrFaceSurface> | IFC4.IfcSurfaceOrFaceSurface) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionSurfaceGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionVolumeGeometry extends IFC4.IfcConnectionGeometry {\n        VolumeOnRelatingElement: (Handle<IFC4.IfcSolidOrShell> | IFC4.IfcSolidOrShell);\n        VolumeOnRelatedElement: (Handle<IFC4.IfcSolidOrShell> | IFC4.IfcSolidOrShell) | null;\n        constructor(expressID: number, type: number, VolumeOnRelatingElement: (Handle<IFC4.IfcSolidOrShell> | IFC4.IfcSolidOrShell), VolumeOnRelatedElement: (Handle<IFC4.IfcSolidOrShell> | IFC4.IfcSolidOrShell) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionVolumeGeometry;\n        ToTape(): any[];\n    }\n    class IfcConstraint {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        ConstraintGrade: (Handle<IFC4.IfcConstraintEnum> | IFC4.IfcConstraintEnum);\n        ConstraintSource: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        CreatingActor: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        CreationTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        UserDefinedGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        HasExternalReferences: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        PropertiesForConstraint: (Handle<IFC4.IfcResourceConstraintRelationship> | IFC4.IfcResourceConstraintRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ConstraintGrade: (Handle<IFC4.IfcConstraintEnum> | IFC4.IfcConstraintEnum), ConstraintSource: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CreatingActor: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, CreationTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, UserDefinedGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstraint;\n        ToTape(): any[];\n    }\n    class IfcCoordinateOperation {\n        expressID: number;\n        type: number;\n        SourceCRS: (Handle<IFC4.IfcCoordinateReferenceSystemSelect> | IFC4.IfcCoordinateReferenceSystemSelect);\n        TargetCRS: (Handle<IFC4.IfcCoordinateReferenceSystem> | IFC4.IfcCoordinateReferenceSystem);\n        constructor(expressID: number, type: number, SourceCRS: (Handle<IFC4.IfcCoordinateReferenceSystemSelect> | IFC4.IfcCoordinateReferenceSystemSelect), TargetCRS: (Handle<IFC4.IfcCoordinateReferenceSystem> | IFC4.IfcCoordinateReferenceSystem));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoordinateOperation;\n        ToTape(): any[];\n    }\n    class IfcCoordinateReferenceSystem {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        GeodeticDatum: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        VerticalDatum: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        HasCoordinateOperation: (Handle<IFC4.IfcCoordinateOperation> | IFC4.IfcCoordinateOperation)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, GeodeticDatum: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, VerticalDatum: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoordinateReferenceSystem;\n        ToTape(): any[];\n    }\n    class IfcCostValue extends IFC4.IfcAppliedValue {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, AppliedValue: (Handle<IFC4.IfcAppliedValueSelect> | IFC4.IfcAppliedValueSelect) | null, UnitBasis: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit) | null, ApplicableDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, FixedUntilDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Condition: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ArithmeticOperator: (Handle<IFC4.IfcArithmeticOperatorEnum> | IFC4.IfcArithmeticOperatorEnum) | null, Components: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCostValue;\n        ToTape(): any[];\n    }\n    class IfcDerivedUnit {\n        expressID: number;\n        type: number;\n        Elements: (Handle<IFC4.IfcDerivedUnitElement> | IFC4.IfcDerivedUnitElement)[];\n        UnitType: (Handle<IFC4.IfcDerivedUnitEnum> | IFC4.IfcDerivedUnitEnum);\n        UserDefinedType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Elements: (Handle<IFC4.IfcDerivedUnitElement> | IFC4.IfcDerivedUnitElement)[], UnitType: (Handle<IFC4.IfcDerivedUnitEnum> | IFC4.IfcDerivedUnitEnum), UserDefinedType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedUnit;\n        ToTape(): any[];\n    }\n    class IfcDerivedUnitElement {\n        expressID: number;\n        type: number;\n        Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit);\n        Exponent: number;\n        constructor(expressID: number, type: number, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit), Exponent: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedUnitElement;\n        ToTape(): any[];\n    }\n    class IfcDimensionalExponents {\n        expressID: number;\n        type: number;\n        LengthExponent: number;\n        MassExponent: number;\n        TimeExponent: number;\n        ElectricCurrentExponent: number;\n        ThermodynamicTemperatureExponent: number;\n        AmountOfSubstanceExponent: number;\n        LuminousIntensityExponent: number;\n        constructor(expressID: number, type: number, LengthExponent: number, MassExponent: number, TimeExponent: number, ElectricCurrentExponent: number, ThermodynamicTemperatureExponent: number, AmountOfSubstanceExponent: number, LuminousIntensityExponent: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDimensionalExponents;\n        ToTape(): any[];\n    }\n    class IfcExternalInformation {\n        expressID: number;\n        type: number;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternalInformation;\n        ToTape(): any[];\n    }\n    class IfcExternalReference {\n        expressID: number;\n        type: number;\n        Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null;\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ExternalReferenceForResources: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternalReference;\n        ToTape(): any[];\n    }\n    class IfcExternallyDefinedHatchStyle extends IFC4.IfcExternalReference {\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedHatchStyle;\n        ToTape(): any[];\n    }\n    class IfcExternallyDefinedSurfaceStyle extends IFC4.IfcExternalReference {\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedSurfaceStyle;\n        ToTape(): any[];\n    }\n    class IfcExternallyDefinedTextFont extends IFC4.IfcExternalReference {\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternallyDefinedTextFont;\n        ToTape(): any[];\n    }\n    class IfcGridAxis {\n        expressID: number;\n        type: number;\n        AxisTag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        AxisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        PartOfW: (Handle<IFC4.IfcGrid> | IFC4.IfcGrid)[] | null;\n        PartOfV: (Handle<IFC4.IfcGrid> | IFC4.IfcGrid)[] | null;\n        PartOfU: (Handle<IFC4.IfcGrid> | IFC4.IfcGrid)[] | null;\n        HasIntersections: (Handle<IFC4.IfcVirtualGridIntersection> | IFC4.IfcVirtualGridIntersection)[] | null;\n        constructor(expressID: number, type: number, AxisTag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, AxisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGridAxis;\n        ToTape(): any[];\n    }\n    class IfcIrregularTimeSeriesValue {\n        expressID: number;\n        type: number;\n        TimeStamp: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime);\n        ListValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[];\n        constructor(expressID: number, type: number, TimeStamp: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), ListValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIrregularTimeSeriesValue;\n        ToTape(): any[];\n    }\n    class IfcLibraryInformation extends IFC4.IfcExternalInformation {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Version: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Publisher: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        VersionDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        LibraryInfoForObjects: (Handle<IFC4.IfcRelAssociatesLibrary> | IFC4.IfcRelAssociatesLibrary)[] | null;\n        HasLibraryReferences: (Handle<IFC4.IfcLibraryReference> | IFC4.IfcLibraryReference)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Version: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Publisher: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, VersionDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLibraryInformation;\n        ToTape(): any[];\n    }\n    class IfcLibraryReference extends IFC4.IfcExternalReference {\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Language: (Handle<IFC4.IfcLanguageId> | IFC4.IfcLanguageId) | null;\n        ReferencedLibrary: (Handle<IFC4.IfcLibraryInformation> | IFC4.IfcLibraryInformation) | null;\n        LibraryRefForObjects: (Handle<IFC4.IfcRelAssociatesLibrary> | IFC4.IfcRelAssociatesLibrary)[] | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Language: (Handle<IFC4.IfcLanguageId> | IFC4.IfcLanguageId) | null, ReferencedLibrary: (Handle<IFC4.IfcLibraryInformation> | IFC4.IfcLibraryInformation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLibraryReference;\n        ToTape(): any[];\n    }\n    class IfcLightDistributionData {\n        expressID: number;\n        type: number;\n        MainPlaneAngle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure);\n        SecondaryPlaneAngle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure)[];\n        LuminousIntensity: (Handle<IFC4.IfcLuminousIntensityDistributionMeasure> | IFC4.IfcLuminousIntensityDistributionMeasure)[];\n        constructor(expressID: number, type: number, MainPlaneAngle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure), SecondaryPlaneAngle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure)[], LuminousIntensity: (Handle<IFC4.IfcLuminousIntensityDistributionMeasure> | IFC4.IfcLuminousIntensityDistributionMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightDistributionData;\n        ToTape(): any[];\n    }\n    class IfcLightIntensityDistribution {\n        expressID: number;\n        type: number;\n        LightDistributionCurve: (Handle<IFC4.IfcLightDistributionCurveEnum> | IFC4.IfcLightDistributionCurveEnum);\n        DistributionData: (Handle<IFC4.IfcLightDistributionData> | IFC4.IfcLightDistributionData)[];\n        constructor(expressID: number, type: number, LightDistributionCurve: (Handle<IFC4.IfcLightDistributionCurveEnum> | IFC4.IfcLightDistributionCurveEnum), DistributionData: (Handle<IFC4.IfcLightDistributionData> | IFC4.IfcLightDistributionData)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightIntensityDistribution;\n        ToTape(): any[];\n    }\n    class IfcMapConversion extends IFC4.IfcCoordinateOperation {\n        Eastings: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        Northings: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        OrthogonalHeight: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        XAxisAbscissa: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        XAxisOrdinate: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        constructor(expressID: number, type: number, SourceCRS: (Handle<IFC4.IfcCoordinateReferenceSystemSelect> | IFC4.IfcCoordinateReferenceSystemSelect), TargetCRS: (Handle<IFC4.IfcCoordinateReferenceSystem> | IFC4.IfcCoordinateReferenceSystem), Eastings: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), Northings: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), OrthogonalHeight: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), XAxisAbscissa: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, XAxisOrdinate: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMapConversion;\n        ToTape(): any[];\n    }\n    class IfcMaterialClassificationRelationship {\n        expressID: number;\n        type: number;\n        MaterialClassifications: (Handle<IFC4.IfcClassificationSelect> | IFC4.IfcClassificationSelect)[];\n        ClassifiedMaterial: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial);\n        constructor(expressID: number, type: number, MaterialClassifications: (Handle<IFC4.IfcClassificationSelect> | IFC4.IfcClassificationSelect)[], ClassifiedMaterial: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialClassificationRelationship;\n        ToTape(): any[];\n    }\n    class IfcMaterialDefinition {\n        expressID: number;\n        type: number;\n        AssociatedTo: (Handle<IFC4.IfcRelAssociatesMaterial> | IFC4.IfcRelAssociatesMaterial)[] | null;\n        HasExternalReferences: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        HasProperties: (Handle<IFC4.IfcMaterialProperties> | IFC4.IfcMaterialProperties)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialDefinition;\n        ToTape(): any[];\n    }\n    class IfcMaterialLayer extends IFC4.IfcMaterialDefinition {\n        Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial) | null;\n        LayerThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure);\n        IsVentilated: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical) | null;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        ToMaterialLayerSet: (Handle<IFC4.IfcMaterialLayerSet> | IFC4.IfcMaterialLayerSet) | null;\n        constructor(expressID: number, type: number, Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial) | null, LayerThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure), IsVentilated: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayer;\n        ToTape(): any[];\n    }\n    class IfcMaterialLayerSet extends IFC4.IfcMaterialDefinition {\n        MaterialLayers: (Handle<IFC4.IfcMaterialLayer> | IFC4.IfcMaterialLayer)[];\n        LayerSetName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        constructor(expressID: number, type: number, MaterialLayers: (Handle<IFC4.IfcMaterialLayer> | IFC4.IfcMaterialLayer)[], LayerSetName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerSet;\n        ToTape(): any[];\n    }\n    class IfcMaterialLayerWithOffsets extends IFC4.IfcMaterialLayer {\n        OffsetDirection: (Handle<IFC4.IfcLayerSetDirectionEnum> | IFC4.IfcLayerSetDirectionEnum);\n        OffsetValues: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        constructor(expressID: number, type: number, Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial) | null, LayerThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure), IsVentilated: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, OffsetDirection: (Handle<IFC4.IfcLayerSetDirectionEnum> | IFC4.IfcLayerSetDirectionEnum), OffsetValues: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerWithOffsets;\n        ToTape(): any[];\n    }\n    class IfcMaterialList {\n        expressID: number;\n        type: number;\n        Materials: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial)[];\n        constructor(expressID: number, type: number, Materials: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialList;\n        ToTape(): any[];\n    }\n    class IfcMaterialProfile extends IFC4.IfcMaterialDefinition {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial) | null;\n        Profile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ToMaterialProfileSet: (Handle<IFC4.IfcMaterialProfileSet> | IFC4.IfcMaterialProfileSet) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial) | null, Profile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfile;\n        ToTape(): any[];\n    }\n    class IfcMaterialProfileSet extends IFC4.IfcMaterialDefinition {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        MaterialProfiles: (Handle<IFC4.IfcMaterialProfile> | IFC4.IfcMaterialProfile)[];\n        CompositeProfile: (Handle<IFC4.IfcCompositeProfileDef> | IFC4.IfcCompositeProfileDef) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, MaterialProfiles: (Handle<IFC4.IfcMaterialProfile> | IFC4.IfcMaterialProfile)[], CompositeProfile: (Handle<IFC4.IfcCompositeProfileDef> | IFC4.IfcCompositeProfileDef) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileSet;\n        ToTape(): any[];\n    }\n    class IfcMaterialProfileWithOffsets extends IFC4.IfcMaterialProfile {\n        OffsetValues: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial) | null, Profile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, OffsetValues: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileWithOffsets;\n        ToTape(): any[];\n    }\n    class IfcMaterialUsageDefinition {\n        expressID: number;\n        type: number;\n        AssociatedTo: (Handle<IFC4.IfcRelAssociatesMaterial> | IFC4.IfcRelAssociatesMaterial)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialUsageDefinition;\n        ToTape(): any[];\n    }\n    class IfcMeasureWithUnit {\n        expressID: number;\n        type: number;\n        ValueComponent: (Handle<IFC4.IfcValue> | IFC4.IfcValue);\n        UnitComponent: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit);\n        constructor(expressID: number, type: number, ValueComponent: (Handle<IFC4.IfcValue> | IFC4.IfcValue), UnitComponent: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMeasureWithUnit;\n        ToTape(): any[];\n    }\n    class IfcMetric extends IFC4.IfcConstraint {\n        Benchmark: (Handle<IFC4.IfcBenchmarkEnum> | IFC4.IfcBenchmarkEnum);\n        ValueSource: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        DataValue: (Handle<IFC4.IfcMetricValueSelect> | IFC4.IfcMetricValueSelect) | null;\n        ReferencePath: (Handle<IFC4.IfcReference> | IFC4.IfcReference) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ConstraintGrade: (Handle<IFC4.IfcConstraintEnum> | IFC4.IfcConstraintEnum), ConstraintSource: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CreatingActor: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, CreationTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, UserDefinedGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Benchmark: (Handle<IFC4.IfcBenchmarkEnum> | IFC4.IfcBenchmarkEnum), ValueSource: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataValue: (Handle<IFC4.IfcMetricValueSelect> | IFC4.IfcMetricValueSelect) | null, ReferencePath: (Handle<IFC4.IfcReference> | IFC4.IfcReference) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMetric;\n        ToTape(): any[];\n    }\n    class IfcMonetaryUnit {\n        expressID: number;\n        type: number;\n        Currency: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        constructor(expressID: number, type: number, Currency: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMonetaryUnit;\n        ToTape(): any[];\n    }\n    class IfcNamedUnit {\n        expressID: number;\n        type: number;\n        Dimensions: (Handle<IFC4.IfcDimensionalExponents> | IFC4.IfcDimensionalExponents);\n        UnitType: (Handle<IFC4.IfcUnitEnum> | IFC4.IfcUnitEnum);\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC4.IfcDimensionalExponents> | IFC4.IfcDimensionalExponents), UnitType: (Handle<IFC4.IfcUnitEnum> | IFC4.IfcUnitEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcNamedUnit;\n        ToTape(): any[];\n    }\n    class IfcObjectPlacement {\n        expressID: number;\n        type: number;\n        PlacesObject: (Handle<IFC4.IfcProduct> | IFC4.IfcProduct)[] | null;\n        ReferencedByPlacements: (Handle<IFC4.IfcLocalPlacement> | IFC4.IfcLocalPlacement)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObjectPlacement;\n        ToTape(): any[];\n    }\n    class IfcObjective extends IFC4.IfcConstraint {\n        BenchmarkValues: (Handle<IFC4.IfcConstraint> | IFC4.IfcConstraint)[] | null;\n        LogicalAggregator: (Handle<IFC4.IfcLogicalOperatorEnum> | IFC4.IfcLogicalOperatorEnum) | null;\n        ObjectiveQualifier: (Handle<IFC4.IfcObjectiveEnum> | IFC4.IfcObjectiveEnum);\n        UserDefinedQualifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ConstraintGrade: (Handle<IFC4.IfcConstraintEnum> | IFC4.IfcConstraintEnum), ConstraintSource: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CreatingActor: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, CreationTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, UserDefinedGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BenchmarkValues: (Handle<IFC4.IfcConstraint> | IFC4.IfcConstraint)[] | null, LogicalAggregator: (Handle<IFC4.IfcLogicalOperatorEnum> | IFC4.IfcLogicalOperatorEnum) | null, ObjectiveQualifier: (Handle<IFC4.IfcObjectiveEnum> | IFC4.IfcObjectiveEnum), UserDefinedQualifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObjective;\n        ToTape(): any[];\n    }\n    class IfcOrganization {\n        expressID: number;\n        type: number;\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Roles: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole)[] | null;\n        Addresses: (Handle<IFC4.IfcAddress> | IFC4.IfcAddress)[] | null;\n        IsRelatedBy: (Handle<IFC4.IfcOrganizationRelationship> | IFC4.IfcOrganizationRelationship)[] | null;\n        Relates: (Handle<IFC4.IfcOrganizationRelationship> | IFC4.IfcOrganizationRelationship)[] | null;\n        Engages: (Handle<IFC4.IfcPersonAndOrganization> | IFC4.IfcPersonAndOrganization)[] | null;\n        constructor(expressID: number, type: number, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Roles: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole)[] | null, Addresses: (Handle<IFC4.IfcAddress> | IFC4.IfcAddress)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOrganization;\n        ToTape(): any[];\n    }\n    class IfcOwnerHistory {\n        expressID: number;\n        type: number;\n        OwningUser: (Handle<IFC4.IfcPersonAndOrganization> | IFC4.IfcPersonAndOrganization);\n        OwningApplication: (Handle<IFC4.IfcApplication> | IFC4.IfcApplication);\n        State: (Handle<IFC4.IfcStateEnum> | IFC4.IfcStateEnum) | null;\n        ChangeAction: (Handle<IFC4.IfcChangeActionEnum> | IFC4.IfcChangeActionEnum) | null;\n        LastModifiedDate: (Handle<IFC4.IfcTimeStamp> | IFC4.IfcTimeStamp) | null;\n        LastModifyingUser: (Handle<IFC4.IfcPersonAndOrganization> | IFC4.IfcPersonAndOrganization) | null;\n        LastModifyingApplication: (Handle<IFC4.IfcApplication> | IFC4.IfcApplication) | null;\n        CreationDate: (Handle<IFC4.IfcTimeStamp> | IFC4.IfcTimeStamp);\n        constructor(expressID: number, type: number, OwningUser: (Handle<IFC4.IfcPersonAndOrganization> | IFC4.IfcPersonAndOrganization), OwningApplication: (Handle<IFC4.IfcApplication> | IFC4.IfcApplication), State: (Handle<IFC4.IfcStateEnum> | IFC4.IfcStateEnum) | null, ChangeAction: (Handle<IFC4.IfcChangeActionEnum> | IFC4.IfcChangeActionEnum) | null, LastModifiedDate: (Handle<IFC4.IfcTimeStamp> | IFC4.IfcTimeStamp) | null, LastModifyingUser: (Handle<IFC4.IfcPersonAndOrganization> | IFC4.IfcPersonAndOrganization) | null, LastModifyingApplication: (Handle<IFC4.IfcApplication> | IFC4.IfcApplication) | null, CreationDate: (Handle<IFC4.IfcTimeStamp> | IFC4.IfcTimeStamp));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOwnerHistory;\n        ToTape(): any[];\n    }\n    class IfcPerson {\n        expressID: number;\n        type: number;\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        FamilyName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        GivenName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        MiddleNames: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null;\n        PrefixTitles: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null;\n        SuffixTitles: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null;\n        Roles: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole)[] | null;\n        Addresses: (Handle<IFC4.IfcAddress> | IFC4.IfcAddress)[] | null;\n        EngagedIn: (Handle<IFC4.IfcPersonAndOrganization> | IFC4.IfcPersonAndOrganization)[] | null;\n        constructor(expressID: number, type: number, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, FamilyName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, GivenName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, MiddleNames: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null, PrefixTitles: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null, SuffixTitles: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null, Roles: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole)[] | null, Addresses: (Handle<IFC4.IfcAddress> | IFC4.IfcAddress)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPerson;\n        ToTape(): any[];\n    }\n    class IfcPersonAndOrganization {\n        expressID: number;\n        type: number;\n        ThePerson: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson);\n        TheOrganization: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization);\n        Roles: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole)[] | null;\n        constructor(expressID: number, type: number, ThePerson: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson), TheOrganization: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization), Roles: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPersonAndOrganization;\n        ToTape(): any[];\n    }\n    class IfcPhysicalQuantity {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        HasExternalReferences: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        PartOfComplex: (Handle<IFC4.IfcPhysicalComplexQuantity> | IFC4.IfcPhysicalComplexQuantity)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalQuantity;\n        ToTape(): any[];\n    }\n    class IfcPhysicalSimpleQuantity extends IFC4.IfcPhysicalQuantity {\n        Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalSimpleQuantity;\n        ToTape(): any[];\n    }\n    class IfcPostalAddress extends IFC4.IfcAddress {\n        InternalLocation: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        AddressLines: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null;\n        PostalBox: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Town: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Region: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        PostalCode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Country: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Purpose: (Handle<IFC4.IfcAddressTypeEnum> | IFC4.IfcAddressTypeEnum) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, UserDefinedPurpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, InternalLocation: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, AddressLines: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null, PostalBox: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Town: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Region: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PostalCode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Country: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPostalAddress;\n        ToTape(): any[];\n    }\n    class IfcPresentationItem {\n        expressID: number;\n        type: number;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationItem;\n        ToTape(): any[];\n    }\n    class IfcPresentationLayerAssignment {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        AssignedItems: (Handle<IFC4.IfcLayeredItem> | IFC4.IfcLayeredItem)[];\n        Identifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, AssignedItems: (Handle<IFC4.IfcLayeredItem> | IFC4.IfcLayeredItem)[], Identifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationLayerAssignment;\n        ToTape(): any[];\n    }\n    class IfcPresentationLayerWithStyle extends IFC4.IfcPresentationLayerAssignment {\n        LayerOn: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        LayerFrozen: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        LayerBlocked: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        LayerStyles: (Handle<IFC4.IfcPresentationStyle> | IFC4.IfcPresentationStyle)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, AssignedItems: (Handle<IFC4.IfcLayeredItem> | IFC4.IfcLayeredItem)[], Identifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LayerOn: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), LayerFrozen: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), LayerBlocked: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), LayerStyles: (Handle<IFC4.IfcPresentationStyle> | IFC4.IfcPresentationStyle)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationLayerWithStyle;\n        ToTape(): any[];\n    }\n    class IfcPresentationStyle {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationStyle;\n        ToTape(): any[];\n    }\n    class IfcPresentationStyleAssignment {\n        expressID: number;\n        type: number;\n        Styles: (Handle<IFC4.IfcPresentationStyleSelect> | IFC4.IfcPresentationStyleSelect)[];\n        constructor(expressID: number, type: number, Styles: (Handle<IFC4.IfcPresentationStyleSelect> | IFC4.IfcPresentationStyleSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPresentationStyleAssignment;\n        ToTape(): any[];\n    }\n    class IfcProductRepresentation {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Representations: (Handle<IFC4.IfcRepresentation> | IFC4.IfcRepresentation)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Representations: (Handle<IFC4.IfcRepresentation> | IFC4.IfcRepresentation)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProductRepresentation;\n        ToTape(): any[];\n    }\n    class IfcProfileDef {\n        expressID: number;\n        type: number;\n        ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum);\n        ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        HasExternalReference: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        HasProperties: (Handle<IFC4.IfcProfileProperties> | IFC4.IfcProfileProperties)[] | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProfileDef;\n        ToTape(): any[];\n    }\n    class IfcProjectedCRS extends IFC4.IfcCoordinateReferenceSystem {\n        MapProjection: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        MapZone: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        MapUnit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, GeodeticDatum: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, VerticalDatum: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, MapProjection: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, MapZone: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, MapUnit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectedCRS;\n        ToTape(): any[];\n    }\n    class IfcPropertyAbstraction {\n        expressID: number;\n        type: number;\n        HasExternalReferences: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyAbstraction;\n        ToTape(): any[];\n    }\n    class IfcPropertyEnumeration extends IFC4.IfcPropertyAbstraction {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        EnumerationValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[];\n        Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), EnumerationValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[], Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyEnumeration;\n        ToTape(): any[];\n    }\n    class IfcQuantityArea extends IFC4.IfcPhysicalSimpleQuantity {\n        AreaValue: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure);\n        Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null, AreaValue: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure), Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityArea;\n        ToTape(): any[];\n    }\n    class IfcQuantityCount extends IFC4.IfcPhysicalSimpleQuantity {\n        CountValue: (Handle<IFC4.IfcCountMeasure> | IFC4.IfcCountMeasure);\n        Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null, CountValue: (Handle<IFC4.IfcCountMeasure> | IFC4.IfcCountMeasure), Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityCount;\n        ToTape(): any[];\n    }\n    class IfcQuantityLength extends IFC4.IfcPhysicalSimpleQuantity {\n        LengthValue: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null, LengthValue: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityLength;\n        ToTape(): any[];\n    }\n    class IfcQuantityTime extends IFC4.IfcPhysicalSimpleQuantity {\n        TimeValue: (Handle<IFC4.IfcTimeMeasure> | IFC4.IfcTimeMeasure);\n        Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null, TimeValue: (Handle<IFC4.IfcTimeMeasure> | IFC4.IfcTimeMeasure), Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityTime;\n        ToTape(): any[];\n    }\n    class IfcQuantityVolume extends IFC4.IfcPhysicalSimpleQuantity {\n        VolumeValue: (Handle<IFC4.IfcVolumeMeasure> | IFC4.IfcVolumeMeasure);\n        Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null, VolumeValue: (Handle<IFC4.IfcVolumeMeasure> | IFC4.IfcVolumeMeasure), Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityVolume;\n        ToTape(): any[];\n    }\n    class IfcQuantityWeight extends IFC4.IfcPhysicalSimpleQuantity {\n        WeightValue: (Handle<IFC4.IfcMassMeasure> | IFC4.IfcMassMeasure);\n        Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcNamedUnit> | IFC4.IfcNamedUnit) | null, WeightValue: (Handle<IFC4.IfcMassMeasure> | IFC4.IfcMassMeasure), Formula: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantityWeight;\n        ToTape(): any[];\n    }\n    class IfcRecurrencePattern {\n        expressID: number;\n        type: number;\n        RecurrenceType: (Handle<IFC4.IfcRecurrenceTypeEnum> | IFC4.IfcRecurrenceTypeEnum);\n        DayComponent: (Handle<IFC4.IfcDayInMonthNumber> | IFC4.IfcDayInMonthNumber)[] | null;\n        WeekdayComponent: (Handle<IFC4.IfcDayInWeekNumber> | IFC4.IfcDayInWeekNumber)[] | null;\n        MonthComponent: (Handle<IFC4.IfcMonthInYearNumber> | IFC4.IfcMonthInYearNumber)[] | null;\n        Position: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        Interval: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        Occurrences: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        TimePeriods: (Handle<IFC4.IfcTimePeriod> | IFC4.IfcTimePeriod)[] | null;\n        constructor(expressID: number, type: number, RecurrenceType: (Handle<IFC4.IfcRecurrenceTypeEnum> | IFC4.IfcRecurrenceTypeEnum), DayComponent: (Handle<IFC4.IfcDayInMonthNumber> | IFC4.IfcDayInMonthNumber)[] | null, WeekdayComponent: (Handle<IFC4.IfcDayInWeekNumber> | IFC4.IfcDayInWeekNumber)[] | null, MonthComponent: (Handle<IFC4.IfcMonthInYearNumber> | IFC4.IfcMonthInYearNumber)[] | null, Position: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, Interval: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, Occurrences: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, TimePeriods: (Handle<IFC4.IfcTimePeriod> | IFC4.IfcTimePeriod)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRecurrencePattern;\n        ToTape(): any[];\n    }\n    class IfcReference {\n        expressID: number;\n        type: number;\n        TypeIdentifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        AttributeIdentifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        InstanceName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ListPositions: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[] | null;\n        InnerReference: (Handle<IFC4.IfcReference> | IFC4.IfcReference) | null;\n        constructor(expressID: number, type: number, TypeIdentifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, AttributeIdentifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, InstanceName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ListPositions: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[] | null, InnerReference: (Handle<IFC4.IfcReference> | IFC4.IfcReference) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReference;\n        ToTape(): any[];\n    }\n    class IfcRepresentation {\n        expressID: number;\n        type: number;\n        ContextOfItems: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext);\n        RepresentationIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        RepresentationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Items: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem)[];\n        RepresentationMap: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null;\n        LayerAssignments: (Handle<IFC4.IfcPresentationLayerAssignment> | IFC4.IfcPresentationLayerAssignment)[] | null;\n        OfProductRepresentation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation)[] | null;\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Items: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentation;\n        ToTape(): any[];\n    }\n    class IfcRepresentationContext {\n        expressID: number;\n        type: number;\n        ContextIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ContextType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        RepresentationsInContext: (Handle<IFC4.IfcRepresentation> | IFC4.IfcRepresentation)[] | null;\n        constructor(expressID: number, type: number, ContextIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ContextType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationContext;\n        ToTape(): any[];\n    }\n    class IfcRepresentationItem {\n        expressID: number;\n        type: number;\n        LayerAssignment: (Handle<IFC4.IfcPresentationLayerAssignment> | IFC4.IfcPresentationLayerAssignment)[] | null;\n        StyledByItem: (Handle<IFC4.IfcStyledItem> | IFC4.IfcStyledItem)[] | null;\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationItem;\n        ToTape(): any[];\n    }\n    class IfcRepresentationMap {\n        expressID: number;\n        type: number;\n        MappingOrigin: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement);\n        MappedRepresentation: (Handle<IFC4.IfcRepresentation> | IFC4.IfcRepresentation);\n        HasShapeAspects: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect)[] | null;\n        MapUsage: (Handle<IFC4.IfcMappedItem> | IFC4.IfcMappedItem)[] | null;\n        constructor(expressID: number, type: number, MappingOrigin: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement), MappedRepresentation: (Handle<IFC4.IfcRepresentation> | IFC4.IfcRepresentation));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRepresentationMap;\n        ToTape(): any[];\n    }\n    class IfcResourceLevelRelationship {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcResourceLevelRelationship;\n        ToTape(): any[];\n    }\n    class IfcRoot {\n        expressID: number;\n        type: number;\n        GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId);\n        OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoot;\n        ToTape(): any[];\n    }\n    class IfcSIUnit extends IFC4.IfcNamedUnit {\n        Prefix: (Handle<IFC4.IfcSIPrefix> | IFC4.IfcSIPrefix) | null;\n        Name: (Handle<IFC4.IfcSIUnitName> | IFC4.IfcSIUnitName);\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC4.IfcDimensionalExponents> | IFC4.IfcDimensionalExponents), UnitType: (Handle<IFC4.IfcUnitEnum> | IFC4.IfcUnitEnum), Prefix: (Handle<IFC4.IfcSIPrefix> | IFC4.IfcSIPrefix) | null, Name: (Handle<IFC4.IfcSIUnitName> | IFC4.IfcSIUnitName));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSIUnit;\n        ToTape(): any[];\n    }\n    class IfcSchedulingTime {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null;\n        UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null, UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSchedulingTime;\n        ToTape(): any[];\n    }\n    class IfcShapeAspect {\n        expressID: number;\n        type: number;\n        ShapeRepresentations: (Handle<IFC4.IfcShapeModel> | IFC4.IfcShapeModel)[];\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        ProductDefinitional: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        PartOfProductDefinitionShape: (Handle<IFC4.IfcProductRepresentationSelect> | IFC4.IfcProductRepresentationSelect) | null;\n        constructor(expressID: number, type: number, ShapeRepresentations: (Handle<IFC4.IfcShapeModel> | IFC4.IfcShapeModel)[], Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ProductDefinitional: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), PartOfProductDefinitionShape: (Handle<IFC4.IfcProductRepresentationSelect> | IFC4.IfcProductRepresentationSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShapeAspect;\n        ToTape(): any[];\n    }\n    class IfcShapeModel extends IFC4.IfcRepresentation {\n        OfShapeAspect: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect)[] | null;\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Items: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShapeModel;\n        ToTape(): any[];\n    }\n    class IfcShapeRepresentation extends IFC4.IfcShapeModel {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Items: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShapeRepresentation;\n        ToTape(): any[];\n    }\n    class IfcStructuralConnectionCondition {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralConnectionCondition;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoad {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoad;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadConfiguration extends IFC4.IfcStructuralLoad {\n        Values: (Handle<IFC4.IfcStructuralLoadOrResult> | IFC4.IfcStructuralLoadOrResult)[];\n        Locations: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Values: (Handle<IFC4.IfcStructuralLoadOrResult> | IFC4.IfcStructuralLoadOrResult)[], Locations: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadConfiguration;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadOrResult extends IFC4.IfcStructuralLoad {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadOrResult;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadStatic extends IFC4.IfcStructuralLoadOrResult {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadStatic;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadTemperature extends IFC4.IfcStructuralLoadStatic {\n        DeltaTConstant: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure) | null;\n        DeltaTY: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure) | null;\n        DeltaTZ: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DeltaTConstant: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure) | null, DeltaTY: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure) | null, DeltaTZ: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadTemperature;\n        ToTape(): any[];\n    }\n    class IfcStyleModel extends IFC4.IfcRepresentation {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Items: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStyleModel;\n        ToTape(): any[];\n    }\n    class IfcStyledItem extends IFC4.IfcRepresentationItem {\n        Item: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem) | null;\n        Styles: (Handle<IFC4.IfcStyleAssignmentSelect> | IFC4.IfcStyleAssignmentSelect)[];\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Item: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem) | null, Styles: (Handle<IFC4.IfcStyleAssignmentSelect> | IFC4.IfcStyleAssignmentSelect)[], Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStyledItem;\n        ToTape(): any[];\n    }\n    class IfcStyledRepresentation extends IFC4.IfcStyleModel {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Items: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStyledRepresentation;\n        ToTape(): any[];\n    }\n    class IfcSurfaceReinforcementArea extends IFC4.IfcStructuralLoadOrResult {\n        SurfaceReinforcement1: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[] | null;\n        SurfaceReinforcement2: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[] | null;\n        ShearReinforcement: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, SurfaceReinforcement1: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[] | null, SurfaceReinforcement2: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[] | null, ShearReinforcement: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceReinforcementArea;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyle extends IFC4.IfcPresentationStyle {\n        Side: (Handle<IFC4.IfcSurfaceSide> | IFC4.IfcSurfaceSide);\n        Styles: (Handle<IFC4.IfcSurfaceStyleElementSelect> | IFC4.IfcSurfaceStyleElementSelect)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Side: (Handle<IFC4.IfcSurfaceSide> | IFC4.IfcSurfaceSide), Styles: (Handle<IFC4.IfcSurfaceStyleElementSelect> | IFC4.IfcSurfaceStyleElementSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyle;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleLighting extends IFC4.IfcPresentationItem {\n        DiffuseTransmissionColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb);\n        DiffuseReflectionColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb);\n        TransmissionColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb);\n        ReflectanceColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb);\n        constructor(expressID: number, type: number, DiffuseTransmissionColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), DiffuseReflectionColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), TransmissionColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), ReflectanceColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleLighting;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleRefraction extends IFC4.IfcPresentationItem {\n        RefractionIndex: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        DispersionFactor: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        constructor(expressID: number, type: number, RefractionIndex: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, DispersionFactor: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleRefraction;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleShading extends IFC4.IfcPresentationItem {\n        SurfaceColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb);\n        Transparency: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        constructor(expressID: number, type: number, SurfaceColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), Transparency: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleShading;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleWithTextures extends IFC4.IfcPresentationItem {\n        Textures: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[];\n        constructor(expressID: number, type: number, Textures: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleWithTextures;\n        ToTape(): any[];\n    }\n    class IfcSurfaceTexture extends IFC4.IfcPresentationItem {\n        RepeatS: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        RepeatT: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        Mode: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        TextureTransform: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D) | null;\n        Parameter: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier)[] | null;\n        IsMappedBy: (Handle<IFC4.IfcTextureCoordinate> | IFC4.IfcTextureCoordinate)[] | null;\n        UsedInStyles: (Handle<IFC4.IfcSurfaceStyleWithTextures> | IFC4.IfcSurfaceStyleWithTextures)[] | null;\n        constructor(expressID: number, type: number, RepeatS: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), RepeatT: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Mode: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, TextureTransform: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D) | null, Parameter: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceTexture;\n        ToTape(): any[];\n    }\n    class IfcTable {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Rows: (Handle<IFC4.IfcTableRow> | IFC4.IfcTableRow)[] | null;\n        Columns: (Handle<IFC4.IfcTableColumn> | IFC4.IfcTableColumn)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Rows: (Handle<IFC4.IfcTableRow> | IFC4.IfcTableRow)[] | null, Columns: (Handle<IFC4.IfcTableColumn> | IFC4.IfcTableColumn)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTable;\n        ToTape(): any[];\n    }\n    class IfcTableColumn {\n        expressID: number;\n        type: number;\n        Identifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        ReferencePath: (Handle<IFC4.IfcReference> | IFC4.IfcReference) | null;\n        constructor(expressID: number, type: number, Identifier: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, ReferencePath: (Handle<IFC4.IfcReference> | IFC4.IfcReference) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTableColumn;\n        ToTape(): any[];\n    }\n    class IfcTableRow {\n        expressID: number;\n        type: number;\n        RowCells: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null;\n        IsHeading: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        constructor(expressID: number, type: number, RowCells: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null, IsHeading: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTableRow;\n        ToTape(): any[];\n    }\n    class IfcTaskTime extends IFC4.IfcSchedulingTime {\n        DurationType: (Handle<IFC4.IfcTaskDurationEnum> | IFC4.IfcTaskDurationEnum) | null;\n        ScheduleDuration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        ScheduleStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ScheduleFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        EarlyStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        EarlyFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        LateStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        LateFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        FreeFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        TotalFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        IsCritical: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        StatusTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ActualDuration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        ActualStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ActualFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        RemainingTime: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        Completion: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null, UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DurationType: (Handle<IFC4.IfcTaskDurationEnum> | IFC4.IfcTaskDurationEnum) | null, ScheduleDuration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, ScheduleStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ScheduleFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, EarlyStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, EarlyFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, LateStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, LateFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, FreeFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, TotalFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, IsCritical: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, StatusTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ActualDuration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, ActualStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ActualFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, RemainingTime: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, Completion: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTaskTime;\n        ToTape(): any[];\n    }\n    class IfcTaskTimeRecurring extends IFC4.IfcTaskTime {\n        Recurrence: (Handle<IFC4.IfcRecurrencePattern> | IFC4.IfcRecurrencePattern);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null, UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DurationType: (Handle<IFC4.IfcTaskDurationEnum> | IFC4.IfcTaskDurationEnum) | null, ScheduleDuration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, ScheduleStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ScheduleFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, EarlyStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, EarlyFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, LateStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, LateFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, FreeFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, TotalFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, IsCritical: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, StatusTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ActualDuration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, ActualStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ActualFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, RemainingTime: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, Completion: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null, Recurrence: (Handle<IFC4.IfcRecurrencePattern> | IFC4.IfcRecurrencePattern));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTaskTimeRecurring;\n        ToTape(): any[];\n    }\n    class IfcTelecomAddress extends IFC4.IfcAddress {\n        TelephoneNumbers: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null;\n        FacsimileNumbers: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null;\n        PagerNumber: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ElectronicMailAddresses: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null;\n        WWWHomePageURL: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null;\n        MessagingIDs: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference)[] | null;\n        constructor(expressID: number, type: number, Purpose: (Handle<IFC4.IfcAddressTypeEnum> | IFC4.IfcAddressTypeEnum) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, UserDefinedPurpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TelephoneNumbers: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null, FacsimileNumbers: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null, PagerNumber: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElectronicMailAddresses: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel)[] | null, WWWHomePageURL: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, MessagingIDs: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTelecomAddress;\n        ToTape(): any[];\n    }\n    class IfcTextStyle extends IFC4.IfcPresentationStyle {\n        TextCharacterAppearance: (Handle<IFC4.IfcTextStyleForDefinedFont> | IFC4.IfcTextStyleForDefinedFont) | null;\n        TextStyle: (Handle<IFC4.IfcTextStyleTextModel> | IFC4.IfcTextStyleTextModel) | null;\n        TextFontStyle: (Handle<IFC4.IfcTextFontSelect> | IFC4.IfcTextFontSelect);\n        ModelOrDraughting: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TextCharacterAppearance: (Handle<IFC4.IfcTextStyleForDefinedFont> | IFC4.IfcTextStyleForDefinedFont) | null, TextStyle: (Handle<IFC4.IfcTextStyleTextModel> | IFC4.IfcTextStyleTextModel) | null, TextFontStyle: (Handle<IFC4.IfcTextFontSelect> | IFC4.IfcTextFontSelect), ModelOrDraughting: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyle;\n        ToTape(): any[];\n    }\n    class IfcTextStyleForDefinedFont extends IFC4.IfcPresentationItem {\n        Colour: (Handle<IFC4.IfcColour> | IFC4.IfcColour);\n        BackgroundColour: (Handle<IFC4.IfcColour> | IFC4.IfcColour) | null;\n        constructor(expressID: number, type: number, Colour: (Handle<IFC4.IfcColour> | IFC4.IfcColour), BackgroundColour: (Handle<IFC4.IfcColour> | IFC4.IfcColour) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleForDefinedFont;\n        ToTape(): any[];\n    }\n    class IfcTextStyleTextModel extends IFC4.IfcPresentationItem {\n        TextIndent: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null;\n        TextAlign: (Handle<IFC4.IfcTextAlignment> | IFC4.IfcTextAlignment) | null;\n        TextDecoration: (Handle<IFC4.IfcTextDecoration> | IFC4.IfcTextDecoration) | null;\n        LetterSpacing: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null;\n        WordSpacing: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null;\n        TextTransform: (Handle<IFC4.IfcTextTransformation> | IFC4.IfcTextTransformation) | null;\n        LineHeight: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null;\n        constructor(expressID: number, type: number, TextIndent: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null, TextAlign: (Handle<IFC4.IfcTextAlignment> | IFC4.IfcTextAlignment) | null, TextDecoration: (Handle<IFC4.IfcTextDecoration> | IFC4.IfcTextDecoration) | null, LetterSpacing: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null, WordSpacing: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null, TextTransform: (Handle<IFC4.IfcTextTransformation> | IFC4.IfcTextTransformation) | null, LineHeight: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleTextModel;\n        ToTape(): any[];\n    }\n    class IfcTextureCoordinate extends IFC4.IfcPresentationItem {\n        Maps: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[];\n        constructor(expressID: number, type: number, Maps: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureCoordinate;\n        ToTape(): any[];\n    }\n    class IfcTextureCoordinateGenerator extends IFC4.IfcTextureCoordinate {\n        Mode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Parameter: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[] | null;\n        constructor(expressID: number, type: number, Maps: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[], Mode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Parameter: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureCoordinateGenerator;\n        ToTape(): any[];\n    }\n    class IfcTextureMap extends IFC4.IfcTextureCoordinate {\n        Vertices: (Handle<IFC4.IfcTextureVertex> | IFC4.IfcTextureVertex)[];\n        MappedTo: (Handle<IFC4.IfcFace> | IFC4.IfcFace);\n        constructor(expressID: number, type: number, Maps: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[], Vertices: (Handle<IFC4.IfcTextureVertex> | IFC4.IfcTextureVertex)[], MappedTo: (Handle<IFC4.IfcFace> | IFC4.IfcFace));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureMap;\n        ToTape(): any[];\n    }\n    class IfcTextureVertex extends IFC4.IfcPresentationItem {\n        Coordinates: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[];\n        constructor(expressID: number, type: number, Coordinates: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureVertex;\n        ToTape(): any[];\n    }\n    class IfcTextureVertexList extends IFC4.IfcPresentationItem {\n        TexCoordsList: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[];\n        constructor(expressID: number, type: number, TexCoordsList: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextureVertexList;\n        ToTape(): any[];\n    }\n    class IfcTimePeriod {\n        expressID: number;\n        type: number;\n        StartTime: (Handle<IFC4.IfcTime> | IFC4.IfcTime);\n        EndTime: (Handle<IFC4.IfcTime> | IFC4.IfcTime);\n        constructor(expressID: number, type: number, StartTime: (Handle<IFC4.IfcTime> | IFC4.IfcTime), EndTime: (Handle<IFC4.IfcTime> | IFC4.IfcTime));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTimePeriod;\n        ToTape(): any[];\n    }\n    class IfcTimeSeries {\n        expressID: number;\n        type: number;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime);\n        EndTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime);\n        TimeSeriesDataType: (Handle<IFC4.IfcTimeSeriesDataTypeEnum> | IFC4.IfcTimeSeriesDataTypeEnum);\n        DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum);\n        UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        HasExternalReference: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), EndTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), TimeSeriesDataType: (Handle<IFC4.IfcTimeSeriesDataTypeEnum> | IFC4.IfcTimeSeriesDataTypeEnum), DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum), UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeries;\n        ToTape(): any[];\n    }\n    class IfcTimeSeriesValue {\n        expressID: number;\n        type: number;\n        ListValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[];\n        constructor(expressID: number, type: number, ListValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTimeSeriesValue;\n        ToTape(): any[];\n    }\n    class IfcTopologicalRepresentationItem extends IFC4.IfcRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTopologicalRepresentationItem;\n        ToTape(): any[];\n    }\n    class IfcTopologyRepresentation extends IFC4.IfcShapeModel {\n        constructor(expressID: number, type: number, ContextOfItems: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext), RepresentationIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Items: (Handle<IFC4.IfcRepresentationItem> | IFC4.IfcRepresentationItem)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTopologyRepresentation;\n        ToTape(): any[];\n    }\n    class IfcUnitAssignment {\n        expressID: number;\n        type: number;\n        Units: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit)[];\n        constructor(expressID: number, type: number, Units: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUnitAssignment;\n        ToTape(): any[];\n    }\n    class IfcVertex extends IFC4.IfcTopologicalRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVertex;\n        ToTape(): any[];\n    }\n    class IfcVertexPoint extends IFC4.IfcVertex {\n        VertexGeometry: (Handle<IFC4.IfcPoint> | IFC4.IfcPoint);\n        constructor(expressID: number, type: number, VertexGeometry: (Handle<IFC4.IfcPoint> | IFC4.IfcPoint));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVertexPoint;\n        ToTape(): any[];\n    }\n    class IfcVirtualGridIntersection {\n        expressID: number;\n        type: number;\n        IntersectingAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[];\n        OffsetDistances: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[];\n        constructor(expressID: number, type: number, IntersectingAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[], OffsetDistances: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVirtualGridIntersection;\n        ToTape(): any[];\n    }\n    class IfcWorkTime extends IFC4.IfcSchedulingTime {\n        RecurrencePattern: (Handle<IFC4.IfcRecurrencePattern> | IFC4.IfcRecurrencePattern) | null;\n        Start: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        Finish: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null, UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RecurrencePattern: (Handle<IFC4.IfcRecurrencePattern> | IFC4.IfcRecurrencePattern) | null, Start: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, Finish: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkTime;\n        ToTape(): any[];\n    }\n    class IfcApprovalRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatingApproval: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval);\n        RelatedApprovals: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingApproval: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval), RelatedApprovals: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcApprovalRelationship;\n        ToTape(): any[];\n    }\n    class IfcArbitraryClosedProfileDef extends IFC4.IfcProfileDef {\n        OuterCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, OuterCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryClosedProfileDef;\n        ToTape(): any[];\n    }\n    class IfcArbitraryOpenProfileDef extends IFC4.IfcProfileDef {\n        Curve: (Handle<IFC4.IfcBoundedCurve> | IFC4.IfcBoundedCurve);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Curve: (Handle<IFC4.IfcBoundedCurve> | IFC4.IfcBoundedCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryOpenProfileDef;\n        ToTape(): any[];\n    }\n    class IfcArbitraryProfileDefWithVoids extends IFC4.IfcArbitraryClosedProfileDef {\n        InnerCurves: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve)[];\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, OuterCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), InnerCurves: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcArbitraryProfileDefWithVoids;\n        ToTape(): any[];\n    }\n    class IfcBlobTexture extends IFC4.IfcSurfaceTexture {\n        RasterFormat: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier);\n        RasterCode: (Handle<IFC4.IfcBinary> | IFC4.IfcBinary);\n        constructor(expressID: number, type: number, RepeatS: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), RepeatT: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Mode: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, TextureTransform: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D) | null, Parameter: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier)[] | null, RasterFormat: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), RasterCode: (Handle<IFC4.IfcBinary> | IFC4.IfcBinary));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBlobTexture;\n        ToTape(): any[];\n    }\n    class IfcCenterLineProfileDef extends IFC4.IfcArbitraryOpenProfileDef {\n        Thickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Curve: (Handle<IFC4.IfcBoundedCurve> | IFC4.IfcBoundedCurve), Thickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCenterLineProfileDef;\n        ToTape(): any[];\n    }\n    class IfcClassification extends IFC4.IfcExternalInformation {\n        Source: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Edition: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        EditionDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null;\n        ReferenceTokens: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier)[] | null;\n        ClassificationForObjects: (Handle<IFC4.IfcRelAssociatesClassification> | IFC4.IfcRelAssociatesClassification)[] | null;\n        HasReferences: (Handle<IFC4.IfcClassificationReference> | IFC4.IfcClassificationReference)[] | null;\n        constructor(expressID: number, type: number, Source: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Edition: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, EditionDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, ReferenceTokens: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassification;\n        ToTape(): any[];\n    }\n    class IfcClassificationReference extends IFC4.IfcExternalReference {\n        ReferencedSource: (Handle<IFC4.IfcClassificationReferenceSelect> | IFC4.IfcClassificationReferenceSelect) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Sort: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        ClassificationRefForObjects: (Handle<IFC4.IfcRelAssociatesClassification> | IFC4.IfcRelAssociatesClassification)[] | null;\n        HasReferences: (Handle<IFC4.IfcClassificationReference> | IFC4.IfcClassificationReference)[] | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ReferencedSource: (Handle<IFC4.IfcClassificationReferenceSelect> | IFC4.IfcClassificationReferenceSelect) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Sort: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClassificationReference;\n        ToTape(): any[];\n    }\n    class IfcColourRgbList extends IFC4.IfcPresentationItem {\n        ColourList: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure)[];\n        constructor(expressID: number, type: number, ColourList: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColourRgbList;\n        ToTape(): any[];\n    }\n    class IfcColourSpecification extends IFC4.IfcPresentationItem {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColourSpecification;\n        ToTape(): any[];\n    }\n    class IfcCompositeProfileDef extends IFC4.IfcProfileDef {\n        Profiles: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef)[];\n        Label: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Profiles: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef)[], Label: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcConnectedFaceSet extends IFC4.IfcTopologicalRepresentationItem {\n        CfsFaces: (Handle<IFC4.IfcFace> | IFC4.IfcFace)[];\n        constructor(expressID: number, type: number, CfsFaces: (Handle<IFC4.IfcFace> | IFC4.IfcFace)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectedFaceSet;\n        ToTape(): any[];\n    }\n    class IfcConnectionCurveGeometry extends IFC4.IfcConnectionGeometry {\n        CurveOnRelatingElement: (Handle<IFC4.IfcCurveOrEdgeCurve> | IFC4.IfcCurveOrEdgeCurve);\n        CurveOnRelatedElement: (Handle<IFC4.IfcCurveOrEdgeCurve> | IFC4.IfcCurveOrEdgeCurve) | null;\n        constructor(expressID: number, type: number, CurveOnRelatingElement: (Handle<IFC4.IfcCurveOrEdgeCurve> | IFC4.IfcCurveOrEdgeCurve), CurveOnRelatedElement: (Handle<IFC4.IfcCurveOrEdgeCurve> | IFC4.IfcCurveOrEdgeCurve) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionCurveGeometry;\n        ToTape(): any[];\n    }\n    class IfcConnectionPointEccentricity extends IFC4.IfcConnectionPointGeometry {\n        EccentricityInX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        EccentricityInY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        EccentricityInZ: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, PointOnRelatingElement: (Handle<IFC4.IfcPointOrVertexPoint> | IFC4.IfcPointOrVertexPoint), PointOnRelatedElement: (Handle<IFC4.IfcPointOrVertexPoint> | IFC4.IfcPointOrVertexPoint) | null, EccentricityInX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, EccentricityInY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, EccentricityInZ: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConnectionPointEccentricity;\n        ToTape(): any[];\n    }\n    class IfcContextDependentUnit extends IFC4.IfcNamedUnit {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        HasExternalReference: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC4.IfcDimensionalExponents> | IFC4.IfcDimensionalExponents), UnitType: (Handle<IFC4.IfcUnitEnum> | IFC4.IfcUnitEnum), Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcContextDependentUnit;\n        ToTape(): any[];\n    }\n    class IfcConversionBasedUnit extends IFC4.IfcNamedUnit {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        ConversionFactor: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit);\n        HasExternalReference: (Handle<IFC4.IfcExternalReferenceRelationship> | IFC4.IfcExternalReferenceRelationship)[] | null;\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC4.IfcDimensionalExponents> | IFC4.IfcDimensionalExponents), UnitType: (Handle<IFC4.IfcUnitEnum> | IFC4.IfcUnitEnum), Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), ConversionFactor: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConversionBasedUnit;\n        ToTape(): any[];\n    }\n    class IfcConversionBasedUnitWithOffset extends IFC4.IfcConversionBasedUnit {\n        ConversionOffset: (Handle<IFC4.IfcReal> | IFC4.IfcReal);\n        constructor(expressID: number, type: number, Dimensions: (Handle<IFC4.IfcDimensionalExponents> | IFC4.IfcDimensionalExponents), UnitType: (Handle<IFC4.IfcUnitEnum> | IFC4.IfcUnitEnum), Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), ConversionFactor: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit), ConversionOffset: (Handle<IFC4.IfcReal> | IFC4.IfcReal));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConversionBasedUnitWithOffset;\n        ToTape(): any[];\n    }\n    class IfcCurrencyRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatingMonetaryUnit: (Handle<IFC4.IfcMonetaryUnit> | IFC4.IfcMonetaryUnit);\n        RelatedMonetaryUnit: (Handle<IFC4.IfcMonetaryUnit> | IFC4.IfcMonetaryUnit);\n        ExchangeRate: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure);\n        RateDateTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        RateSource: (Handle<IFC4.IfcLibraryInformation> | IFC4.IfcLibraryInformation) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingMonetaryUnit: (Handle<IFC4.IfcMonetaryUnit> | IFC4.IfcMonetaryUnit), RelatedMonetaryUnit: (Handle<IFC4.IfcMonetaryUnit> | IFC4.IfcMonetaryUnit), ExchangeRate: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure), RateDateTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, RateSource: (Handle<IFC4.IfcLibraryInformation> | IFC4.IfcLibraryInformation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurrencyRelationship;\n        ToTape(): any[];\n    }\n    class IfcCurveStyle extends IFC4.IfcPresentationStyle {\n        CurveFont: (Handle<IFC4.IfcCurveFontOrScaledCurveFontSelect> | IFC4.IfcCurveFontOrScaledCurveFontSelect) | null;\n        CurveWidth: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null;\n        CurveColour: (Handle<IFC4.IfcColour> | IFC4.IfcColour) | null;\n        ModelOrDraughting: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CurveFont: (Handle<IFC4.IfcCurveFontOrScaledCurveFontSelect> | IFC4.IfcCurveFontOrScaledCurveFontSelect) | null, CurveWidth: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect) | null, CurveColour: (Handle<IFC4.IfcColour> | IFC4.IfcColour) | null, ModelOrDraughting: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyle;\n        ToTape(): any[];\n    }\n    class IfcCurveStyleFont extends IFC4.IfcPresentationItem {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        PatternList: (Handle<IFC4.IfcCurveStyleFontPattern> | IFC4.IfcCurveStyleFontPattern)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PatternList: (Handle<IFC4.IfcCurveStyleFontPattern> | IFC4.IfcCurveStyleFontPattern)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFont;\n        ToTape(): any[];\n    }\n    class IfcCurveStyleFontAndScaling extends IFC4.IfcPresentationItem {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        CurveFont: (Handle<IFC4.IfcCurveStyleFontSelect> | IFC4.IfcCurveStyleFontSelect);\n        CurveFontScaling: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CurveFont: (Handle<IFC4.IfcCurveStyleFontSelect> | IFC4.IfcCurveStyleFontSelect), CurveFontScaling: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFontAndScaling;\n        ToTape(): any[];\n    }\n    class IfcCurveStyleFontPattern extends IFC4.IfcPresentationItem {\n        VisibleSegmentLength: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        InvisibleSegmentLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, VisibleSegmentLength: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), InvisibleSegmentLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveStyleFontPattern;\n        ToTape(): any[];\n    }\n    class IfcDerivedProfileDef extends IFC4.IfcProfileDef {\n        ParentProfile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        Operator: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D);\n        Label: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ParentProfile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Operator: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D), Label: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDerivedProfileDef;\n        ToTape(): any[];\n    }\n    class IfcDocumentInformation extends IFC4.IfcExternalInformation {\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier);\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null;\n        Purpose: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        IntendedUse: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Scope: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Revision: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        DocumentOwner: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        Editors: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect)[] | null;\n        CreationTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        LastRevisionTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ElectronicFormat: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        ValidFrom: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        ValidUntil: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        Confidentiality: (Handle<IFC4.IfcDocumentConfidentialityEnum> | IFC4.IfcDocumentConfidentialityEnum) | null;\n        Status: (Handle<IFC4.IfcDocumentStatusEnum> | IFC4.IfcDocumentStatusEnum) | null;\n        DocumentInfoForObjects: (Handle<IFC4.IfcRelAssociatesDocument> | IFC4.IfcRelAssociatesDocument)[] | null;\n        HasDocumentReferences: (Handle<IFC4.IfcDocumentReference> | IFC4.IfcDocumentReference)[] | null;\n        IsPointedTo: (Handle<IFC4.IfcDocumentInformationRelationship> | IFC4.IfcDocumentInformationRelationship)[] | null;\n        IsPointer: (Handle<IFC4.IfcDocumentInformationRelationship> | IFC4.IfcDocumentInformationRelationship)[] | null;\n        constructor(expressID: number, type: number, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Purpose: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, IntendedUse: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Scope: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Revision: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DocumentOwner: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, Editors: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect)[] | null, CreationTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, LastRevisionTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ElectronicFormat: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, ValidFrom: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, ValidUntil: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, Confidentiality: (Handle<IFC4.IfcDocumentConfidentialityEnum> | IFC4.IfcDocumentConfidentialityEnum) | null, Status: (Handle<IFC4.IfcDocumentStatusEnum> | IFC4.IfcDocumentStatusEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentInformation;\n        ToTape(): any[];\n    }\n    class IfcDocumentInformationRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatingDocument: (Handle<IFC4.IfcDocumentInformation> | IFC4.IfcDocumentInformation);\n        RelatedDocuments: (Handle<IFC4.IfcDocumentInformation> | IFC4.IfcDocumentInformation)[];\n        RelationshipType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingDocument: (Handle<IFC4.IfcDocumentInformation> | IFC4.IfcDocumentInformation), RelatedDocuments: (Handle<IFC4.IfcDocumentInformation> | IFC4.IfcDocumentInformation)[], RelationshipType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentInformationRelationship;\n        ToTape(): any[];\n    }\n    class IfcDocumentReference extends IFC4.IfcExternalReference {\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        ReferencedDocument: (Handle<IFC4.IfcDocumentInformation> | IFC4.IfcDocumentInformation) | null;\n        DocumentRefForObjects: (Handle<IFC4.IfcRelAssociatesDocument> | IFC4.IfcRelAssociatesDocument)[] | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ReferencedDocument: (Handle<IFC4.IfcDocumentInformation> | IFC4.IfcDocumentInformation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDocumentReference;\n        ToTape(): any[];\n    }\n    class IfcEdge extends IFC4.IfcTopologicalRepresentationItem {\n        EdgeStart: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex);\n        EdgeEnd: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex);\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex), EdgeEnd: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEdge;\n        ToTape(): any[];\n    }\n    class IfcEdgeCurve extends IFC4.IfcEdge {\n        EdgeGeometry: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex), EdgeEnd: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex), EdgeGeometry: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEdgeCurve;\n        ToTape(): any[];\n    }\n    class IfcEventTime extends IFC4.IfcSchedulingTime {\n        ActualDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        EarlyDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        LateDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ScheduleDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null, UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ActualDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, EarlyDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, LateDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ScheduleDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEventTime;\n        ToTape(): any[];\n    }\n    class IfcExtendedProperties extends IFC4.IfcPropertyAbstraction {\n        Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Properties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Properties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExtendedProperties;\n        ToTape(): any[];\n    }\n    class IfcExternalReferenceRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatingReference: (Handle<IFC4.IfcExternalReference> | IFC4.IfcExternalReference);\n        RelatedResourceObjects: (Handle<IFC4.IfcResourceObjectSelect> | IFC4.IfcResourceObjectSelect)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingReference: (Handle<IFC4.IfcExternalReference> | IFC4.IfcExternalReference), RelatedResourceObjects: (Handle<IFC4.IfcResourceObjectSelect> | IFC4.IfcResourceObjectSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternalReferenceRelationship;\n        ToTape(): any[];\n    }\n    class IfcFace extends IFC4.IfcTopologicalRepresentationItem {\n        Bounds: (Handle<IFC4.IfcFaceBound> | IFC4.IfcFaceBound)[];\n        HasTextureMaps: (Handle<IFC4.IfcTextureMap> | IFC4.IfcTextureMap)[] | null;\n        constructor(expressID: number, type: number, Bounds: (Handle<IFC4.IfcFaceBound> | IFC4.IfcFaceBound)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFace;\n        ToTape(): any[];\n    }\n    class IfcFaceBound extends IFC4.IfcTopologicalRepresentationItem {\n        Bound: (Handle<IFC4.IfcLoop> | IFC4.IfcLoop);\n        Orientation: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, Bound: (Handle<IFC4.IfcLoop> | IFC4.IfcLoop), Orientation: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceBound;\n        ToTape(): any[];\n    }\n    class IfcFaceOuterBound extends IFC4.IfcFaceBound {\n        constructor(expressID: number, type: number, Bound: (Handle<IFC4.IfcLoop> | IFC4.IfcLoop), Orientation: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceOuterBound;\n        ToTape(): any[];\n    }\n    class IfcFaceSurface extends IFC4.IfcFace {\n        FaceSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface);\n        SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, Bounds: (Handle<IFC4.IfcFaceBound> | IFC4.IfcFaceBound)[], FaceSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceSurface;\n        ToTape(): any[];\n    }\n    class IfcFailureConnectionCondition extends IFC4.IfcStructuralConnectionCondition {\n        TensionFailureX: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        TensionFailureY: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        TensionFailureZ: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        CompressionFailureX: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        CompressionFailureY: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        CompressionFailureZ: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TensionFailureX: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, TensionFailureY: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, TensionFailureZ: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, CompressionFailureX: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, CompressionFailureY: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, CompressionFailureZ: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFailureConnectionCondition;\n        ToTape(): any[];\n    }\n    class IfcFillAreaStyle extends IFC4.IfcPresentationStyle {\n        FillStyles: (Handle<IFC4.IfcFillStyleSelect> | IFC4.IfcFillStyleSelect)[];\n        ModelorDraughting: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, FillStyles: (Handle<IFC4.IfcFillStyleSelect> | IFC4.IfcFillStyleSelect)[], ModelorDraughting: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyle;\n        ToTape(): any[];\n    }\n    class IfcGeometricRepresentationContext extends IFC4.IfcRepresentationContext {\n        CoordinateSpaceDimension: (Handle<IFC4.IfcDimensionCount> | IFC4.IfcDimensionCount);\n        Precision: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        WorldCoordinateSystem: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement);\n        TrueNorth: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        HasSubContexts: (Handle<IFC4.IfcGeometricRepresentationSubContext> | IFC4.IfcGeometricRepresentationSubContext)[] | null;\n        HasCoordinateOperation: (Handle<IFC4.IfcCoordinateOperation> | IFC4.IfcCoordinateOperation)[] | null;\n        constructor(expressID: number, type: number, ContextIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ContextType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CoordinateSpaceDimension: (Handle<IFC4.IfcDimensionCount> | IFC4.IfcDimensionCount), Precision: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, WorldCoordinateSystem: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement), TrueNorth: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationContext;\n        ToTape(): any[];\n    }\n    class IfcGeometricRepresentationItem extends IFC4.IfcRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationItem;\n        ToTape(): any[];\n    }\n    class IfcGeometricRepresentationSubContext extends IFC4.IfcGeometricRepresentationContext {\n        ParentContext: (Handle<IFC4.IfcGeometricRepresentationContext> | IFC4.IfcGeometricRepresentationContext);\n        TargetScale: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null;\n        TargetView: (Handle<IFC4.IfcGeometricProjectionEnum> | IFC4.IfcGeometricProjectionEnum);\n        UserDefinedTargetView: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, ContextIdentifier: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ContextType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CoordinateSpaceDimension: (Handle<IFC4.IfcDimensionCount> | IFC4.IfcDimensionCount), Precision: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, WorldCoordinateSystem: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement), TrueNorth: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, ParentContext: (Handle<IFC4.IfcGeometricRepresentationContext> | IFC4.IfcGeometricRepresentationContext), TargetScale: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null, TargetView: (Handle<IFC4.IfcGeometricProjectionEnum> | IFC4.IfcGeometricProjectionEnum), UserDefinedTargetView: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricRepresentationSubContext;\n        ToTape(): any[];\n    }\n    class IfcGeometricSet extends IFC4.IfcGeometricRepresentationItem {\n        Elements: (Handle<IFC4.IfcGeometricSetSelect> | IFC4.IfcGeometricSetSelect)[];\n        constructor(expressID: number, type: number, Elements: (Handle<IFC4.IfcGeometricSetSelect> | IFC4.IfcGeometricSetSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricSet;\n        ToTape(): any[];\n    }\n    class IfcGridPlacement extends IFC4.IfcObjectPlacement {\n        PlacementLocation: (Handle<IFC4.IfcVirtualGridIntersection> | IFC4.IfcVirtualGridIntersection);\n        PlacementRefDirection: (Handle<IFC4.IfcGridPlacementDirectionSelect> | IFC4.IfcGridPlacementDirectionSelect) | null;\n        constructor(expressID: number, type: number, PlacementLocation: (Handle<IFC4.IfcVirtualGridIntersection> | IFC4.IfcVirtualGridIntersection), PlacementRefDirection: (Handle<IFC4.IfcGridPlacementDirectionSelect> | IFC4.IfcGridPlacementDirectionSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGridPlacement;\n        ToTape(): any[];\n    }\n    class IfcHalfSpaceSolid extends IFC4.IfcGeometricRepresentationItem {\n        BaseSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface);\n        AgreementFlag: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, BaseSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), AgreementFlag: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHalfSpaceSolid;\n        ToTape(): any[];\n    }\n    class IfcImageTexture extends IFC4.IfcSurfaceTexture {\n        URLReference: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference);\n        constructor(expressID: number, type: number, RepeatS: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), RepeatT: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Mode: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, TextureTransform: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D) | null, Parameter: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier)[] | null, URLReference: (Handle<IFC4.IfcURIReference> | IFC4.IfcURIReference));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcImageTexture;\n        ToTape(): any[];\n    }\n    class IfcIndexedColourMap extends IFC4.IfcPresentationItem {\n        MappedTo: (Handle<IFC4.IfcTessellatedFaceSet> | IFC4.IfcTessellatedFaceSet);\n        Opacity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        Colours: (Handle<IFC4.IfcColourRgbList> | IFC4.IfcColourRgbList);\n        ColourIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[];\n        constructor(expressID: number, type: number, MappedTo: (Handle<IFC4.IfcTessellatedFaceSet> | IFC4.IfcTessellatedFaceSet), Opacity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Colours: (Handle<IFC4.IfcColourRgbList> | IFC4.IfcColourRgbList), ColourIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedColourMap;\n        ToTape(): any[];\n    }\n    class IfcIndexedTextureMap extends IFC4.IfcTextureCoordinate {\n        MappedTo: (Handle<IFC4.IfcTessellatedFaceSet> | IFC4.IfcTessellatedFaceSet);\n        TexCoords: (Handle<IFC4.IfcTextureVertexList> | IFC4.IfcTextureVertexList);\n        constructor(expressID: number, type: number, Maps: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[], MappedTo: (Handle<IFC4.IfcTessellatedFaceSet> | IFC4.IfcTessellatedFaceSet), TexCoords: (Handle<IFC4.IfcTextureVertexList> | IFC4.IfcTextureVertexList));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedTextureMap;\n        ToTape(): any[];\n    }\n    class IfcIndexedTriangleTextureMap extends IFC4.IfcIndexedTextureMap {\n        TexCoordIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[] | null;\n        constructor(expressID: number, type: number, Maps: (Handle<IFC4.IfcSurfaceTexture> | IFC4.IfcSurfaceTexture)[], MappedTo: (Handle<IFC4.IfcTessellatedFaceSet> | IFC4.IfcTessellatedFaceSet), TexCoords: (Handle<IFC4.IfcTextureVertexList> | IFC4.IfcTextureVertexList), TexCoordIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedTriangleTextureMap;\n        ToTape(): any[];\n    }\n    class IfcIrregularTimeSeries extends IFC4.IfcTimeSeries {\n        Values: (Handle<IFC4.IfcIrregularTimeSeriesValue> | IFC4.IfcIrregularTimeSeriesValue)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), EndTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), TimeSeriesDataType: (Handle<IFC4.IfcTimeSeriesDataTypeEnum> | IFC4.IfcTimeSeriesDataTypeEnum), DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum), UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, Values: (Handle<IFC4.IfcIrregularTimeSeriesValue> | IFC4.IfcIrregularTimeSeriesValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIrregularTimeSeries;\n        ToTape(): any[];\n    }\n    class IfcLagTime extends IFC4.IfcSchedulingTime {\n        LagValue: (Handle<IFC4.IfcTimeOrRatioSelect> | IFC4.IfcTimeOrRatioSelect);\n        DurationType: (Handle<IFC4.IfcTaskDurationEnum> | IFC4.IfcTaskDurationEnum);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null, UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LagValue: (Handle<IFC4.IfcTimeOrRatioSelect> | IFC4.IfcTimeOrRatioSelect), DurationType: (Handle<IFC4.IfcTaskDurationEnum> | IFC4.IfcTaskDurationEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLagTime;\n        ToTape(): any[];\n    }\n    class IfcLightSource extends IFC4.IfcGeometricRepresentationItem {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        LightColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb);\n        AmbientIntensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        Intensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LightColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), AmbientIntensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSource;\n        ToTape(): any[];\n    }\n    class IfcLightSourceAmbient extends IFC4.IfcLightSource {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LightColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), AmbientIntensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceAmbient;\n        ToTape(): any[];\n    }\n    class IfcLightSourceDirectional extends IFC4.IfcLightSource {\n        Orientation: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LightColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), AmbientIntensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Orientation: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceDirectional;\n        ToTape(): any[];\n    }\n    class IfcLightSourceGoniometric extends IFC4.IfcLightSource {\n        Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D);\n        ColourAppearance: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb) | null;\n        ColourTemperature: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure);\n        LuminousFlux: (Handle<IFC4.IfcLuminousFluxMeasure> | IFC4.IfcLuminousFluxMeasure);\n        LightEmissionSource: (Handle<IFC4.IfcLightEmissionSourceEnum> | IFC4.IfcLightEmissionSourceEnum);\n        LightDistributionDataSource: (Handle<IFC4.IfcLightDistributionDataSourceSelect> | IFC4.IfcLightDistributionDataSourceSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LightColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), AmbientIntensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), ColourAppearance: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb) | null, ColourTemperature: (Handle<IFC4.IfcThermodynamicTemperatureMeasure> | IFC4.IfcThermodynamicTemperatureMeasure), LuminousFlux: (Handle<IFC4.IfcLuminousFluxMeasure> | IFC4.IfcLuminousFluxMeasure), LightEmissionSource: (Handle<IFC4.IfcLightEmissionSourceEnum> | IFC4.IfcLightEmissionSourceEnum), LightDistributionDataSource: (Handle<IFC4.IfcLightDistributionDataSourceSelect> | IFC4.IfcLightDistributionDataSourceSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceGoniometric;\n        ToTape(): any[];\n    }\n    class IfcLightSourcePositional extends IFC4.IfcLightSource {\n        Position: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint);\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        ConstantAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal);\n        DistanceAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal);\n        QuadricAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LightColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), AmbientIntensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Position: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), ConstantAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal), DistanceAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal), QuadricAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourcePositional;\n        ToTape(): any[];\n    }\n    class IfcLightSourceSpot extends IFC4.IfcLightSourcePositional {\n        Orientation: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        ConcentrationExponent: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        SpreadAngle: (Handle<IFC4.IfcPositivePlaneAngleMeasure> | IFC4.IfcPositivePlaneAngleMeasure);\n        BeamWidthAngle: (Handle<IFC4.IfcPositivePlaneAngleMeasure> | IFC4.IfcPositivePlaneAngleMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LightColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), AmbientIntensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Intensity: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Position: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), ConstantAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal), DistanceAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal), QuadricAttenuation: (Handle<IFC4.IfcReal> | IFC4.IfcReal), Orientation: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection), ConcentrationExponent: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, SpreadAngle: (Handle<IFC4.IfcPositivePlaneAngleMeasure> | IFC4.IfcPositivePlaneAngleMeasure), BeamWidthAngle: (Handle<IFC4.IfcPositivePlaneAngleMeasure> | IFC4.IfcPositivePlaneAngleMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightSourceSpot;\n        ToTape(): any[];\n    }\n    class IfcLocalPlacement extends IFC4.IfcObjectPlacement {\n        PlacementRelTo: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null;\n        RelativePlacement: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement);\n        constructor(expressID: number, type: number, PlacementRelTo: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, RelativePlacement: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLocalPlacement;\n        ToTape(): any[];\n    }\n    class IfcLoop extends IFC4.IfcTopologicalRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLoop;\n        ToTape(): any[];\n    }\n    class IfcMappedItem extends IFC4.IfcRepresentationItem {\n        MappingSource: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap);\n        MappingTarget: (Handle<IFC4.IfcCartesianTransformationOperator> | IFC4.IfcCartesianTransformationOperator);\n        constructor(expressID: number, type: number, MappingSource: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap), MappingTarget: (Handle<IFC4.IfcCartesianTransformationOperator> | IFC4.IfcCartesianTransformationOperator));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMappedItem;\n        ToTape(): any[];\n    }\n    class IfcMaterial extends IFC4.IfcMaterialDefinition {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        HasRepresentation: (Handle<IFC4.IfcMaterialDefinitionRepresentation> | IFC4.IfcMaterialDefinitionRepresentation)[] | null;\n        IsRelatedWith: (Handle<IFC4.IfcMaterialRelationship> | IFC4.IfcMaterialRelationship)[] | null;\n        RelatesTo: (Handle<IFC4.IfcMaterialRelationship> | IFC4.IfcMaterialRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterial;\n        ToTape(): any[];\n    }\n    class IfcMaterialConstituent extends IFC4.IfcMaterialDefinition {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial);\n        Fraction: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ToMaterialConstituentSet: (Handle<IFC4.IfcMaterialConstituentSet> | IFC4.IfcMaterialConstituentSet) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Material: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial), Fraction: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, Category: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialConstituent;\n        ToTape(): any[];\n    }\n    class IfcMaterialConstituentSet extends IFC4.IfcMaterialDefinition {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        MaterialConstituents: (Handle<IFC4.IfcMaterialConstituent> | IFC4.IfcMaterialConstituent)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, MaterialConstituents: (Handle<IFC4.IfcMaterialConstituent> | IFC4.IfcMaterialConstituent)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialConstituentSet;\n        ToTape(): any[];\n    }\n    class IfcMaterialDefinitionRepresentation extends IFC4.IfcProductRepresentation {\n        RepresentedMaterial: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Representations: (Handle<IFC4.IfcRepresentation> | IFC4.IfcRepresentation)[], RepresentedMaterial: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialDefinitionRepresentation;\n        ToTape(): any[];\n    }\n    class IfcMaterialLayerSetUsage extends IFC4.IfcMaterialUsageDefinition {\n        ForLayerSet: (Handle<IFC4.IfcMaterialLayerSet> | IFC4.IfcMaterialLayerSet);\n        LayerSetDirection: (Handle<IFC4.IfcLayerSetDirectionEnum> | IFC4.IfcLayerSetDirectionEnum);\n        DirectionSense: (Handle<IFC4.IfcDirectionSenseEnum> | IFC4.IfcDirectionSenseEnum);\n        OffsetFromReferenceLine: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        ReferenceExtent: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ForLayerSet: (Handle<IFC4.IfcMaterialLayerSet> | IFC4.IfcMaterialLayerSet), LayerSetDirection: (Handle<IFC4.IfcLayerSetDirectionEnum> | IFC4.IfcLayerSetDirectionEnum), DirectionSense: (Handle<IFC4.IfcDirectionSenseEnum> | IFC4.IfcDirectionSenseEnum), OffsetFromReferenceLine: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), ReferenceExtent: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialLayerSetUsage;\n        ToTape(): any[];\n    }\n    class IfcMaterialProfileSetUsage extends IFC4.IfcMaterialUsageDefinition {\n        ForProfileSet: (Handle<IFC4.IfcMaterialProfileSet> | IFC4.IfcMaterialProfileSet);\n        CardinalPoint: (Handle<IFC4.IfcCardinalPointReference> | IFC4.IfcCardinalPointReference) | null;\n        ReferenceExtent: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, ForProfileSet: (Handle<IFC4.IfcMaterialProfileSet> | IFC4.IfcMaterialProfileSet), CardinalPoint: (Handle<IFC4.IfcCardinalPointReference> | IFC4.IfcCardinalPointReference) | null, ReferenceExtent: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileSetUsage;\n        ToTape(): any[];\n    }\n    class IfcMaterialProfileSetUsageTapering extends IFC4.IfcMaterialProfileSetUsage {\n        ForProfileEndSet: (Handle<IFC4.IfcMaterialProfileSet> | IFC4.IfcMaterialProfileSet);\n        CardinalEndPoint: (Handle<IFC4.IfcCardinalPointReference> | IFC4.IfcCardinalPointReference) | null;\n        constructor(expressID: number, type: number, ForProfileSet: (Handle<IFC4.IfcMaterialProfileSet> | IFC4.IfcMaterialProfileSet), CardinalPoint: (Handle<IFC4.IfcCardinalPointReference> | IFC4.IfcCardinalPointReference) | null, ReferenceExtent: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, ForProfileEndSet: (Handle<IFC4.IfcMaterialProfileSet> | IFC4.IfcMaterialProfileSet), CardinalEndPoint: (Handle<IFC4.IfcCardinalPointReference> | IFC4.IfcCardinalPointReference) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProfileSetUsageTapering;\n        ToTape(): any[];\n    }\n    class IfcMaterialProperties extends IFC4.IfcExtendedProperties {\n        Material: (Handle<IFC4.IfcMaterialDefinition> | IFC4.IfcMaterialDefinition);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Properties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[], Material: (Handle<IFC4.IfcMaterialDefinition> | IFC4.IfcMaterialDefinition));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialProperties;\n        ToTape(): any[];\n    }\n    class IfcMaterialRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatingMaterial: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial);\n        RelatedMaterials: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial)[];\n        Expression: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingMaterial: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial), RelatedMaterials: (Handle<IFC4.IfcMaterial> | IFC4.IfcMaterial)[], Expression: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMaterialRelationship;\n        ToTape(): any[];\n    }\n    class IfcMirroredProfileDef extends IFC4.IfcDerivedProfileDef {\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ParentProfile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Operator: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D), Label: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMirroredProfileDef;\n        ToTape(): any[];\n    }\n    class IfcObjectDefinition extends IFC4.IfcRoot {\n        HasAssignments: (Handle<IFC4.IfcRelAssigns> | IFC4.IfcRelAssigns)[] | null;\n        Nests: (Handle<IFC4.IfcRelNests> | IFC4.IfcRelNests)[] | null;\n        IsNestedBy: (Handle<IFC4.IfcRelNests> | IFC4.IfcRelNests)[] | null;\n        HasContext: (Handle<IFC4.IfcRelDeclares> | IFC4.IfcRelDeclares)[] | null;\n        IsDecomposedBy: (Handle<IFC4.IfcRelAggregates> | IFC4.IfcRelAggregates)[] | null;\n        Decomposes: (Handle<IFC4.IfcRelAggregates> | IFC4.IfcRelAggregates)[] | null;\n        HasAssociations: (Handle<IFC4.IfcRelAssociates> | IFC4.IfcRelAssociates)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObjectDefinition;\n        ToTape(): any[];\n    }\n    class IfcOpenShell extends IFC4.IfcConnectedFaceSet {\n        constructor(expressID: number, type: number, CfsFaces: (Handle<IFC4.IfcFace> | IFC4.IfcFace)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOpenShell;\n        ToTape(): any[];\n    }\n    class IfcOrganizationRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatingOrganization: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization);\n        RelatedOrganizations: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingOrganization: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization), RelatedOrganizations: (Handle<IFC4.IfcOrganization> | IFC4.IfcOrganization)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOrganizationRelationship;\n        ToTape(): any[];\n    }\n    class IfcOrientedEdge extends IFC4.IfcEdge {\n        EdgeElement: (Handle<IFC4.IfcEdge> | IFC4.IfcEdge);\n        Orientation: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex), EdgeEnd: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex), EdgeElement: (Handle<IFC4.IfcEdge> | IFC4.IfcEdge), Orientation: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOrientedEdge;\n        ToTape(): any[];\n    }\n    class IfcParameterizedProfileDef extends IFC4.IfcProfileDef {\n        Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcParameterizedProfileDef;\n        ToTape(): any[];\n    }\n    class IfcPath extends IFC4.IfcTopologicalRepresentationItem {\n        EdgeList: (Handle<IFC4.IfcOrientedEdge> | IFC4.IfcOrientedEdge)[];\n        constructor(expressID: number, type: number, EdgeList: (Handle<IFC4.IfcOrientedEdge> | IFC4.IfcOrientedEdge)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPath;\n        ToTape(): any[];\n    }\n    class IfcPhysicalComplexQuantity extends IFC4.IfcPhysicalQuantity {\n        HasQuantities: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity)[];\n        Discrimination: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        Quality: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Usage: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, HasQuantities: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity)[], Discrimination: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Quality: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Usage: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPhysicalComplexQuantity;\n        ToTape(): any[];\n    }\n    class IfcPixelTexture extends IFC4.IfcSurfaceTexture {\n        Width: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger);\n        Height: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger);\n        ColourComponents: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger);\n        Pixel: (Handle<IFC4.IfcBinary> | IFC4.IfcBinary)[];\n        constructor(expressID: number, type: number, RepeatS: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), RepeatT: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Mode: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, TextureTransform: (Handle<IFC4.IfcCartesianTransformationOperator2D> | IFC4.IfcCartesianTransformationOperator2D) | null, Parameter: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier)[] | null, Width: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), Height: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), ColourComponents: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), Pixel: (Handle<IFC4.IfcBinary> | IFC4.IfcBinary)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPixelTexture;\n        ToTape(): any[];\n    }\n    class IfcPlacement extends IFC4.IfcGeometricRepresentationItem {\n        Location: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint);\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlacement;\n        ToTape(): any[];\n    }\n    class IfcPlanarExtent extends IFC4.IfcGeometricRepresentationItem {\n        SizeInX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        SizeInY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        constructor(expressID: number, type: number, SizeInX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), SizeInY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlanarExtent;\n        ToTape(): any[];\n    }\n    class IfcPoint extends IFC4.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPoint;\n        ToTape(): any[];\n    }\n    class IfcPointOnCurve extends IFC4.IfcPoint {\n        BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        PointParameter: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), PointParameter: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPointOnCurve;\n        ToTape(): any[];\n    }\n    class IfcPointOnSurface extends IFC4.IfcPoint {\n        BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface);\n        PointParameterU: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        PointParameterV: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), PointParameterU: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue), PointParameterV: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPointOnSurface;\n        ToTape(): any[];\n    }\n    class IfcPolyLoop extends IFC4.IfcLoop {\n        Polygon: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[];\n        constructor(expressID: number, type: number, Polygon: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPolyLoop;\n        ToTape(): any[];\n    }\n    class IfcPolygonalBoundedHalfSpace extends IFC4.IfcHalfSpaceSolid {\n        Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D);\n        PolygonalBoundary: (Handle<IFC4.IfcBoundedCurve> | IFC4.IfcBoundedCurve);\n        constructor(expressID: number, type: number, BaseSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), AgreementFlag: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), PolygonalBoundary: (Handle<IFC4.IfcBoundedCurve> | IFC4.IfcBoundedCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPolygonalBoundedHalfSpace;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedItem extends IFC4.IfcPresentationItem {\n        Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedItem;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedProperties extends IFC4.IfcPropertyAbstraction {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedProperties;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedTextFont extends IFC4.IfcPreDefinedItem {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedTextFont;\n        ToTape(): any[];\n    }\n    class IfcProductDefinitionShape extends IFC4.IfcProductRepresentation {\n        ShapeOfProduct: (Handle<IFC4.IfcProduct> | IFC4.IfcProduct)[] | null;\n        HasShapeAspects: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Representations: (Handle<IFC4.IfcRepresentation> | IFC4.IfcRepresentation)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProductDefinitionShape;\n        ToTape(): any[];\n    }\n    class IfcProfileProperties extends IFC4.IfcExtendedProperties {\n        ProfileDefinition: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Properties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[], ProfileDefinition: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProfileProperties;\n        ToTape(): any[];\n    }\n    class IfcProperty extends IFC4.IfcPropertyAbstraction {\n        Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier);\n        Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        PartOfPset: (Handle<IFC4.IfcPropertySet> | IFC4.IfcPropertySet)[] | null;\n        PropertyForDependance: (Handle<IFC4.IfcPropertyDependencyRelationship> | IFC4.IfcPropertyDependencyRelationship)[] | null;\n        PropertyDependsOn: (Handle<IFC4.IfcPropertyDependencyRelationship> | IFC4.IfcPropertyDependencyRelationship)[] | null;\n        PartOfComplex: (Handle<IFC4.IfcComplexProperty> | IFC4.IfcComplexProperty)[] | null;\n        HasConstraints: (Handle<IFC4.IfcResourceConstraintRelationship> | IFC4.IfcResourceConstraintRelationship)[] | null;\n        HasApprovals: (Handle<IFC4.IfcResourceApprovalRelationship> | IFC4.IfcResourceApprovalRelationship)[] | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProperty;\n        ToTape(): any[];\n    }\n    class IfcPropertyDefinition extends IFC4.IfcRoot {\n        HasContext: (Handle<IFC4.IfcRelDeclares> | IFC4.IfcRelDeclares)[] | null;\n        HasAssociations: (Handle<IFC4.IfcRelAssociates> | IFC4.IfcRelAssociates)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyDefinition;\n        ToTape(): any[];\n    }\n    class IfcPropertyDependencyRelationship extends IFC4.IfcResourceLevelRelationship {\n        DependingProperty: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty);\n        DependantProperty: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty);\n        Expression: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, DependingProperty: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty), DependantProperty: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty), Expression: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyDependencyRelationship;\n        ToTape(): any[];\n    }\n    class IfcPropertySetDefinition extends IFC4.IfcPropertyDefinition {\n        DefinesType: (Handle<IFC4.IfcTypeObject> | IFC4.IfcTypeObject)[] | null;\n        IsDefinedBy: (Handle<IFC4.IfcRelDefinesByTemplate> | IFC4.IfcRelDefinesByTemplate)[] | null;\n        DefinesOccurrence: (Handle<IFC4.IfcRelDefinesByProperties> | IFC4.IfcRelDefinesByProperties)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySetDefinition;\n        ToTape(): any[];\n    }\n    class IfcPropertyTemplateDefinition extends IFC4.IfcPropertyDefinition {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyTemplateDefinition;\n        ToTape(): any[];\n    }\n    class IfcQuantitySet extends IFC4.IfcPropertySetDefinition {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcQuantitySet;\n        ToTape(): any[];\n    }\n    class IfcRectangleProfileDef extends IFC4.IfcParameterizedProfileDef {\n        XDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, XDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangleProfileDef;\n        ToTape(): any[];\n    }\n    class IfcRegularTimeSeries extends IFC4.IfcTimeSeries {\n        TimeStep: (Handle<IFC4.IfcTimeMeasure> | IFC4.IfcTimeMeasure);\n        Values: (Handle<IFC4.IfcTimeSeriesValue> | IFC4.IfcTimeSeriesValue)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), EndTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), TimeSeriesDataType: (Handle<IFC4.IfcTimeSeriesDataTypeEnum> | IFC4.IfcTimeSeriesDataTypeEnum), DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum), UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, TimeStep: (Handle<IFC4.IfcTimeMeasure> | IFC4.IfcTimeMeasure), Values: (Handle<IFC4.IfcTimeSeriesValue> | IFC4.IfcTimeSeriesValue)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRegularTimeSeries;\n        ToTape(): any[];\n    }\n    class IfcReinforcementBarProperties extends IFC4.IfcPreDefinedProperties {\n        TotalCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure);\n        SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        BarSurface: (Handle<IFC4.IfcReinforcingBarSurfaceEnum> | IFC4.IfcReinforcingBarSurfaceEnum) | null;\n        EffectiveDepth: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        NominalBarDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        BarCount: (Handle<IFC4.IfcCountMeasure> | IFC4.IfcCountMeasure) | null;\n        constructor(expressID: number, type: number, TotalCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure), SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), BarSurface: (Handle<IFC4.IfcReinforcingBarSurfaceEnum> | IFC4.IfcReinforcingBarSurfaceEnum) | null, EffectiveDepth: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, NominalBarDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, BarCount: (Handle<IFC4.IfcCountMeasure> | IFC4.IfcCountMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcementBarProperties;\n        ToTape(): any[];\n    }\n    class IfcRelationship extends IFC4.IfcRoot {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelationship;\n        ToTape(): any[];\n    }\n    class IfcResourceApprovalRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatedResourceObjects: (Handle<IFC4.IfcResourceObjectSelect> | IFC4.IfcResourceObjectSelect)[];\n        RelatingApproval: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedResourceObjects: (Handle<IFC4.IfcResourceObjectSelect> | IFC4.IfcResourceObjectSelect)[], RelatingApproval: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcResourceApprovalRelationship;\n        ToTape(): any[];\n    }\n    class IfcResourceConstraintRelationship extends IFC4.IfcResourceLevelRelationship {\n        RelatingConstraint: (Handle<IFC4.IfcConstraint> | IFC4.IfcConstraint);\n        RelatedResourceObjects: (Handle<IFC4.IfcResourceObjectSelect> | IFC4.IfcResourceObjectSelect)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingConstraint: (Handle<IFC4.IfcConstraint> | IFC4.IfcConstraint), RelatedResourceObjects: (Handle<IFC4.IfcResourceObjectSelect> | IFC4.IfcResourceObjectSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcResourceConstraintRelationship;\n        ToTape(): any[];\n    }\n    class IfcResourceTime extends IFC4.IfcSchedulingTime {\n        ScheduleWork: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        ScheduleUsage: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null;\n        ScheduleStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ScheduleFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ScheduleContour: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        LevelingDelay: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        IsOverAllocated: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        StatusTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ActualWork: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        ActualUsage: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null;\n        ActualStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        ActualFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        RemainingWork: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        RemainingUsage: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null;\n        Completion: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DataOrigin: (Handle<IFC4.IfcDataOriginEnum> | IFC4.IfcDataOriginEnum) | null, UserDefinedDataOrigin: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ScheduleWork: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, ScheduleUsage: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null, ScheduleStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ScheduleFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ScheduleContour: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LevelingDelay: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, IsOverAllocated: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, StatusTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ActualWork: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, ActualUsage: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null, ActualStart: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, ActualFinish: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, RemainingWork: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, RemainingUsage: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null, Completion: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcResourceTime;\n        ToTape(): any[];\n    }\n    class IfcRoundedRectangleProfileDef extends IFC4.IfcRectangleProfileDef {\n        RoundingRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, XDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), RoundingRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoundedRectangleProfileDef;\n        ToTape(): any[];\n    }\n    class IfcSectionProperties extends IFC4.IfcPreDefinedProperties {\n        SectionType: (Handle<IFC4.IfcSectionTypeEnum> | IFC4.IfcSectionTypeEnum);\n        StartProfile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        EndProfile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef) | null;\n        constructor(expressID: number, type: number, SectionType: (Handle<IFC4.IfcSectionTypeEnum> | IFC4.IfcSectionTypeEnum), StartProfile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), EndProfile: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSectionProperties;\n        ToTape(): any[];\n    }\n    class IfcSectionReinforcementProperties extends IFC4.IfcPreDefinedProperties {\n        LongitudinalStartPosition: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        LongitudinalEndPosition: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        TransversePosition: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        ReinforcementRole: (Handle<IFC4.IfcReinforcingBarRoleEnum> | IFC4.IfcReinforcingBarRoleEnum);\n        SectionDefinition: (Handle<IFC4.IfcSectionProperties> | IFC4.IfcSectionProperties);\n        CrossSectionReinforcementDefinitions: (Handle<IFC4.IfcReinforcementBarProperties> | IFC4.IfcReinforcementBarProperties)[];\n        constructor(expressID: number, type: number, LongitudinalStartPosition: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), LongitudinalEndPosition: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), TransversePosition: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, ReinforcementRole: (Handle<IFC4.IfcReinforcingBarRoleEnum> | IFC4.IfcReinforcingBarRoleEnum), SectionDefinition: (Handle<IFC4.IfcSectionProperties> | IFC4.IfcSectionProperties), CrossSectionReinforcementDefinitions: (Handle<IFC4.IfcReinforcementBarProperties> | IFC4.IfcReinforcementBarProperties)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSectionReinforcementProperties;\n        ToTape(): any[];\n    }\n    class IfcSectionedSpine extends IFC4.IfcGeometricRepresentationItem {\n        SpineCurve: (Handle<IFC4.IfcCompositeCurve> | IFC4.IfcCompositeCurve);\n        CrossSections: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef)[];\n        CrossSectionPositions: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D)[];\n        constructor(expressID: number, type: number, SpineCurve: (Handle<IFC4.IfcCompositeCurve> | IFC4.IfcCompositeCurve), CrossSections: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef)[], CrossSectionPositions: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSectionedSpine;\n        ToTape(): any[];\n    }\n    class IfcShellBasedSurfaceModel extends IFC4.IfcGeometricRepresentationItem {\n        SbsmBoundary: (Handle<IFC4.IfcShell> | IFC4.IfcShell)[];\n        constructor(expressID: number, type: number, SbsmBoundary: (Handle<IFC4.IfcShell> | IFC4.IfcShell)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShellBasedSurfaceModel;\n        ToTape(): any[];\n    }\n    class IfcSimpleProperty extends IFC4.IfcProperty {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSimpleProperty;\n        ToTape(): any[];\n    }\n    class IfcSlippageConnectionCondition extends IFC4.IfcStructuralConnectionCondition {\n        SlippageX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        SlippageY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        SlippageZ: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, SlippageX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, SlippageY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, SlippageZ: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlippageConnectionCondition;\n        ToTape(): any[];\n    }\n    class IfcSolidModel extends IFC4.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSolidModel;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadLinearForce extends IFC4.IfcStructuralLoadStatic {\n        LinearForceX: (Handle<IFC4.IfcLinearForceMeasure> | IFC4.IfcLinearForceMeasure) | null;\n        LinearForceY: (Handle<IFC4.IfcLinearForceMeasure> | IFC4.IfcLinearForceMeasure) | null;\n        LinearForceZ: (Handle<IFC4.IfcLinearForceMeasure> | IFC4.IfcLinearForceMeasure) | null;\n        LinearMomentX: (Handle<IFC4.IfcLinearMomentMeasure> | IFC4.IfcLinearMomentMeasure) | null;\n        LinearMomentY: (Handle<IFC4.IfcLinearMomentMeasure> | IFC4.IfcLinearMomentMeasure) | null;\n        LinearMomentZ: (Handle<IFC4.IfcLinearMomentMeasure> | IFC4.IfcLinearMomentMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LinearForceX: (Handle<IFC4.IfcLinearForceMeasure> | IFC4.IfcLinearForceMeasure) | null, LinearForceY: (Handle<IFC4.IfcLinearForceMeasure> | IFC4.IfcLinearForceMeasure) | null, LinearForceZ: (Handle<IFC4.IfcLinearForceMeasure> | IFC4.IfcLinearForceMeasure) | null, LinearMomentX: (Handle<IFC4.IfcLinearMomentMeasure> | IFC4.IfcLinearMomentMeasure) | null, LinearMomentY: (Handle<IFC4.IfcLinearMomentMeasure> | IFC4.IfcLinearMomentMeasure) | null, LinearMomentZ: (Handle<IFC4.IfcLinearMomentMeasure> | IFC4.IfcLinearMomentMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadLinearForce;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadPlanarForce extends IFC4.IfcStructuralLoadStatic {\n        PlanarForceX: (Handle<IFC4.IfcPlanarForceMeasure> | IFC4.IfcPlanarForceMeasure) | null;\n        PlanarForceY: (Handle<IFC4.IfcPlanarForceMeasure> | IFC4.IfcPlanarForceMeasure) | null;\n        PlanarForceZ: (Handle<IFC4.IfcPlanarForceMeasure> | IFC4.IfcPlanarForceMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PlanarForceX: (Handle<IFC4.IfcPlanarForceMeasure> | IFC4.IfcPlanarForceMeasure) | null, PlanarForceY: (Handle<IFC4.IfcPlanarForceMeasure> | IFC4.IfcPlanarForceMeasure) | null, PlanarForceZ: (Handle<IFC4.IfcPlanarForceMeasure> | IFC4.IfcPlanarForceMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadPlanarForce;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleDisplacement extends IFC4.IfcStructuralLoadStatic {\n        DisplacementX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        DisplacementY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        DisplacementZ: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        RotationalDisplacementRX: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        RotationalDisplacementRY: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        RotationalDisplacementRZ: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DisplacementX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, DisplacementY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, DisplacementZ: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, RotationalDisplacementRX: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null, RotationalDisplacementRY: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null, RotationalDisplacementRZ: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleDisplacement;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleDisplacementDistortion extends IFC4.IfcStructuralLoadSingleDisplacement {\n        Distortion: (Handle<IFC4.IfcCurvatureMeasure> | IFC4.IfcCurvatureMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, DisplacementX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, DisplacementY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, DisplacementZ: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, RotationalDisplacementRX: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null, RotationalDisplacementRY: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null, RotationalDisplacementRZ: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null, Distortion: (Handle<IFC4.IfcCurvatureMeasure> | IFC4.IfcCurvatureMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleDisplacementDistortion;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleForce extends IFC4.IfcStructuralLoadStatic {\n        ForceX: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        ForceY: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        ForceZ: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        MomentX: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null;\n        MomentY: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null;\n        MomentZ: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ForceX: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, ForceY: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, ForceZ: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, MomentX: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null, MomentY: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null, MomentZ: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleForce;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadSingleForceWarping extends IFC4.IfcStructuralLoadSingleForce {\n        WarpingMoment: (Handle<IFC4.IfcWarpingMomentMeasure> | IFC4.IfcWarpingMomentMeasure) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ForceX: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, ForceY: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, ForceZ: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, MomentX: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null, MomentY: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null, MomentZ: (Handle<IFC4.IfcTorqueMeasure> | IFC4.IfcTorqueMeasure) | null, WarpingMoment: (Handle<IFC4.IfcWarpingMomentMeasure> | IFC4.IfcWarpingMomentMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadSingleForceWarping;\n        ToTape(): any[];\n    }\n    class IfcSubedge extends IFC4.IfcEdge {\n        ParentEdge: (Handle<IFC4.IfcEdge> | IFC4.IfcEdge);\n        constructor(expressID: number, type: number, EdgeStart: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex), EdgeEnd: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex), ParentEdge: (Handle<IFC4.IfcEdge> | IFC4.IfcEdge));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSubedge;\n        ToTape(): any[];\n    }\n    class IfcSurface extends IFC4.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurface;\n        ToTape(): any[];\n    }\n    class IfcSurfaceStyleRendering extends IFC4.IfcSurfaceStyleShading {\n        DiffuseColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null;\n        TransmissionColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null;\n        DiffuseTransmissionColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null;\n        ReflectionColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null;\n        SpecularColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null;\n        SpecularHighlight: (Handle<IFC4.IfcSpecularHighlightSelect> | IFC4.IfcSpecularHighlightSelect) | null;\n        ReflectanceMethod: (Handle<IFC4.IfcReflectanceMethodEnum> | IFC4.IfcReflectanceMethodEnum);\n        constructor(expressID: number, type: number, SurfaceColour: (Handle<IFC4.IfcColourRgb> | IFC4.IfcColourRgb), Transparency: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, DiffuseColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null, TransmissionColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null, DiffuseTransmissionColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null, ReflectionColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null, SpecularColour: (Handle<IFC4.IfcColourOrFactor> | IFC4.IfcColourOrFactor) | null, SpecularHighlight: (Handle<IFC4.IfcSpecularHighlightSelect> | IFC4.IfcSpecularHighlightSelect) | null, ReflectanceMethod: (Handle<IFC4.IfcReflectanceMethodEnum> | IFC4.IfcReflectanceMethodEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceStyleRendering;\n        ToTape(): any[];\n    }\n    class IfcSweptAreaSolid extends IFC4.IfcSolidModel {\n        SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null;\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSweptAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcSweptDiskSolid extends IFC4.IfcSolidModel {\n        Directrix: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        InnerRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        StartParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null;\n        EndParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null;\n        constructor(expressID: number, type: number, Directrix: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), InnerRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, StartParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null, EndParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSweptDiskSolid;\n        ToTape(): any[];\n    }\n    class IfcSweptDiskSolidPolygonal extends IFC4.IfcSweptDiskSolid {\n        FilletRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, Directrix: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), InnerRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, StartParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null, EndParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null, FilletRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSweptDiskSolidPolygonal;\n        ToTape(): any[];\n    }\n    class IfcSweptSurface extends IFC4.IfcSurface {\n        SweptCurve: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null;\n        constructor(expressID: number, type: number, SweptCurve: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSweptSurface;\n        ToTape(): any[];\n    }\n    class IfcTShapeProfileDef extends IFC4.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        FlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        WebEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        WebSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        FlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, FlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, WebEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, WebSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null, FlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcTessellatedItem extends IFC4.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTessellatedItem;\n        ToTape(): any[];\n    }\n    class IfcTextLiteral extends IFC4.IfcGeometricRepresentationItem {\n        Literal: (Handle<IFC4.IfcPresentableText> | IFC4.IfcPresentableText);\n        Placement: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement);\n        Path: (Handle<IFC4.IfcTextPath> | IFC4.IfcTextPath);\n        constructor(expressID: number, type: number, Literal: (Handle<IFC4.IfcPresentableText> | IFC4.IfcPresentableText), Placement: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement), Path: (Handle<IFC4.IfcTextPath> | IFC4.IfcTextPath));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextLiteral;\n        ToTape(): any[];\n    }\n    class IfcTextLiteralWithExtent extends IFC4.IfcTextLiteral {\n        Extent: (Handle<IFC4.IfcPlanarExtent> | IFC4.IfcPlanarExtent);\n        BoxAlignment: (Handle<IFC4.IfcBoxAlignment> | IFC4.IfcBoxAlignment);\n        constructor(expressID: number, type: number, Literal: (Handle<IFC4.IfcPresentableText> | IFC4.IfcPresentableText), Placement: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement), Path: (Handle<IFC4.IfcTextPath> | IFC4.IfcTextPath), Extent: (Handle<IFC4.IfcPlanarExtent> | IFC4.IfcPlanarExtent), BoxAlignment: (Handle<IFC4.IfcBoxAlignment> | IFC4.IfcBoxAlignment));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextLiteralWithExtent;\n        ToTape(): any[];\n    }\n    class IfcTextStyleFontModel extends IFC4.IfcPreDefinedTextFont {\n        FontFamily: (Handle<IFC4.IfcTextFontName> | IFC4.IfcTextFontName)[];\n        FontStyle: (Handle<IFC4.IfcFontStyle> | IFC4.IfcFontStyle) | null;\n        FontVariant: (Handle<IFC4.IfcFontVariant> | IFC4.IfcFontVariant) | null;\n        FontWeight: (Handle<IFC4.IfcFontWeight> | IFC4.IfcFontWeight) | null;\n        FontSize: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), FontFamily: (Handle<IFC4.IfcTextFontName> | IFC4.IfcTextFontName)[], FontStyle: (Handle<IFC4.IfcFontStyle> | IFC4.IfcFontStyle) | null, FontVariant: (Handle<IFC4.IfcFontVariant> | IFC4.IfcFontVariant) | null, FontWeight: (Handle<IFC4.IfcFontWeight> | IFC4.IfcFontWeight) | null, FontSize: (Handle<IFC4.IfcSizeSelect> | IFC4.IfcSizeSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTextStyleFontModel;\n        ToTape(): any[];\n    }\n    class IfcTrapeziumProfileDef extends IFC4.IfcParameterizedProfileDef {\n        BottomXDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        TopXDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        TopXOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, BottomXDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), TopXDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), TopXOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTrapeziumProfileDef;\n        ToTape(): any[];\n    }\n    class IfcTypeObject extends IFC4.IfcObjectDefinition {\n        ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null;\n        Types: (Handle<IFC4.IfcRelDefinesByType> | IFC4.IfcRelDefinesByType)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTypeObject;\n        ToTape(): any[];\n    }\n    class IfcTypeProcess extends IFC4.IfcTypeObject {\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        ProcessType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        OperatesOn: (Handle<IFC4.IfcRelAssignsToProcess> | IFC4.IfcRelAssignsToProcess)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ProcessType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTypeProcess;\n        ToTape(): any[];\n    }\n    class IfcTypeProduct extends IFC4.IfcTypeObject {\n        RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null;\n        Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ReferencedBy: (Handle<IFC4.IfcRelAssignsToProduct> | IFC4.IfcRelAssignsToProduct)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTypeProduct;\n        ToTape(): any[];\n    }\n    class IfcTypeResource extends IFC4.IfcTypeObject {\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ResourceOf: (Handle<IFC4.IfcRelAssignsToResource> | IFC4.IfcRelAssignsToResource)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTypeResource;\n        ToTape(): any[];\n    }\n    class IfcUShapeProfileDef extends IFC4.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        EdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        FlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, EdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, FlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcVector extends IFC4.IfcGeometricRepresentationItem {\n        Orientation: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        Magnitude: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        constructor(expressID: number, type: number, Orientation: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection), Magnitude: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVector;\n        ToTape(): any[];\n    }\n    class IfcVertexLoop extends IFC4.IfcLoop {\n        LoopVertex: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex);\n        constructor(expressID: number, type: number, LoopVertex: (Handle<IFC4.IfcVertex> | IFC4.IfcVertex));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVertexLoop;\n        ToTape(): any[];\n    }\n    class IfcWindowStyle extends IFC4.IfcTypeProduct {\n        ConstructionType: (Handle<IFC4.IfcWindowStyleConstructionEnum> | IFC4.IfcWindowStyleConstructionEnum);\n        OperationType: (Handle<IFC4.IfcWindowStyleOperationEnum> | IFC4.IfcWindowStyleOperationEnum);\n        ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        Sizeable: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ConstructionType: (Handle<IFC4.IfcWindowStyleConstructionEnum> | IFC4.IfcWindowStyleConstructionEnum), OperationType: (Handle<IFC4.IfcWindowStyleOperationEnum> | IFC4.IfcWindowStyleOperationEnum), ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Sizeable: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowStyle;\n        ToTape(): any[];\n    }\n    class IfcZShapeProfileDef extends IFC4.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        EdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, EdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcZShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcAdvancedFace extends IFC4.IfcFaceSurface {\n        constructor(expressID: number, type: number, Bounds: (Handle<IFC4.IfcFaceBound> | IFC4.IfcFaceBound)[], FaceSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAdvancedFace;\n        ToTape(): any[];\n    }\n    class IfcAnnotationFillArea extends IFC4.IfcGeometricRepresentationItem {\n        OuterBoundary: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        InnerBoundaries: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve)[] | null;\n        constructor(expressID: number, type: number, OuterBoundary: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), InnerBoundaries: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotationFillArea;\n        ToTape(): any[];\n    }\n    class IfcAsymmetricIShapeProfileDef extends IFC4.IfcParameterizedProfileDef {\n        BottomFlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        OverallDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        BottomFlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        BottomFlangeFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        TopFlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        TopFlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        TopFlangeFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        BottomFlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        BottomFlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        TopFlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        TopFlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, BottomFlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), OverallDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), BottomFlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), BottomFlangeFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, TopFlangeWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), TopFlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, TopFlangeFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, BottomFlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, BottomFlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null, TopFlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, TopFlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAsymmetricIShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcAxis1Placement extends IFC4.IfcPlacement {\n        Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAxis1Placement;\n        ToTape(): any[];\n    }\n    class IfcAxis2Placement2D extends IFC4.IfcPlacement {\n        RefDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), RefDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAxis2Placement2D;\n        ToTape(): any[];\n    }\n    class IfcAxis2Placement3D extends IFC4.IfcPlacement {\n        Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        RefDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        constructor(expressID: number, type: number, Location: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, RefDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAxis2Placement3D;\n        ToTape(): any[];\n    }\n    class IfcBooleanResult extends IFC4.IfcGeometricRepresentationItem {\n        Operator: (Handle<IFC4.IfcBooleanOperator> | IFC4.IfcBooleanOperator);\n        FirstOperand: (Handle<IFC4.IfcBooleanOperand> | IFC4.IfcBooleanOperand);\n        SecondOperand: (Handle<IFC4.IfcBooleanOperand> | IFC4.IfcBooleanOperand);\n        constructor(expressID: number, type: number, Operator: (Handle<IFC4.IfcBooleanOperator> | IFC4.IfcBooleanOperator), FirstOperand: (Handle<IFC4.IfcBooleanOperand> | IFC4.IfcBooleanOperand), SecondOperand: (Handle<IFC4.IfcBooleanOperand> | IFC4.IfcBooleanOperand));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBooleanResult;\n        ToTape(): any[];\n    }\n    class IfcBoundedSurface extends IFC4.IfcSurface {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundedSurface;\n        ToTape(): any[];\n    }\n    class IfcBoundingBox extends IFC4.IfcGeometricRepresentationItem {\n        Corner: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint);\n        XDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        ZDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Corner: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), XDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), ZDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundingBox;\n        ToTape(): any[];\n    }\n    class IfcBoxedHalfSpace extends IFC4.IfcHalfSpaceSolid {\n        Enclosure: (Handle<IFC4.IfcBoundingBox> | IFC4.IfcBoundingBox);\n        constructor(expressID: number, type: number, BaseSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), AgreementFlag: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Enclosure: (Handle<IFC4.IfcBoundingBox> | IFC4.IfcBoundingBox));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoxedHalfSpace;\n        ToTape(): any[];\n    }\n    class IfcCShapeProfileDef extends IFC4.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        Width: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        WallThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        Girth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        InternalFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), Width: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WallThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), Girth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), InternalFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcCartesianPoint extends IFC4.IfcPoint {\n        Coordinates: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[];\n        constructor(expressID: number, type: number, Coordinates: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPoint;\n        ToTape(): any[];\n    }\n    class IfcCartesianPointList extends IFC4.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPointList;\n        ToTape(): any[];\n    }\n    class IfcCartesianPointList2D extends IFC4.IfcCartesianPointList {\n        CoordList: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[];\n        constructor(expressID: number, type: number, CoordList: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPointList2D;\n        ToTape(): any[];\n    }\n    class IfcCartesianPointList3D extends IFC4.IfcCartesianPointList {\n        CoordList: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[];\n        constructor(expressID: number, type: number, CoordList: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianPointList3D;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator extends IFC4.IfcGeometricRepresentationItem {\n        Axis1: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        Axis2: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        LocalOrigin: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint);\n        Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, Axis2: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, LocalOrigin: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator2D extends IFC4.IfcCartesianTransformationOperator {\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, Axis2: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, LocalOrigin: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator2D;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator2DnonUniform extends IFC4.IfcCartesianTransformationOperator2D {\n        Scale2: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, Axis2: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, LocalOrigin: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, Scale2: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator2DnonUniform;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator3D extends IFC4.IfcCartesianTransformationOperator {\n        Axis3: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, Axis2: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, LocalOrigin: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, Axis3: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator3D;\n        ToTape(): any[];\n    }\n    class IfcCartesianTransformationOperator3DnonUniform extends IFC4.IfcCartesianTransformationOperator3D {\n        Scale2: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        Scale3: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null;\n        constructor(expressID: number, type: number, Axis1: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, Axis2: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, LocalOrigin: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Scale: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, Axis3: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection) | null, Scale2: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null, Scale3: (Handle<IFC4.IfcReal> | IFC4.IfcReal) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCartesianTransformationOperator3DnonUniform;\n        ToTape(): any[];\n    }\n    class IfcCircleProfileDef extends IFC4.IfcParameterizedProfileDef {\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCircleProfileDef;\n        ToTape(): any[];\n    }\n    class IfcClosedShell extends IFC4.IfcConnectedFaceSet {\n        constructor(expressID: number, type: number, CfsFaces: (Handle<IFC4.IfcFace> | IFC4.IfcFace)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcClosedShell;\n        ToTape(): any[];\n    }\n    class IfcColourRgb extends IFC4.IfcColourSpecification {\n        Red: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure);\n        Green: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure);\n        Blue: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure);\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Red: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure), Green: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure), Blue: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColourRgb;\n        ToTape(): any[];\n    }\n    class IfcComplexProperty extends IFC4.IfcProperty {\n        UsageName: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier);\n        HasProperties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[];\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, UsageName: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), HasProperties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcComplexProperty;\n        ToTape(): any[];\n    }\n    class IfcCompositeCurveSegment extends IFC4.IfcGeometricRepresentationItem {\n        Transition: (Handle<IFC4.IfcTransitionCode> | IFC4.IfcTransitionCode);\n        SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        ParentCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        UsingCurves: (Handle<IFC4.IfcCompositeCurve> | IFC4.IfcCompositeCurve)[] | null;\n        constructor(expressID: number, type: number, Transition: (Handle<IFC4.IfcTransitionCode> | IFC4.IfcTransitionCode), SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), ParentCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurveSegment;\n        ToTape(): any[];\n    }\n    class IfcConstructionResourceType extends IFC4.IfcTypeResource {\n        BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null;\n        BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionResourceType;\n        ToTape(): any[];\n    }\n    class IfcContext extends IFC4.IfcObjectDefinition {\n        ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Phase: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        RepresentationContexts: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext)[] | null;\n        UnitsInContext: (Handle<IFC4.IfcUnitAssignment> | IFC4.IfcUnitAssignment) | null;\n        IsDefinedBy: (Handle<IFC4.IfcRelDefinesByProperties> | IFC4.IfcRelDefinesByProperties)[] | null;\n        Declares: (Handle<IFC4.IfcRelDeclares> | IFC4.IfcRelDeclares)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Phase: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationContexts: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext)[] | null, UnitsInContext: (Handle<IFC4.IfcUnitAssignment> | IFC4.IfcUnitAssignment) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcContext;\n        ToTape(): any[];\n    }\n    class IfcCrewResourceType extends IFC4.IfcConstructionResourceType {\n        PredefinedType: (Handle<IFC4.IfcCrewResourceTypeEnum> | IFC4.IfcCrewResourceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcCrewResourceTypeEnum> | IFC4.IfcCrewResourceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCrewResourceType;\n        ToTape(): any[];\n    }\n    class IfcCsgPrimitive3D extends IFC4.IfcGeometricRepresentationItem {\n        Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCsgPrimitive3D;\n        ToTape(): any[];\n    }\n    class IfcCsgSolid extends IFC4.IfcSolidModel {\n        TreeRootExpression: (Handle<IFC4.IfcCsgSelect> | IFC4.IfcCsgSelect);\n        constructor(expressID: number, type: number, TreeRootExpression: (Handle<IFC4.IfcCsgSelect> | IFC4.IfcCsgSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCsgSolid;\n        ToTape(): any[];\n    }\n    class IfcCurve extends IFC4.IfcGeometricRepresentationItem {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurve;\n        ToTape(): any[];\n    }\n    class IfcCurveBoundedPlane extends IFC4.IfcBoundedSurface {\n        BasisSurface: (Handle<IFC4.IfcPlane> | IFC4.IfcPlane);\n        OuterBoundary: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        InnerBoundaries: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve)[];\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC4.IfcPlane> | IFC4.IfcPlane), OuterBoundary: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), InnerBoundaries: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveBoundedPlane;\n        ToTape(): any[];\n    }\n    class IfcCurveBoundedSurface extends IFC4.IfcBoundedSurface {\n        BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface);\n        Boundaries: (Handle<IFC4.IfcBoundaryCurve> | IFC4.IfcBoundaryCurve)[];\n        ImplicitOuter: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), Boundaries: (Handle<IFC4.IfcBoundaryCurve> | IFC4.IfcBoundaryCurve)[], ImplicitOuter: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurveBoundedSurface;\n        ToTape(): any[];\n    }\n    class IfcDirection extends IFC4.IfcGeometricRepresentationItem {\n        DirectionRatios: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[];\n        constructor(expressID: number, type: number, DirectionRatios: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDirection;\n        ToTape(): any[];\n    }\n    class IfcDoorStyle extends IFC4.IfcTypeProduct {\n        OperationType: (Handle<IFC4.IfcDoorStyleOperationEnum> | IFC4.IfcDoorStyleOperationEnum);\n        ConstructionType: (Handle<IFC4.IfcDoorStyleConstructionEnum> | IFC4.IfcDoorStyleConstructionEnum);\n        ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        Sizeable: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, OperationType: (Handle<IFC4.IfcDoorStyleOperationEnum> | IFC4.IfcDoorStyleOperationEnum), ConstructionType: (Handle<IFC4.IfcDoorStyleConstructionEnum> | IFC4.IfcDoorStyleConstructionEnum), ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Sizeable: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorStyle;\n        ToTape(): any[];\n    }\n    class IfcEdgeLoop extends IFC4.IfcLoop {\n        EdgeList: (Handle<IFC4.IfcOrientedEdge> | IFC4.IfcOrientedEdge)[];\n        constructor(expressID: number, type: number, EdgeList: (Handle<IFC4.IfcOrientedEdge> | IFC4.IfcOrientedEdge)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEdgeLoop;\n        ToTape(): any[];\n    }\n    class IfcElementQuantity extends IFC4.IfcQuantitySet {\n        MethodOfMeasurement: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Quantities: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, MethodOfMeasurement: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Quantities: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementQuantity;\n        ToTape(): any[];\n    }\n    class IfcElementType extends IFC4.IfcTypeProduct {\n        ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementType;\n        ToTape(): any[];\n    }\n    class IfcElementarySurface extends IFC4.IfcSurface {\n        Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementarySurface;\n        ToTape(): any[];\n    }\n    class IfcEllipseProfileDef extends IFC4.IfcParameterizedProfileDef {\n        SemiAxis1: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        SemiAxis2: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, SemiAxis1: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), SemiAxis2: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEllipseProfileDef;\n        ToTape(): any[];\n    }\n    class IfcEventType extends IFC4.IfcTypeProcess {\n        PredefinedType: (Handle<IFC4.IfcEventTypeEnum> | IFC4.IfcEventTypeEnum);\n        EventTriggerType: (Handle<IFC4.IfcEventTriggerTypeEnum> | IFC4.IfcEventTriggerTypeEnum);\n        UserDefinedEventTriggerType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ProcessType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcEventTypeEnum> | IFC4.IfcEventTypeEnum), EventTriggerType: (Handle<IFC4.IfcEventTriggerTypeEnum> | IFC4.IfcEventTriggerTypeEnum), UserDefinedEventTriggerType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEventType;\n        ToTape(): any[];\n    }\n    class IfcExtrudedAreaSolid extends IFC4.IfcSweptAreaSolid {\n        ExtrudedDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, ExtrudedDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection), Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExtrudedAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcExtrudedAreaSolidTapered extends IFC4.IfcExtrudedAreaSolid {\n        EndSweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, ExtrudedDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection), Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), EndSweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExtrudedAreaSolidTapered;\n        ToTape(): any[];\n    }\n    class IfcFaceBasedSurfaceModel extends IFC4.IfcGeometricRepresentationItem {\n        FbsmFaces: (Handle<IFC4.IfcConnectedFaceSet> | IFC4.IfcConnectedFaceSet)[];\n        constructor(expressID: number, type: number, FbsmFaces: (Handle<IFC4.IfcConnectedFaceSet> | IFC4.IfcConnectedFaceSet)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFaceBasedSurfaceModel;\n        ToTape(): any[];\n    }\n    class IfcFillAreaStyleHatching extends IFC4.IfcGeometricRepresentationItem {\n        HatchLineAppearance: (Handle<IFC4.IfcCurveStyle> | IFC4.IfcCurveStyle);\n        StartOfNextHatchLine: (Handle<IFC4.IfcHatchLineDistanceSelect> | IFC4.IfcHatchLineDistanceSelect);\n        PointOfReferenceHatchLine: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint) | null;\n        PatternStart: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint) | null;\n        HatchLineAngle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure);\n        constructor(expressID: number, type: number, HatchLineAppearance: (Handle<IFC4.IfcCurveStyle> | IFC4.IfcCurveStyle), StartOfNextHatchLine: (Handle<IFC4.IfcHatchLineDistanceSelect> | IFC4.IfcHatchLineDistanceSelect), PointOfReferenceHatchLine: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint) | null, PatternStart: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint) | null, HatchLineAngle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyleHatching;\n        ToTape(): any[];\n    }\n    class IfcFillAreaStyleTiles extends IFC4.IfcGeometricRepresentationItem {\n        TilingPattern: (Handle<IFC4.IfcVector> | IFC4.IfcVector)[];\n        Tiles: (Handle<IFC4.IfcStyledItem> | IFC4.IfcStyledItem)[];\n        TilingScale: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure);\n        constructor(expressID: number, type: number, TilingPattern: (Handle<IFC4.IfcVector> | IFC4.IfcVector)[], Tiles: (Handle<IFC4.IfcStyledItem> | IFC4.IfcStyledItem)[], TilingScale: (Handle<IFC4.IfcPositiveRatioMeasure> | IFC4.IfcPositiveRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFillAreaStyleTiles;\n        ToTape(): any[];\n    }\n    class IfcFixedReferenceSweptAreaSolid extends IFC4.IfcSweptAreaSolid {\n        Directrix: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        StartParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null;\n        EndParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null;\n        FixedReference: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, Directrix: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), StartParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null, EndParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null, FixedReference: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFixedReferenceSweptAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcFurnishingElementType extends IFC4.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurnishingElementType;\n        ToTape(): any[];\n    }\n    class IfcFurnitureType extends IFC4.IfcFurnishingElementType {\n        AssemblyPlace: (Handle<IFC4.IfcAssemblyPlaceEnum> | IFC4.IfcAssemblyPlaceEnum);\n        PredefinedType: (Handle<IFC4.IfcFurnitureTypeEnum> | IFC4.IfcFurnitureTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, AssemblyPlace: (Handle<IFC4.IfcAssemblyPlaceEnum> | IFC4.IfcAssemblyPlaceEnum), PredefinedType: (Handle<IFC4.IfcFurnitureTypeEnum> | IFC4.IfcFurnitureTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurnitureType;\n        ToTape(): any[];\n    }\n    class IfcGeographicElementType extends IFC4.IfcElementType {\n        PredefinedType: (Handle<IFC4.IfcGeographicElementTypeEnum> | IFC4.IfcGeographicElementTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcGeographicElementTypeEnum> | IFC4.IfcGeographicElementTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeographicElementType;\n        ToTape(): any[];\n    }\n    class IfcGeometricCurveSet extends IFC4.IfcGeometricSet {\n        constructor(expressID: number, type: number, Elements: (Handle<IFC4.IfcGeometricSetSelect> | IFC4.IfcGeometricSetSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeometricCurveSet;\n        ToTape(): any[];\n    }\n    class IfcIShapeProfileDef extends IFC4.IfcParameterizedProfileDef {\n        OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        OverallDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        FlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        FlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), OverallDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WebThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FlangeThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, FlangeEdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, FlangeSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcIndexedPolygonalFace extends IFC4.IfcTessellatedItem {\n        CoordIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[];\n        ToFaceSet: (Handle<IFC4.IfcPolygonalFaceSet> | IFC4.IfcPolygonalFaceSet)[] | null;\n        constructor(expressID: number, type: number, CoordIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedPolygonalFace;\n        ToTape(): any[];\n    }\n    class IfcIndexedPolygonalFaceWithVoids extends IFC4.IfcIndexedPolygonalFace {\n        InnerCoordIndices: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[];\n        constructor(expressID: number, type: number, CoordIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[], InnerCoordIndices: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedPolygonalFaceWithVoids;\n        ToTape(): any[];\n    }\n    class IfcLShapeProfileDef extends IFC4.IfcParameterizedProfileDef {\n        Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        Width: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        Thickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        EdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        LegSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, Depth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), Width: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, Thickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), FilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, EdgeRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, LegSlope: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLShapeProfileDef;\n        ToTape(): any[];\n    }\n    class IfcLaborResourceType extends IFC4.IfcConstructionResourceType {\n        PredefinedType: (Handle<IFC4.IfcLaborResourceTypeEnum> | IFC4.IfcLaborResourceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcLaborResourceTypeEnum> | IFC4.IfcLaborResourceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLaborResourceType;\n        ToTape(): any[];\n    }\n    class IfcLine extends IFC4.IfcCurve {\n        Pnt: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint);\n        Dir: (Handle<IFC4.IfcVector> | IFC4.IfcVector);\n        constructor(expressID: number, type: number, Pnt: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint), Dir: (Handle<IFC4.IfcVector> | IFC4.IfcVector));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLine;\n        ToTape(): any[];\n    }\n    class IfcManifoldSolidBrep extends IFC4.IfcSolidModel {\n        Outer: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell);\n        constructor(expressID: number, type: number, Outer: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcManifoldSolidBrep;\n        ToTape(): any[];\n    }\n    class IfcObject extends IFC4.IfcObjectDefinition {\n        ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        IsDeclaredBy: (Handle<IFC4.IfcRelDefinesByObject> | IFC4.IfcRelDefinesByObject)[] | null;\n        Declares: (Handle<IFC4.IfcRelDefinesByObject> | IFC4.IfcRelDefinesByObject)[] | null;\n        IsTypedBy: (Handle<IFC4.IfcRelDefinesByType> | IFC4.IfcRelDefinesByType)[] | null;\n        IsDefinedBy: (Handle<IFC4.IfcRelDefinesByProperties> | IFC4.IfcRelDefinesByProperties)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcObject;\n        ToTape(): any[];\n    }\n    class IfcOffsetCurve2D extends IFC4.IfcCurve {\n        BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        Distance: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), Distance: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurve2D;\n        ToTape(): any[];\n    }\n    class IfcOffsetCurve3D extends IFC4.IfcCurve {\n        BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        Distance: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        RefDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), Distance: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), RefDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOffsetCurve3D;\n        ToTape(): any[];\n    }\n    class IfcPcurve extends IFC4.IfcCurve {\n        BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface);\n        ReferenceCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), ReferenceCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPcurve;\n        ToTape(): any[];\n    }\n    class IfcPlanarBox extends IFC4.IfcPlanarExtent {\n        Placement: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement);\n        constructor(expressID: number, type: number, SizeInX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), SizeInY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure), Placement: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlanarBox;\n        ToTape(): any[];\n    }\n    class IfcPlane extends IFC4.IfcElementarySurface {\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlane;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedColour extends IFC4.IfcPreDefinedItem {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedColour;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedCurveFont extends IFC4.IfcPreDefinedItem {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedCurveFont;\n        ToTape(): any[];\n    }\n    class IfcPreDefinedPropertySet extends IFC4.IfcPropertySetDefinition {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPreDefinedPropertySet;\n        ToTape(): any[];\n    }\n    class IfcProcedureType extends IFC4.IfcTypeProcess {\n        PredefinedType: (Handle<IFC4.IfcProcedureTypeEnum> | IFC4.IfcProcedureTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ProcessType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcProcedureTypeEnum> | IFC4.IfcProcedureTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProcedureType;\n        ToTape(): any[];\n    }\n    class IfcProcess extends IFC4.IfcObject {\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        IsPredecessorTo: (Handle<IFC4.IfcRelSequence> | IFC4.IfcRelSequence)[] | null;\n        IsSuccessorFrom: (Handle<IFC4.IfcRelSequence> | IFC4.IfcRelSequence)[] | null;\n        OperatesOn: (Handle<IFC4.IfcRelAssignsToProcess> | IFC4.IfcRelAssignsToProcess)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProcess;\n        ToTape(): any[];\n    }\n    class IfcProduct extends IFC4.IfcObject {\n        ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null;\n        Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null;\n        ReferencedBy: (Handle<IFC4.IfcRelAssignsToProduct> | IFC4.IfcRelAssignsToProduct)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProduct;\n        ToTape(): any[];\n    }\n    class IfcProject extends IFC4.IfcContext {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Phase: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationContexts: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext)[] | null, UnitsInContext: (Handle<IFC4.IfcUnitAssignment> | IFC4.IfcUnitAssignment) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProject;\n        ToTape(): any[];\n    }\n    class IfcProjectLibrary extends IFC4.IfcContext {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Phase: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RepresentationContexts: (Handle<IFC4.IfcRepresentationContext> | IFC4.IfcRepresentationContext)[] | null, UnitsInContext: (Handle<IFC4.IfcUnitAssignment> | IFC4.IfcUnitAssignment) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectLibrary;\n        ToTape(): any[];\n    }\n    class IfcPropertyBoundedValue extends IFC4.IfcSimpleProperty {\n        UpperBoundValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null;\n        LowerBoundValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null;\n        Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        SetPointValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, UpperBoundValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null, LowerBoundValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null, Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, SetPointValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyBoundedValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyEnumeratedValue extends IFC4.IfcSimpleProperty {\n        EnumerationValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null;\n        EnumerationReference: (Handle<IFC4.IfcPropertyEnumeration> | IFC4.IfcPropertyEnumeration) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, EnumerationValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null, EnumerationReference: (Handle<IFC4.IfcPropertyEnumeration> | IFC4.IfcPropertyEnumeration) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyEnumeratedValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyListValue extends IFC4.IfcSimpleProperty {\n        ListValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null;\n        Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ListValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null, Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyListValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyReferenceValue extends IFC4.IfcSimpleProperty {\n        UsageName: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        PropertyReference: (Handle<IFC4.IfcObjectReferenceSelect> | IFC4.IfcObjectReferenceSelect) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, UsageName: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, PropertyReference: (Handle<IFC4.IfcObjectReferenceSelect> | IFC4.IfcObjectReferenceSelect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyReferenceValue;\n        ToTape(): any[];\n    }\n    class IfcPropertySet extends IFC4.IfcPropertySetDefinition {\n        HasProperties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, HasProperties: (Handle<IFC4.IfcProperty> | IFC4.IfcProperty)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySet;\n        ToTape(): any[];\n    }\n    class IfcPropertySetTemplate extends IFC4.IfcPropertyTemplateDefinition {\n        TemplateType: (Handle<IFC4.IfcPropertySetTemplateTypeEnum> | IFC4.IfcPropertySetTemplateTypeEnum) | null;\n        ApplicableEntity: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        HasPropertyTemplates: (Handle<IFC4.IfcPropertyTemplate> | IFC4.IfcPropertyTemplate)[];\n        Defines: (Handle<IFC4.IfcRelDefinesByTemplate> | IFC4.IfcRelDefinesByTemplate)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, TemplateType: (Handle<IFC4.IfcPropertySetTemplateTypeEnum> | IFC4.IfcPropertySetTemplateTypeEnum) | null, ApplicableEntity: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertyTemplates: (Handle<IFC4.IfcPropertyTemplate> | IFC4.IfcPropertyTemplate)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySetTemplate;\n        ToTape(): any[];\n    }\n    class IfcPropertySingleValue extends IFC4.IfcSimpleProperty {\n        NominalValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null;\n        Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, NominalValue: (Handle<IFC4.IfcValue> | IFC4.IfcValue) | null, Unit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertySingleValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyTableValue extends IFC4.IfcSimpleProperty {\n        DefiningValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null;\n        DefinedValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null;\n        Expression: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        DefiningUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        DefinedUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        CurveInterpolation: (Handle<IFC4.IfcCurveInterpolationEnum> | IFC4.IfcCurveInterpolationEnum) | null;\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier), Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, DefiningValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null, DefinedValues: (Handle<IFC4.IfcValue> | IFC4.IfcValue)[] | null, Expression: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, DefiningUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, DefinedUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, CurveInterpolation: (Handle<IFC4.IfcCurveInterpolationEnum> | IFC4.IfcCurveInterpolationEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyTableValue;\n        ToTape(): any[];\n    }\n    class IfcPropertyTemplate extends IFC4.IfcPropertyTemplateDefinition {\n        PartOfComplexTemplate: (Handle<IFC4.IfcComplexPropertyTemplate> | IFC4.IfcComplexPropertyTemplate)[] | null;\n        PartOfPsetTemplate: (Handle<IFC4.IfcPropertySetTemplate> | IFC4.IfcPropertySetTemplate)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPropertyTemplate;\n        ToTape(): any[];\n    }\n    class IfcProxy extends IFC4.IfcProduct {\n        ProxyType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum);\n        Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, ProxyType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum), Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProxy;\n        ToTape(): any[];\n    }\n    class IfcRectangleHollowProfileDef extends IFC4.IfcRectangleProfileDef {\n        WallThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        InnerFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        OuterFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, XDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), YDim: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WallThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), InnerFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, OuterFilletRadius: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangleHollowProfileDef;\n        ToTape(): any[];\n    }\n    class IfcRectangularPyramid extends IFC4.IfcCsgPrimitive3D {\n        XLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        YLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        Height: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), XLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), YLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), Height: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangularPyramid;\n        ToTape(): any[];\n    }\n    class IfcRectangularTrimmedSurface extends IFC4.IfcBoundedSurface {\n        BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface);\n        U1: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        V1: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        U2: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        V2: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        Usense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        Vsense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        constructor(expressID: number, type: number, BasisSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface), U1: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue), V1: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue), U2: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue), V2: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue), Usense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Vsense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRectangularTrimmedSurface;\n        ToTape(): any[];\n    }\n    class IfcReinforcementDefinitionProperties extends IFC4.IfcPreDefinedPropertySet {\n        DefinitionType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ReinforcementSectionDefinitions: (Handle<IFC4.IfcSectionReinforcementProperties> | IFC4.IfcSectionReinforcementProperties)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, DefinitionType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ReinforcementSectionDefinitions: (Handle<IFC4.IfcSectionReinforcementProperties> | IFC4.IfcSectionReinforcementProperties)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcementDefinitionProperties;\n        ToTape(): any[];\n    }\n    class IfcRelAssigns extends IFC4.IfcRelationship {\n        RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[];\n        RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssigns;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToActor extends IFC4.IfcRelAssigns {\n        RelatingActor: (Handle<IFC4.IfcActor> | IFC4.IfcActor);\n        ActingRole: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null, RelatingActor: (Handle<IFC4.IfcActor> | IFC4.IfcActor), ActingRole: (Handle<IFC4.IfcActorRole> | IFC4.IfcActorRole) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToActor;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToControl extends IFC4.IfcRelAssigns {\n        RelatingControl: (Handle<IFC4.IfcControl> | IFC4.IfcControl);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null, RelatingControl: (Handle<IFC4.IfcControl> | IFC4.IfcControl));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToControl;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToGroup extends IFC4.IfcRelAssigns {\n        RelatingGroup: (Handle<IFC4.IfcGroup> | IFC4.IfcGroup);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null, RelatingGroup: (Handle<IFC4.IfcGroup> | IFC4.IfcGroup));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToGroup;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToGroupByFactor extends IFC4.IfcRelAssignsToGroup {\n        Factor: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null, RelatingGroup: (Handle<IFC4.IfcGroup> | IFC4.IfcGroup), Factor: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToGroupByFactor;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToProcess extends IFC4.IfcRelAssigns {\n        RelatingProcess: (Handle<IFC4.IfcProcessSelect> | IFC4.IfcProcessSelect);\n        QuantityInProcess: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null, RelatingProcess: (Handle<IFC4.IfcProcessSelect> | IFC4.IfcProcessSelect), QuantityInProcess: (Handle<IFC4.IfcMeasureWithUnit> | IFC4.IfcMeasureWithUnit) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToProcess;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToProduct extends IFC4.IfcRelAssigns {\n        RelatingProduct: (Handle<IFC4.IfcProductSelect> | IFC4.IfcProductSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null, RelatingProduct: (Handle<IFC4.IfcProductSelect> | IFC4.IfcProductSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToProduct;\n        ToTape(): any[];\n    }\n    class IfcRelAssignsToResource extends IFC4.IfcRelAssigns {\n        RelatingResource: (Handle<IFC4.IfcResourceSelect> | IFC4.IfcResourceSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatedObjectsType: (Handle<IFC4.IfcObjectTypeEnum> | IFC4.IfcObjectTypeEnum) | null, RelatingResource: (Handle<IFC4.IfcResourceSelect> | IFC4.IfcResourceSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssignsToResource;\n        ToTape(): any[];\n    }\n    class IfcRelAssociates extends IFC4.IfcRelationship {\n        RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociates;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesApproval extends IFC4.IfcRelAssociates {\n        RelatingApproval: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[], RelatingApproval: (Handle<IFC4.IfcApproval> | IFC4.IfcApproval));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesApproval;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesClassification extends IFC4.IfcRelAssociates {\n        RelatingClassification: (Handle<IFC4.IfcClassificationSelect> | IFC4.IfcClassificationSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[], RelatingClassification: (Handle<IFC4.IfcClassificationSelect> | IFC4.IfcClassificationSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesClassification;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesConstraint extends IFC4.IfcRelAssociates {\n        Intent: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        RelatingConstraint: (Handle<IFC4.IfcConstraint> | IFC4.IfcConstraint);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[], Intent: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, RelatingConstraint: (Handle<IFC4.IfcConstraint> | IFC4.IfcConstraint));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesConstraint;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesDocument extends IFC4.IfcRelAssociates {\n        RelatingDocument: (Handle<IFC4.IfcDocumentSelect> | IFC4.IfcDocumentSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[], RelatingDocument: (Handle<IFC4.IfcDocumentSelect> | IFC4.IfcDocumentSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesDocument;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesLibrary extends IFC4.IfcRelAssociates {\n        RelatingLibrary: (Handle<IFC4.IfcLibrarySelect> | IFC4.IfcLibrarySelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[], RelatingLibrary: (Handle<IFC4.IfcLibrarySelect> | IFC4.IfcLibrarySelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesLibrary;\n        ToTape(): any[];\n    }\n    class IfcRelAssociatesMaterial extends IFC4.IfcRelAssociates {\n        RelatingMaterial: (Handle<IFC4.IfcMaterialSelect> | IFC4.IfcMaterialSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[], RelatingMaterial: (Handle<IFC4.IfcMaterialSelect> | IFC4.IfcMaterialSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAssociatesMaterial;\n        ToTape(): any[];\n    }\n    class IfcRelConnects extends IFC4.IfcRelationship {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnects;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsElements extends IFC4.IfcRelConnects {\n        ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null;\n        RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        RelatedElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null, RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatedElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsElements;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsPathElements extends IFC4.IfcRelConnectsElements {\n        RelatingPriorities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[];\n        RelatedPriorities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[];\n        RelatedConnectionType: (Handle<IFC4.IfcConnectionTypeEnum> | IFC4.IfcConnectionTypeEnum);\n        RelatingConnectionType: (Handle<IFC4.IfcConnectionTypeEnum> | IFC4.IfcConnectionTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null, RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatedElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatingPriorities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], RelatedPriorities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], RelatedConnectionType: (Handle<IFC4.IfcConnectionTypeEnum> | IFC4.IfcConnectionTypeEnum), RelatingConnectionType: (Handle<IFC4.IfcConnectionTypeEnum> | IFC4.IfcConnectionTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPathElements;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsPortToElement extends IFC4.IfcRelConnects {\n        RelatingPort: (Handle<IFC4.IfcPort> | IFC4.IfcPort);\n        RelatedElement: (Handle<IFC4.IfcDistributionElement> | IFC4.IfcDistributionElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingPort: (Handle<IFC4.IfcPort> | IFC4.IfcPort), RelatedElement: (Handle<IFC4.IfcDistributionElement> | IFC4.IfcDistributionElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPortToElement;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsPorts extends IFC4.IfcRelConnects {\n        RelatingPort: (Handle<IFC4.IfcPort> | IFC4.IfcPort);\n        RelatedPort: (Handle<IFC4.IfcPort> | IFC4.IfcPort);\n        RealizingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingPort: (Handle<IFC4.IfcPort> | IFC4.IfcPort), RelatedPort: (Handle<IFC4.IfcPort> | IFC4.IfcPort), RealizingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsPorts;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsStructuralActivity extends IFC4.IfcRelConnects {\n        RelatingElement: (Handle<IFC4.IfcStructuralActivityAssignmentSelect> | IFC4.IfcStructuralActivityAssignmentSelect);\n        RelatedStructuralActivity: (Handle<IFC4.IfcStructuralActivity> | IFC4.IfcStructuralActivity);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingElement: (Handle<IFC4.IfcStructuralActivityAssignmentSelect> | IFC4.IfcStructuralActivityAssignmentSelect), RelatedStructuralActivity: (Handle<IFC4.IfcStructuralActivity> | IFC4.IfcStructuralActivity));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsStructuralActivity;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsStructuralMember extends IFC4.IfcRelConnects {\n        RelatingStructuralMember: (Handle<IFC4.IfcStructuralMember> | IFC4.IfcStructuralMember);\n        RelatedStructuralConnection: (Handle<IFC4.IfcStructuralConnection> | IFC4.IfcStructuralConnection);\n        AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null;\n        AdditionalConditions: (Handle<IFC4.IfcStructuralConnectionCondition> | IFC4.IfcStructuralConnectionCondition) | null;\n        SupportedLength: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        ConditionCoordinateSystem: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingStructuralMember: (Handle<IFC4.IfcStructuralMember> | IFC4.IfcStructuralMember), RelatedStructuralConnection: (Handle<IFC4.IfcStructuralConnection> | IFC4.IfcStructuralConnection), AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null, AdditionalConditions: (Handle<IFC4.IfcStructuralConnectionCondition> | IFC4.IfcStructuralConnectionCondition) | null, SupportedLength: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, ConditionCoordinateSystem: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsStructuralMember;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsWithEccentricity extends IFC4.IfcRelConnectsStructuralMember {\n        ConnectionConstraint: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingStructuralMember: (Handle<IFC4.IfcStructuralMember> | IFC4.IfcStructuralMember), RelatedStructuralConnection: (Handle<IFC4.IfcStructuralConnection> | IFC4.IfcStructuralConnection), AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null, AdditionalConditions: (Handle<IFC4.IfcStructuralConnectionCondition> | IFC4.IfcStructuralConnectionCondition) | null, SupportedLength: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, ConditionCoordinateSystem: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, ConnectionConstraint: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsWithEccentricity;\n        ToTape(): any[];\n    }\n    class IfcRelConnectsWithRealizingElements extends IFC4.IfcRelConnectsElements {\n        RealizingElements: (Handle<IFC4.IfcElement> | IFC4.IfcElement)[];\n        ConnectionType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null, RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatedElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RealizingElements: (Handle<IFC4.IfcElement> | IFC4.IfcElement)[], ConnectionType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelConnectsWithRealizingElements;\n        ToTape(): any[];\n    }\n    class IfcRelContainedInSpatialStructure extends IFC4.IfcRelConnects {\n        RelatedElements: (Handle<IFC4.IfcProduct> | IFC4.IfcProduct)[];\n        RelatingStructure: (Handle<IFC4.IfcSpatialElement> | IFC4.IfcSpatialElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedElements: (Handle<IFC4.IfcProduct> | IFC4.IfcProduct)[], RelatingStructure: (Handle<IFC4.IfcSpatialElement> | IFC4.IfcSpatialElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelContainedInSpatialStructure;\n        ToTape(): any[];\n    }\n    class IfcRelCoversBldgElements extends IFC4.IfcRelConnects {\n        RelatingBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        RelatedCoverings: (Handle<IFC4.IfcCovering> | IFC4.IfcCovering)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatedCoverings: (Handle<IFC4.IfcCovering> | IFC4.IfcCovering)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelCoversBldgElements;\n        ToTape(): any[];\n    }\n    class IfcRelCoversSpaces extends IFC4.IfcRelConnects {\n        RelatingSpace: (Handle<IFC4.IfcSpace> | IFC4.IfcSpace);\n        RelatedCoverings: (Handle<IFC4.IfcCovering> | IFC4.IfcCovering)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingSpace: (Handle<IFC4.IfcSpace> | IFC4.IfcSpace), RelatedCoverings: (Handle<IFC4.IfcCovering> | IFC4.IfcCovering)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelCoversSpaces;\n        ToTape(): any[];\n    }\n    class IfcRelDeclares extends IFC4.IfcRelationship {\n        RelatingContext: (Handle<IFC4.IfcContext> | IFC4.IfcContext);\n        RelatedDefinitions: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingContext: (Handle<IFC4.IfcContext> | IFC4.IfcContext), RelatedDefinitions: (Handle<IFC4.IfcDefinitionSelect> | IFC4.IfcDefinitionSelect)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDeclares;\n        ToTape(): any[];\n    }\n    class IfcRelDecomposes extends IFC4.IfcRelationship {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDecomposes;\n        ToTape(): any[];\n    }\n    class IfcRelDefines extends IFC4.IfcRelationship {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefines;\n        ToTape(): any[];\n    }\n    class IfcRelDefinesByObject extends IFC4.IfcRelDefines {\n        RelatedObjects: (Handle<IFC4.IfcObject> | IFC4.IfcObject)[];\n        RelatingObject: (Handle<IFC4.IfcObject> | IFC4.IfcObject);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObject> | IFC4.IfcObject)[], RelatingObject: (Handle<IFC4.IfcObject> | IFC4.IfcObject));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByObject;\n        ToTape(): any[];\n    }\n    class IfcRelDefinesByProperties extends IFC4.IfcRelDefines {\n        RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[];\n        RelatingPropertyDefinition: (Handle<IFC4.IfcPropertySetDefinitionSelect> | IFC4.IfcPropertySetDefinitionSelect);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[], RelatingPropertyDefinition: (Handle<IFC4.IfcPropertySetDefinitionSelect> | IFC4.IfcPropertySetDefinitionSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByProperties;\n        ToTape(): any[];\n    }\n    class IfcRelDefinesByTemplate extends IFC4.IfcRelDefines {\n        RelatedPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[];\n        RelatingTemplate: (Handle<IFC4.IfcPropertySetTemplate> | IFC4.IfcPropertySetTemplate);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[], RelatingTemplate: (Handle<IFC4.IfcPropertySetTemplate> | IFC4.IfcPropertySetTemplate));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByTemplate;\n        ToTape(): any[];\n    }\n    class IfcRelDefinesByType extends IFC4.IfcRelDefines {\n        RelatedObjects: (Handle<IFC4.IfcObject> | IFC4.IfcObject)[];\n        RelatingType: (Handle<IFC4.IfcTypeObject> | IFC4.IfcTypeObject);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedObjects: (Handle<IFC4.IfcObject> | IFC4.IfcObject)[], RelatingType: (Handle<IFC4.IfcTypeObject> | IFC4.IfcTypeObject));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelDefinesByType;\n        ToTape(): any[];\n    }\n    class IfcRelFillsElement extends IFC4.IfcRelConnects {\n        RelatingOpeningElement: (Handle<IFC4.IfcOpeningElement> | IFC4.IfcOpeningElement);\n        RelatedBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingOpeningElement: (Handle<IFC4.IfcOpeningElement> | IFC4.IfcOpeningElement), RelatedBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelFillsElement;\n        ToTape(): any[];\n    }\n    class IfcRelFlowControlElements extends IFC4.IfcRelConnects {\n        RelatedControlElements: (Handle<IFC4.IfcDistributionControlElement> | IFC4.IfcDistributionControlElement)[];\n        RelatingFlowElement: (Handle<IFC4.IfcDistributionFlowElement> | IFC4.IfcDistributionFlowElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedControlElements: (Handle<IFC4.IfcDistributionControlElement> | IFC4.IfcDistributionControlElement)[], RelatingFlowElement: (Handle<IFC4.IfcDistributionFlowElement> | IFC4.IfcDistributionFlowElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelFlowControlElements;\n        ToTape(): any[];\n    }\n    class IfcRelInterferesElements extends IFC4.IfcRelConnects {\n        RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        RelatedElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        InterferenceGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null;\n        InterferenceType: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        ImpliedOrder: boolean;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatedElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), InterferenceGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null, InterferenceType: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, ImpliedOrder: boolean);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelInterferesElements;\n        ToTape(): any[];\n    }\n    class IfcRelNests extends IFC4.IfcRelDecomposes {\n        RelatingObject: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition);\n        RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingObject: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition), RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelNests;\n        ToTape(): any[];\n    }\n    class IfcRelProjectsElement extends IFC4.IfcRelDecomposes {\n        RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        RelatedFeatureElement: (Handle<IFC4.IfcFeatureElementAddition> | IFC4.IfcFeatureElementAddition);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatedFeatureElement: (Handle<IFC4.IfcFeatureElementAddition> | IFC4.IfcFeatureElementAddition));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelProjectsElement;\n        ToTape(): any[];\n    }\n    class IfcRelReferencedInSpatialStructure extends IFC4.IfcRelConnects {\n        RelatedElements: (Handle<IFC4.IfcProduct> | IFC4.IfcProduct)[];\n        RelatingStructure: (Handle<IFC4.IfcSpatialElement> | IFC4.IfcSpatialElement);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatedElements: (Handle<IFC4.IfcProduct> | IFC4.IfcProduct)[], RelatingStructure: (Handle<IFC4.IfcSpatialElement> | IFC4.IfcSpatialElement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelReferencedInSpatialStructure;\n        ToTape(): any[];\n    }\n    class IfcRelSequence extends IFC4.IfcRelConnects {\n        RelatingProcess: (Handle<IFC4.IfcProcess> | IFC4.IfcProcess);\n        RelatedProcess: (Handle<IFC4.IfcProcess> | IFC4.IfcProcess);\n        TimeLag: (Handle<IFC4.IfcLagTime> | IFC4.IfcLagTime) | null;\n        SequenceType: (Handle<IFC4.IfcSequenceEnum> | IFC4.IfcSequenceEnum) | null;\n        UserDefinedSequenceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingProcess: (Handle<IFC4.IfcProcess> | IFC4.IfcProcess), RelatedProcess: (Handle<IFC4.IfcProcess> | IFC4.IfcProcess), TimeLag: (Handle<IFC4.IfcLagTime> | IFC4.IfcLagTime) | null, SequenceType: (Handle<IFC4.IfcSequenceEnum> | IFC4.IfcSequenceEnum) | null, UserDefinedSequenceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelSequence;\n        ToTape(): any[];\n    }\n    class IfcRelServicesBuildings extends IFC4.IfcRelConnects {\n        RelatingSystem: (Handle<IFC4.IfcSystem> | IFC4.IfcSystem);\n        RelatedBuildings: (Handle<IFC4.IfcSpatialElement> | IFC4.IfcSpatialElement)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingSystem: (Handle<IFC4.IfcSystem> | IFC4.IfcSystem), RelatedBuildings: (Handle<IFC4.IfcSpatialElement> | IFC4.IfcSpatialElement)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelServicesBuildings;\n        ToTape(): any[];\n    }\n    class IfcRelSpaceBoundary extends IFC4.IfcRelConnects {\n        RelatingSpace: (Handle<IFC4.IfcSpaceBoundarySelect> | IFC4.IfcSpaceBoundarySelect);\n        RelatedBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null;\n        PhysicalOrVirtualBoundary: (Handle<IFC4.IfcPhysicalOrVirtualEnum> | IFC4.IfcPhysicalOrVirtualEnum);\n        InternalOrExternalBoundary: (Handle<IFC4.IfcInternalOrExternalEnum> | IFC4.IfcInternalOrExternalEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingSpace: (Handle<IFC4.IfcSpaceBoundarySelect> | IFC4.IfcSpaceBoundarySelect), RelatedBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null, PhysicalOrVirtualBoundary: (Handle<IFC4.IfcPhysicalOrVirtualEnum> | IFC4.IfcPhysicalOrVirtualEnum), InternalOrExternalBoundary: (Handle<IFC4.IfcInternalOrExternalEnum> | IFC4.IfcInternalOrExternalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelSpaceBoundary;\n        ToTape(): any[];\n    }\n    class IfcRelSpaceBoundary1stLevel extends IFC4.IfcRelSpaceBoundary {\n        ParentBoundary: (Handle<IFC4.IfcRelSpaceBoundary1stLevel> | IFC4.IfcRelSpaceBoundary1stLevel) | null;\n        InnerBoundaries: (Handle<IFC4.IfcRelSpaceBoundary1stLevel> | IFC4.IfcRelSpaceBoundary1stLevel)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingSpace: (Handle<IFC4.IfcSpaceBoundarySelect> | IFC4.IfcSpaceBoundarySelect), RelatedBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null, PhysicalOrVirtualBoundary: (Handle<IFC4.IfcPhysicalOrVirtualEnum> | IFC4.IfcPhysicalOrVirtualEnum), InternalOrExternalBoundary: (Handle<IFC4.IfcInternalOrExternalEnum> | IFC4.IfcInternalOrExternalEnum), ParentBoundary: (Handle<IFC4.IfcRelSpaceBoundary1stLevel> | IFC4.IfcRelSpaceBoundary1stLevel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelSpaceBoundary1stLevel;\n        ToTape(): any[];\n    }\n    class IfcRelSpaceBoundary2ndLevel extends IFC4.IfcRelSpaceBoundary1stLevel {\n        CorrespondingBoundary: (Handle<IFC4.IfcRelSpaceBoundary2ndLevel> | IFC4.IfcRelSpaceBoundary2ndLevel) | null;\n        Corresponds: (Handle<IFC4.IfcRelSpaceBoundary2ndLevel> | IFC4.IfcRelSpaceBoundary2ndLevel)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingSpace: (Handle<IFC4.IfcSpaceBoundarySelect> | IFC4.IfcSpaceBoundarySelect), RelatedBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), ConnectionGeometry: (Handle<IFC4.IfcConnectionGeometry> | IFC4.IfcConnectionGeometry) | null, PhysicalOrVirtualBoundary: (Handle<IFC4.IfcPhysicalOrVirtualEnum> | IFC4.IfcPhysicalOrVirtualEnum), InternalOrExternalBoundary: (Handle<IFC4.IfcInternalOrExternalEnum> | IFC4.IfcInternalOrExternalEnum), ParentBoundary: (Handle<IFC4.IfcRelSpaceBoundary1stLevel> | IFC4.IfcRelSpaceBoundary1stLevel) | null, CorrespondingBoundary: (Handle<IFC4.IfcRelSpaceBoundary2ndLevel> | IFC4.IfcRelSpaceBoundary2ndLevel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelSpaceBoundary2ndLevel;\n        ToTape(): any[];\n    }\n    class IfcRelVoidsElement extends IFC4.IfcRelDecomposes {\n        RelatingBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement);\n        RelatedOpeningElement: (Handle<IFC4.IfcFeatureElementSubtraction> | IFC4.IfcFeatureElementSubtraction);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingBuildingElement: (Handle<IFC4.IfcElement> | IFC4.IfcElement), RelatedOpeningElement: (Handle<IFC4.IfcFeatureElementSubtraction> | IFC4.IfcFeatureElementSubtraction));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelVoidsElement;\n        ToTape(): any[];\n    }\n    class IfcReparametrisedCompositeCurveSegment extends IFC4.IfcCompositeCurveSegment {\n        ParamLength: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue);\n        constructor(expressID: number, type: number, Transition: (Handle<IFC4.IfcTransitionCode> | IFC4.IfcTransitionCode), SameSense: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), ParentCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), ParamLength: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReparametrisedCompositeCurveSegment;\n        ToTape(): any[];\n    }\n    class IfcResource extends IFC4.IfcObject {\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        ResourceOf: (Handle<IFC4.IfcRelAssignsToResource> | IFC4.IfcRelAssignsToResource)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcResource;\n        ToTape(): any[];\n    }\n    class IfcRevolvedAreaSolid extends IFC4.IfcSweptAreaSolid {\n        Axis: (Handle<IFC4.IfcAxis1Placement> | IFC4.IfcAxis1Placement);\n        Angle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, Axis: (Handle<IFC4.IfcAxis1Placement> | IFC4.IfcAxis1Placement), Angle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRevolvedAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcRevolvedAreaSolidTapered extends IFC4.IfcRevolvedAreaSolid {\n        EndSweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, Axis: (Handle<IFC4.IfcAxis1Placement> | IFC4.IfcAxis1Placement), Angle: (Handle<IFC4.IfcPlaneAngleMeasure> | IFC4.IfcPlaneAngleMeasure), EndSweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRevolvedAreaSolidTapered;\n        ToTape(): any[];\n    }\n    class IfcRightCircularCone extends IFC4.IfcCsgPrimitive3D {\n        Height: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        BottomRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), Height: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), BottomRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRightCircularCone;\n        ToTape(): any[];\n    }\n    class IfcRightCircularCylinder extends IFC4.IfcCsgPrimitive3D {\n        Height: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), Height: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRightCircularCylinder;\n        ToTape(): any[];\n    }\n    class IfcSimplePropertyTemplate extends IFC4.IfcPropertyTemplate {\n        TemplateType: (Handle<IFC4.IfcSimplePropertyTemplateTypeEnum> | IFC4.IfcSimplePropertyTemplateTypeEnum) | null;\n        PrimaryMeasureType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        SecondaryMeasureType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Enumerators: (Handle<IFC4.IfcPropertyEnumeration> | IFC4.IfcPropertyEnumeration) | null;\n        PrimaryUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        SecondaryUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null;\n        Expression: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        AccessState: (Handle<IFC4.IfcStateEnum> | IFC4.IfcStateEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, TemplateType: (Handle<IFC4.IfcSimplePropertyTemplateTypeEnum> | IFC4.IfcSimplePropertyTemplateTypeEnum) | null, PrimaryMeasureType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, SecondaryMeasureType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Enumerators: (Handle<IFC4.IfcPropertyEnumeration> | IFC4.IfcPropertyEnumeration) | null, PrimaryUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, SecondaryUnit: (Handle<IFC4.IfcUnit> | IFC4.IfcUnit) | null, Expression: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, AccessState: (Handle<IFC4.IfcStateEnum> | IFC4.IfcStateEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSimplePropertyTemplate;\n        ToTape(): any[];\n    }\n    class IfcSpatialElement extends IFC4.IfcProduct {\n        LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        ContainsElements: (Handle<IFC4.IfcRelContainedInSpatialStructure> | IFC4.IfcRelContainedInSpatialStructure)[] | null;\n        ServicedBySystems: (Handle<IFC4.IfcRelServicesBuildings> | IFC4.IfcRelServicesBuildings)[] | null;\n        ReferencesElements: (Handle<IFC4.IfcRelReferencedInSpatialStructure> | IFC4.IfcRelReferencedInSpatialStructure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialElement;\n        ToTape(): any[];\n    }\n    class IfcSpatialElementType extends IFC4.IfcTypeProduct {\n        ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialElementType;\n        ToTape(): any[];\n    }\n    class IfcSpatialStructureElement extends IFC4.IfcSpatialElement {\n        CompositionType: (Handle<IFC4.IfcElementCompositionEnum> | IFC4.IfcElementCompositionEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CompositionType: (Handle<IFC4.IfcElementCompositionEnum> | IFC4.IfcElementCompositionEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialStructureElement;\n        ToTape(): any[];\n    }\n    class IfcSpatialStructureElementType extends IFC4.IfcSpatialElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialStructureElementType;\n        ToTape(): any[];\n    }\n    class IfcSpatialZone extends IFC4.IfcSpatialElement {\n        PredefinedType: (Handle<IFC4.IfcSpatialZoneTypeEnum> | IFC4.IfcSpatialZoneTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSpatialZoneTypeEnum> | IFC4.IfcSpatialZoneTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialZone;\n        ToTape(): any[];\n    }\n    class IfcSpatialZoneType extends IFC4.IfcSpatialElementType {\n        PredefinedType: (Handle<IFC4.IfcSpatialZoneTypeEnum> | IFC4.IfcSpatialZoneTypeEnum);\n        LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSpatialZoneTypeEnum> | IFC4.IfcSpatialZoneTypeEnum), LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpatialZoneType;\n        ToTape(): any[];\n    }\n    class IfcSphere extends IFC4.IfcCsgPrimitive3D {\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSphere;\n        ToTape(): any[];\n    }\n    class IfcSphericalSurface extends IFC4.IfcElementarySurface {\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSphericalSurface;\n        ToTape(): any[];\n    }\n    class IfcStructuralActivity extends IFC4.IfcProduct {\n        AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad);\n        GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum);\n        AssignedToStructuralItem: (Handle<IFC4.IfcRelConnectsStructuralActivity> | IFC4.IfcRelConnectsStructuralActivity)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralActivity;\n        ToTape(): any[];\n    }\n    class IfcStructuralItem extends IFC4.IfcProduct {\n        AssignedStructuralActivity: (Handle<IFC4.IfcRelConnectsStructuralActivity> | IFC4.IfcRelConnectsStructuralActivity)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralItem;\n        ToTape(): any[];\n    }\n    class IfcStructuralMember extends IFC4.IfcStructuralItem {\n        ConnectedBy: (Handle<IFC4.IfcRelConnectsStructuralMember> | IFC4.IfcRelConnectsStructuralMember)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralMember;\n        ToTape(): any[];\n    }\n    class IfcStructuralReaction extends IFC4.IfcStructuralActivity {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralReaction;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceMember extends IFC4.IfcStructuralMember {\n        PredefinedType: (Handle<IFC4.IfcStructuralSurfaceMemberTypeEnum> | IFC4.IfcStructuralSurfaceMemberTypeEnum);\n        Thickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC4.IfcStructuralSurfaceMemberTypeEnum> | IFC4.IfcStructuralSurfaceMemberTypeEnum), Thickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceMember;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceMemberVarying extends IFC4.IfcStructuralSurfaceMember {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC4.IfcStructuralSurfaceMemberTypeEnum> | IFC4.IfcStructuralSurfaceMemberTypeEnum), Thickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceMemberVarying;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceReaction extends IFC4.IfcStructuralReaction {\n        PredefinedType: (Handle<IFC4.IfcStructuralSurfaceActivityTypeEnum> | IFC4.IfcStructuralSurfaceActivityTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), PredefinedType: (Handle<IFC4.IfcStructuralSurfaceActivityTypeEnum> | IFC4.IfcStructuralSurfaceActivityTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceReaction;\n        ToTape(): any[];\n    }\n    class IfcSubContractResourceType extends IFC4.IfcConstructionResourceType {\n        PredefinedType: (Handle<IFC4.IfcSubContractResourceTypeEnum> | IFC4.IfcSubContractResourceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcSubContractResourceTypeEnum> | IFC4.IfcSubContractResourceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSubContractResourceType;\n        ToTape(): any[];\n    }\n    class IfcSurfaceCurve extends IFC4.IfcCurve {\n        Curve3D: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        AssociatedGeometry: (Handle<IFC4.IfcPcurve> | IFC4.IfcPcurve)[];\n        MasterRepresentation: (Handle<IFC4.IfcPreferredSurfaceCurveRepresentation> | IFC4.IfcPreferredSurfaceCurveRepresentation);\n        constructor(expressID: number, type: number, Curve3D: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), AssociatedGeometry: (Handle<IFC4.IfcPcurve> | IFC4.IfcPcurve)[], MasterRepresentation: (Handle<IFC4.IfcPreferredSurfaceCurveRepresentation> | IFC4.IfcPreferredSurfaceCurveRepresentation));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceCurve;\n        ToTape(): any[];\n    }\n    class IfcSurfaceCurveSweptAreaSolid extends IFC4.IfcSweptAreaSolid {\n        Directrix: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        StartParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null;\n        EndParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null;\n        ReferenceSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface);\n        constructor(expressID: number, type: number, SweptArea: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, Directrix: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), StartParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null, EndParam: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue) | null, ReferenceSurface: (Handle<IFC4.IfcSurface> | IFC4.IfcSurface));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceCurveSweptAreaSolid;\n        ToTape(): any[];\n    }\n    class IfcSurfaceOfLinearExtrusion extends IFC4.IfcSweptSurface {\n        ExtrudedDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        Depth: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure);\n        constructor(expressID: number, type: number, SweptCurve: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, ExtrudedDirection: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection), Depth: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceOfLinearExtrusion;\n        ToTape(): any[];\n    }\n    class IfcSurfaceOfRevolution extends IFC4.IfcSweptSurface {\n        AxisPosition: (Handle<IFC4.IfcAxis1Placement> | IFC4.IfcAxis1Placement);\n        constructor(expressID: number, type: number, SweptCurve: (Handle<IFC4.IfcProfileDef> | IFC4.IfcProfileDef), Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, AxisPosition: (Handle<IFC4.IfcAxis1Placement> | IFC4.IfcAxis1Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceOfRevolution;\n        ToTape(): any[];\n    }\n    class IfcSystemFurnitureElementType extends IFC4.IfcFurnishingElementType {\n        PredefinedType: (Handle<IFC4.IfcSystemFurnitureElementTypeEnum> | IFC4.IfcSystemFurnitureElementTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSystemFurnitureElementTypeEnum> | IFC4.IfcSystemFurnitureElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSystemFurnitureElementType;\n        ToTape(): any[];\n    }\n    class IfcTask extends IFC4.IfcProcess {\n        Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        WorkMethod: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        IsMilestone: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        TaskTime: (Handle<IFC4.IfcTaskTime> | IFC4.IfcTaskTime) | null;\n        PredefinedType: (Handle<IFC4.IfcTaskTypeEnum> | IFC4.IfcTaskTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, WorkMethod: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, IsMilestone: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), Priority: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, TaskTime: (Handle<IFC4.IfcTaskTime> | IFC4.IfcTaskTime) | null, PredefinedType: (Handle<IFC4.IfcTaskTypeEnum> | IFC4.IfcTaskTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTask;\n        ToTape(): any[];\n    }\n    class IfcTaskType extends IFC4.IfcTypeProcess {\n        PredefinedType: (Handle<IFC4.IfcTaskTypeEnum> | IFC4.IfcTaskTypeEnum);\n        WorkMethod: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ProcessType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTaskTypeEnum> | IFC4.IfcTaskTypeEnum), WorkMethod: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTaskType;\n        ToTape(): any[];\n    }\n    class IfcTessellatedFaceSet extends IFC4.IfcTessellatedItem {\n        Coordinates: (Handle<IFC4.IfcCartesianPointList3D> | IFC4.IfcCartesianPointList3D);\n        HasColours: (Handle<IFC4.IfcIndexedColourMap> | IFC4.IfcIndexedColourMap)[] | null;\n        HasTextures: (Handle<IFC4.IfcIndexedTextureMap> | IFC4.IfcIndexedTextureMap)[] | null;\n        constructor(expressID: number, type: number, Coordinates: (Handle<IFC4.IfcCartesianPointList3D> | IFC4.IfcCartesianPointList3D));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTessellatedFaceSet;\n        ToTape(): any[];\n    }\n    class IfcToroidalSurface extends IFC4.IfcElementarySurface {\n        MajorRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        MinorRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), MajorRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), MinorRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcToroidalSurface;\n        ToTape(): any[];\n    }\n    class IfcTransportElementType extends IFC4.IfcElementType {\n        PredefinedType: (Handle<IFC4.IfcTransportElementTypeEnum> | IFC4.IfcTransportElementTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTransportElementTypeEnum> | IFC4.IfcTransportElementTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTransportElementType;\n        ToTape(): any[];\n    }\n    class IfcTriangulatedFaceSet extends IFC4.IfcTessellatedFaceSet {\n        Normals: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[] | null;\n        Closed: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        CoordIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[];\n        PnIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[] | null;\n        constructor(expressID: number, type: number, Coordinates: (Handle<IFC4.IfcCartesianPointList3D> | IFC4.IfcCartesianPointList3D), Normals: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[] | null, Closed: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, CoordIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[], PnIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTriangulatedFaceSet;\n        ToTape(): any[];\n    }\n    class IfcWindowLiningProperties extends IFC4.IfcPreDefinedPropertySet {\n        LiningDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        LiningThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        TransomThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        MullionThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        FirstTransomOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        SecondTransomOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        FirstMullionOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        SecondMullionOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null;\n        LiningOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        LiningToPanelOffsetX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        LiningToPanelOffsetY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, LiningDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, LiningThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, TransomThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, MullionThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, FirstTransomOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, SecondTransomOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, FirstMullionOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, SecondMullionOffset: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null, LiningOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, LiningToPanelOffsetX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, LiningToPanelOffsetY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowLiningProperties;\n        ToTape(): any[];\n    }\n    class IfcWindowPanelProperties extends IFC4.IfcPreDefinedPropertySet {\n        OperationType: (Handle<IFC4.IfcWindowPanelOperationEnum> | IFC4.IfcWindowPanelOperationEnum);\n        PanelPosition: (Handle<IFC4.IfcWindowPanelPositionEnum> | IFC4.IfcWindowPanelPositionEnum);\n        FrameDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        FrameThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, OperationType: (Handle<IFC4.IfcWindowPanelOperationEnum> | IFC4.IfcWindowPanelOperationEnum), PanelPosition: (Handle<IFC4.IfcWindowPanelPositionEnum> | IFC4.IfcWindowPanelPositionEnum), FrameDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, FrameThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowPanelProperties;\n        ToTape(): any[];\n    }\n    class IfcActor extends IFC4.IfcObject {\n        TheActor: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect);\n        IsActingUpon: (Handle<IFC4.IfcRelAssignsToActor> | IFC4.IfcRelAssignsToActor)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TheActor: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActor;\n        ToTape(): any[];\n    }\n    class IfcAdvancedBrep extends IFC4.IfcManifoldSolidBrep {\n        constructor(expressID: number, type: number, Outer: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAdvancedBrep;\n        ToTape(): any[];\n    }\n    class IfcAdvancedBrepWithVoids extends IFC4.IfcAdvancedBrep {\n        Voids: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell)[];\n        constructor(expressID: number, type: number, Outer: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell), Voids: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAdvancedBrepWithVoids;\n        ToTape(): any[];\n    }\n    class IfcAnnotation extends IFC4.IfcProduct {\n        ContainedInStructure: (Handle<IFC4.IfcRelContainedInSpatialStructure> | IFC4.IfcRelContainedInSpatialStructure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAnnotation;\n        ToTape(): any[];\n    }\n    class IfcBSplineSurface extends IFC4.IfcBoundedSurface {\n        UDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger);\n        VDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger);\n        ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[];\n        SurfaceForm: (Handle<IFC4.IfcBSplineSurfaceForm> | IFC4.IfcBSplineSurfaceForm);\n        UClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        VClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        constructor(expressID: number, type: number, UDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), VDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[], SurfaceForm: (Handle<IFC4.IfcBSplineSurfaceForm> | IFC4.IfcBSplineSurfaceForm), UClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), VClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineSurface;\n        ToTape(): any[];\n    }\n    class IfcBSplineSurfaceWithKnots extends IFC4.IfcBSplineSurface {\n        UMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[];\n        VMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[];\n        UKnots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[];\n        VKnots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[];\n        KnotSpec: (Handle<IFC4.IfcKnotType> | IFC4.IfcKnotType);\n        constructor(expressID: number, type: number, UDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), VDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[], SurfaceForm: (Handle<IFC4.IfcBSplineSurfaceForm> | IFC4.IfcBSplineSurfaceForm), UClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), VClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), UMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], VMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], UKnots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[], VKnots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[], KnotSpec: (Handle<IFC4.IfcKnotType> | IFC4.IfcKnotType));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineSurfaceWithKnots;\n        ToTape(): any[];\n    }\n    class IfcBlock extends IFC4.IfcCsgPrimitive3D {\n        XLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        YLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        ZLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), XLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), YLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), ZLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBlock;\n        ToTape(): any[];\n    }\n    class IfcBooleanClippingResult extends IFC4.IfcBooleanResult {\n        constructor(expressID: number, type: number, Operator: (Handle<IFC4.IfcBooleanOperator> | IFC4.IfcBooleanOperator), FirstOperand: (Handle<IFC4.IfcBooleanOperand> | IFC4.IfcBooleanOperand), SecondOperand: (Handle<IFC4.IfcBooleanOperand> | IFC4.IfcBooleanOperand));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBooleanClippingResult;\n        ToTape(): any[];\n    }\n    class IfcBoundedCurve extends IFC4.IfcCurve {\n        constructor(expressID: number, type: number);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundedCurve;\n        ToTape(): any[];\n    }\n    class IfcBuilding extends IFC4.IfcSpatialStructureElement {\n        ElevationOfRefHeight: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        ElevationOfTerrain: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        BuildingAddress: (Handle<IFC4.IfcPostalAddress> | IFC4.IfcPostalAddress) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CompositionType: (Handle<IFC4.IfcElementCompositionEnum> | IFC4.IfcElementCompositionEnum) | null, ElevationOfRefHeight: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, ElevationOfTerrain: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, BuildingAddress: (Handle<IFC4.IfcPostalAddress> | IFC4.IfcPostalAddress) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuilding;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementType extends IFC4.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementType;\n        ToTape(): any[];\n    }\n    class IfcBuildingStorey extends IFC4.IfcSpatialStructureElement {\n        Elevation: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CompositionType: (Handle<IFC4.IfcElementCompositionEnum> | IFC4.IfcElementCompositionEnum) | null, Elevation: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingStorey;\n        ToTape(): any[];\n    }\n    class IfcChimneyType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcChimneyTypeEnum> | IFC4.IfcChimneyTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcChimneyTypeEnum> | IFC4.IfcChimneyTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcChimneyType;\n        ToTape(): any[];\n    }\n    class IfcCircleHollowProfileDef extends IFC4.IfcCircleProfileDef {\n        WallThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, ProfileType: (Handle<IFC4.IfcProfileTypeEnum> | IFC4.IfcProfileTypeEnum), ProfileName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Position: (Handle<IFC4.IfcAxis2Placement2D> | IFC4.IfcAxis2Placement2D) | null, Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), WallThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCircleHollowProfileDef;\n        ToTape(): any[];\n    }\n    class IfcCivilElementType extends IFC4.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCivilElementType;\n        ToTape(): any[];\n    }\n    class IfcColumnType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcColumnTypeEnum> | IFC4.IfcColumnTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcColumnTypeEnum> | IFC4.IfcColumnTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColumnType;\n        ToTape(): any[];\n    }\n    class IfcComplexPropertyTemplate extends IFC4.IfcPropertyTemplate {\n        UsageName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        TemplateType: (Handle<IFC4.IfcComplexPropertyTemplateTypeEnum> | IFC4.IfcComplexPropertyTemplateTypeEnum) | null;\n        HasPropertyTemplates: (Handle<IFC4.IfcPropertyTemplate> | IFC4.IfcPropertyTemplate)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, UsageName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TemplateType: (Handle<IFC4.IfcComplexPropertyTemplateTypeEnum> | IFC4.IfcComplexPropertyTemplateTypeEnum) | null, HasPropertyTemplates: (Handle<IFC4.IfcPropertyTemplate> | IFC4.IfcPropertyTemplate)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcComplexPropertyTemplate;\n        ToTape(): any[];\n    }\n    class IfcCompositeCurve extends IFC4.IfcBoundedCurve {\n        Segments: (Handle<IFC4.IfcCompositeCurveSegment> | IFC4.IfcCompositeCurveSegment)[];\n        SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        constructor(expressID: number, type: number, Segments: (Handle<IFC4.IfcCompositeCurveSegment> | IFC4.IfcCompositeCurveSegment)[], SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurve;\n        ToTape(): any[];\n    }\n    class IfcCompositeCurveOnSurface extends IFC4.IfcCompositeCurve {\n        constructor(expressID: number, type: number, Segments: (Handle<IFC4.IfcCompositeCurveSegment> | IFC4.IfcCompositeCurveSegment)[], SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompositeCurveOnSurface;\n        ToTape(): any[];\n    }\n    class IfcConic extends IFC4.IfcCurve {\n        Position: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConic;\n        ToTape(): any[];\n    }\n    class IfcConstructionEquipmentResourceType extends IFC4.IfcConstructionResourceType {\n        PredefinedType: (Handle<IFC4.IfcConstructionEquipmentResourceTypeEnum> | IFC4.IfcConstructionEquipmentResourceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcConstructionEquipmentResourceTypeEnum> | IFC4.IfcConstructionEquipmentResourceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionEquipmentResourceType;\n        ToTape(): any[];\n    }\n    class IfcConstructionMaterialResourceType extends IFC4.IfcConstructionResourceType {\n        PredefinedType: (Handle<IFC4.IfcConstructionMaterialResourceTypeEnum> | IFC4.IfcConstructionMaterialResourceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcConstructionMaterialResourceTypeEnum> | IFC4.IfcConstructionMaterialResourceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionMaterialResourceType;\n        ToTape(): any[];\n    }\n    class IfcConstructionProductResourceType extends IFC4.IfcConstructionResourceType {\n        PredefinedType: (Handle<IFC4.IfcConstructionProductResourceTypeEnum> | IFC4.IfcConstructionProductResourceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ResourceType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcConstructionProductResourceTypeEnum> | IFC4.IfcConstructionProductResourceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionProductResourceType;\n        ToTape(): any[];\n    }\n    class IfcConstructionResource extends IFC4.IfcResource {\n        Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null;\n        BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null;\n        BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionResource;\n        ToTape(): any[];\n    }\n    class IfcControl extends IFC4.IfcObject {\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        Controls: (Handle<IFC4.IfcRelAssignsToControl> | IFC4.IfcRelAssignsToControl)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcControl;\n        ToTape(): any[];\n    }\n    class IfcCostItem extends IFC4.IfcControl {\n        PredefinedType: (Handle<IFC4.IfcCostItemTypeEnum> | IFC4.IfcCostItemTypeEnum) | null;\n        CostValues: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue)[] | null;\n        CostQuantities: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCostItemTypeEnum> | IFC4.IfcCostItemTypeEnum) | null, CostValues: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue)[] | null, CostQuantities: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCostItem;\n        ToTape(): any[];\n    }\n    class IfcCostSchedule extends IFC4.IfcControl {\n        PredefinedType: (Handle<IFC4.IfcCostScheduleTypeEnum> | IFC4.IfcCostScheduleTypeEnum) | null;\n        Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        SubmittedOn: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        UpdateDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCostScheduleTypeEnum> | IFC4.IfcCostScheduleTypeEnum) | null, Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, SubmittedOn: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, UpdateDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCostSchedule;\n        ToTape(): any[];\n    }\n    class IfcCoveringType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcCoveringTypeEnum> | IFC4.IfcCoveringTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCoveringTypeEnum> | IFC4.IfcCoveringTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoveringType;\n        ToTape(): any[];\n    }\n    class IfcCrewResource extends IFC4.IfcConstructionResource {\n        PredefinedType: (Handle<IFC4.IfcCrewResourceTypeEnum> | IFC4.IfcCrewResourceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcCrewResourceTypeEnum> | IFC4.IfcCrewResourceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCrewResource;\n        ToTape(): any[];\n    }\n    class IfcCurtainWallType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcCurtainWallTypeEnum> | IFC4.IfcCurtainWallTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCurtainWallTypeEnum> | IFC4.IfcCurtainWallTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurtainWallType;\n        ToTape(): any[];\n    }\n    class IfcCylindricalSurface extends IFC4.IfcElementarySurface {\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCylindricalSurface;\n        ToTape(): any[];\n    }\n    class IfcDistributionElementType extends IFC4.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionElementType;\n        ToTape(): any[];\n    }\n    class IfcDistributionFlowElementType extends IFC4.IfcDistributionElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionFlowElementType;\n        ToTape(): any[];\n    }\n    class IfcDoorLiningProperties extends IFC4.IfcPreDefinedPropertySet {\n        LiningDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        LiningThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        ThresholdDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        ThresholdThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        TransomThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null;\n        TransomOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        LiningOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        ThresholdOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        CasingThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        CasingDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null;\n        LiningToPanelOffsetX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        LiningToPanelOffsetY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, LiningDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, LiningThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, ThresholdDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, ThresholdThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, TransomThickness: (Handle<IFC4.IfcNonNegativeLengthMeasure> | IFC4.IfcNonNegativeLengthMeasure) | null, TransomOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, LiningOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, ThresholdOffset: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, CasingThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, CasingDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null, LiningToPanelOffsetX: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, LiningToPanelOffsetY: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorLiningProperties;\n        ToTape(): any[];\n    }\n    class IfcDoorPanelProperties extends IFC4.IfcPreDefinedPropertySet {\n        PanelDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        PanelOperation: (Handle<IFC4.IfcDoorPanelOperationEnum> | IFC4.IfcDoorPanelOperationEnum);\n        PanelWidth: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        PanelPosition: (Handle<IFC4.IfcDoorPanelPositionEnum> | IFC4.IfcDoorPanelPositionEnum);\n        ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, PanelDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PanelOperation: (Handle<IFC4.IfcDoorPanelOperationEnum> | IFC4.IfcDoorPanelOperationEnum), PanelWidth: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, PanelPosition: (Handle<IFC4.IfcDoorPanelPositionEnum> | IFC4.IfcDoorPanelPositionEnum), ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorPanelProperties;\n        ToTape(): any[];\n    }\n    class IfcDoorType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcDoorTypeEnum> | IFC4.IfcDoorTypeEnum);\n        OperationType: (Handle<IFC4.IfcDoorTypeOperationEnum> | IFC4.IfcDoorTypeOperationEnum);\n        ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        UserDefinedOperationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDoorTypeEnum> | IFC4.IfcDoorTypeEnum), OperationType: (Handle<IFC4.IfcDoorTypeOperationEnum> | IFC4.IfcDoorTypeOperationEnum), ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, UserDefinedOperationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorType;\n        ToTape(): any[];\n    }\n    class IfcDraughtingPreDefinedColour extends IFC4.IfcPreDefinedColour {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingPreDefinedColour;\n        ToTape(): any[];\n    }\n    class IfcDraughtingPreDefinedCurveFont extends IFC4.IfcPreDefinedCurveFont {\n        constructor(expressID: number, type: number, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDraughtingPreDefinedCurveFont;\n        ToTape(): any[];\n    }\n    class IfcElement extends IFC4.IfcProduct {\n        Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        FillsVoids: (Handle<IFC4.IfcRelFillsElement> | IFC4.IfcRelFillsElement)[] | null;\n        ConnectedTo: (Handle<IFC4.IfcRelConnectsElements> | IFC4.IfcRelConnectsElements)[] | null;\n        IsInterferedByElements: (Handle<IFC4.IfcRelInterferesElements> | IFC4.IfcRelInterferesElements)[] | null;\n        InterferesElements: (Handle<IFC4.IfcRelInterferesElements> | IFC4.IfcRelInterferesElements)[] | null;\n        HasProjections: (Handle<IFC4.IfcRelProjectsElement> | IFC4.IfcRelProjectsElement)[] | null;\n        ReferencedInStructures: (Handle<IFC4.IfcRelReferencedInSpatialStructure> | IFC4.IfcRelReferencedInSpatialStructure)[] | null;\n        HasOpenings: (Handle<IFC4.IfcRelVoidsElement> | IFC4.IfcRelVoidsElement)[] | null;\n        IsConnectionRealization: (Handle<IFC4.IfcRelConnectsWithRealizingElements> | IFC4.IfcRelConnectsWithRealizingElements)[] | null;\n        ProvidesBoundaries: (Handle<IFC4.IfcRelSpaceBoundary> | IFC4.IfcRelSpaceBoundary)[] | null;\n        ConnectedFrom: (Handle<IFC4.IfcRelConnectsElements> | IFC4.IfcRelConnectsElements)[] | null;\n        ContainedInStructure: (Handle<IFC4.IfcRelContainedInSpatialStructure> | IFC4.IfcRelContainedInSpatialStructure)[] | null;\n        HasCoverings: (Handle<IFC4.IfcRelCoversBldgElements> | IFC4.IfcRelCoversBldgElements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElement;\n        ToTape(): any[];\n    }\n    class IfcElementAssembly extends IFC4.IfcElement {\n        AssemblyPlace: (Handle<IFC4.IfcAssemblyPlaceEnum> | IFC4.IfcAssemblyPlaceEnum) | null;\n        PredefinedType: (Handle<IFC4.IfcElementAssemblyTypeEnum> | IFC4.IfcElementAssemblyTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, AssemblyPlace: (Handle<IFC4.IfcAssemblyPlaceEnum> | IFC4.IfcAssemblyPlaceEnum) | null, PredefinedType: (Handle<IFC4.IfcElementAssemblyTypeEnum> | IFC4.IfcElementAssemblyTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementAssembly;\n        ToTape(): any[];\n    }\n    class IfcElementAssemblyType extends IFC4.IfcElementType {\n        PredefinedType: (Handle<IFC4.IfcElementAssemblyTypeEnum> | IFC4.IfcElementAssemblyTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcElementAssemblyTypeEnum> | IFC4.IfcElementAssemblyTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementAssemblyType;\n        ToTape(): any[];\n    }\n    class IfcElementComponent extends IFC4.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementComponent;\n        ToTape(): any[];\n    }\n    class IfcElementComponentType extends IFC4.IfcElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElementComponentType;\n        ToTape(): any[];\n    }\n    class IfcEllipse extends IFC4.IfcConic {\n        SemiAxis1: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        SemiAxis2: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement), SemiAxis1: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure), SemiAxis2: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEllipse;\n        ToTape(): any[];\n    }\n    class IfcEnergyConversionDeviceType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEnergyConversionDeviceType;\n        ToTape(): any[];\n    }\n    class IfcEngineType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcEngineTypeEnum> | IFC4.IfcEngineTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcEngineTypeEnum> | IFC4.IfcEngineTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEngineType;\n        ToTape(): any[];\n    }\n    class IfcEvaporativeCoolerType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcEvaporativeCoolerTypeEnum> | IFC4.IfcEvaporativeCoolerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcEvaporativeCoolerTypeEnum> | IFC4.IfcEvaporativeCoolerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporativeCoolerType;\n        ToTape(): any[];\n    }\n    class IfcEvaporatorType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcEvaporatorTypeEnum> | IFC4.IfcEvaporatorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcEvaporatorTypeEnum> | IFC4.IfcEvaporatorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporatorType;\n        ToTape(): any[];\n    }\n    class IfcEvent extends IFC4.IfcProcess {\n        PredefinedType: (Handle<IFC4.IfcEventTypeEnum> | IFC4.IfcEventTypeEnum) | null;\n        EventTriggerType: (Handle<IFC4.IfcEventTriggerTypeEnum> | IFC4.IfcEventTriggerTypeEnum) | null;\n        UserDefinedEventTriggerType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        EventOccurenceTime: (Handle<IFC4.IfcEventTime> | IFC4.IfcEventTime) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, PredefinedType: (Handle<IFC4.IfcEventTypeEnum> | IFC4.IfcEventTypeEnum) | null, EventTriggerType: (Handle<IFC4.IfcEventTriggerTypeEnum> | IFC4.IfcEventTriggerTypeEnum) | null, UserDefinedEventTriggerType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, EventOccurenceTime: (Handle<IFC4.IfcEventTime> | IFC4.IfcEventTime) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEvent;\n        ToTape(): any[];\n    }\n    class IfcExternalSpatialStructureElement extends IFC4.IfcSpatialElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternalSpatialStructureElement;\n        ToTape(): any[];\n    }\n    class IfcFacetedBrep extends IFC4.IfcManifoldSolidBrep {\n        constructor(expressID: number, type: number, Outer: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFacetedBrep;\n        ToTape(): any[];\n    }\n    class IfcFacetedBrepWithVoids extends IFC4.IfcFacetedBrep {\n        Voids: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell)[];\n        constructor(expressID: number, type: number, Outer: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell), Voids: (Handle<IFC4.IfcClosedShell> | IFC4.IfcClosedShell)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFacetedBrepWithVoids;\n        ToTape(): any[];\n    }\n    class IfcFastener extends IFC4.IfcElementComponent {\n        PredefinedType: (Handle<IFC4.IfcFastenerTypeEnum> | IFC4.IfcFastenerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFastenerTypeEnum> | IFC4.IfcFastenerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFastener;\n        ToTape(): any[];\n    }\n    class IfcFastenerType extends IFC4.IfcElementComponentType {\n        PredefinedType: (Handle<IFC4.IfcFastenerTypeEnum> | IFC4.IfcFastenerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcFastenerTypeEnum> | IFC4.IfcFastenerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFastenerType;\n        ToTape(): any[];\n    }\n    class IfcFeatureElement extends IFC4.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElement;\n        ToTape(): any[];\n    }\n    class IfcFeatureElementAddition extends IFC4.IfcFeatureElement {\n        ProjectsElements: (Handle<IFC4.IfcRelProjectsElement> | IFC4.IfcRelProjectsElement) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElementAddition;\n        ToTape(): any[];\n    }\n    class IfcFeatureElementSubtraction extends IFC4.IfcFeatureElement {\n        VoidsElements: (Handle<IFC4.IfcRelVoidsElement> | IFC4.IfcRelVoidsElement) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFeatureElementSubtraction;\n        ToTape(): any[];\n    }\n    class IfcFlowControllerType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowControllerType;\n        ToTape(): any[];\n    }\n    class IfcFlowFittingType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowFittingType;\n        ToTape(): any[];\n    }\n    class IfcFlowMeterType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcFlowMeterTypeEnum> | IFC4.IfcFlowMeterTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcFlowMeterTypeEnum> | IFC4.IfcFlowMeterTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMeterType;\n        ToTape(): any[];\n    }\n    class IfcFlowMovingDeviceType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMovingDeviceType;\n        ToTape(): any[];\n    }\n    class IfcFlowSegmentType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowSegmentType;\n        ToTape(): any[];\n    }\n    class IfcFlowStorageDeviceType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowStorageDeviceType;\n        ToTape(): any[];\n    }\n    class IfcFlowTerminalType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTerminalType;\n        ToTape(): any[];\n    }\n    class IfcFlowTreatmentDeviceType extends IFC4.IfcDistributionFlowElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTreatmentDeviceType;\n        ToTape(): any[];\n    }\n    class IfcFootingType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcFootingTypeEnum> | IFC4.IfcFootingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcFootingTypeEnum> | IFC4.IfcFootingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFootingType;\n        ToTape(): any[];\n    }\n    class IfcFurnishingElement extends IFC4.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurnishingElement;\n        ToTape(): any[];\n    }\n    class IfcFurniture extends IFC4.IfcFurnishingElement {\n        PredefinedType: (Handle<IFC4.IfcFurnitureTypeEnum> | IFC4.IfcFurnitureTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFurnitureTypeEnum> | IFC4.IfcFurnitureTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFurniture;\n        ToTape(): any[];\n    }\n    class IfcGeographicElement extends IFC4.IfcElement {\n        PredefinedType: (Handle<IFC4.IfcGeographicElementTypeEnum> | IFC4.IfcGeographicElementTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcGeographicElementTypeEnum> | IFC4.IfcGeographicElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGeographicElement;\n        ToTape(): any[];\n    }\n    class IfcGrid extends IFC4.IfcProduct {\n        UAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[];\n        VAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[];\n        WAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[] | null;\n        PredefinedType: (Handle<IFC4.IfcGridTypeEnum> | IFC4.IfcGridTypeEnum) | null;\n        ContainedInStructure: (Handle<IFC4.IfcRelContainedInSpatialStructure> | IFC4.IfcRelContainedInSpatialStructure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, UAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[], VAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[], WAxes: (Handle<IFC4.IfcGridAxis> | IFC4.IfcGridAxis)[] | null, PredefinedType: (Handle<IFC4.IfcGridTypeEnum> | IFC4.IfcGridTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGrid;\n        ToTape(): any[];\n    }\n    class IfcGroup extends IFC4.IfcObject {\n        IsGroupedBy: (Handle<IFC4.IfcRelAssignsToGroup> | IFC4.IfcRelAssignsToGroup)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcGroup;\n        ToTape(): any[];\n    }\n    class IfcHeatExchangerType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcHeatExchangerTypeEnum> | IFC4.IfcHeatExchangerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcHeatExchangerTypeEnum> | IFC4.IfcHeatExchangerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHeatExchangerType;\n        ToTape(): any[];\n    }\n    class IfcHumidifierType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcHumidifierTypeEnum> | IFC4.IfcHumidifierTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcHumidifierTypeEnum> | IFC4.IfcHumidifierTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHumidifierType;\n        ToTape(): any[];\n    }\n    class IfcIndexedPolyCurve extends IFC4.IfcBoundedCurve {\n        Points: (Handle<IFC4.IfcCartesianPointList> | IFC4.IfcCartesianPointList);\n        Segments: (Handle<IFC4.IfcSegmentIndexSelect> | IFC4.IfcSegmentIndexSelect)[] | null;\n        SelfIntersect: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        constructor(expressID: number, type: number, Points: (Handle<IFC4.IfcCartesianPointList> | IFC4.IfcCartesianPointList), Segments: (Handle<IFC4.IfcSegmentIndexSelect> | IFC4.IfcSegmentIndexSelect)[] | null, SelfIntersect: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIndexedPolyCurve;\n        ToTape(): any[];\n    }\n    class IfcInterceptorType extends IFC4.IfcFlowTreatmentDeviceType {\n        PredefinedType: (Handle<IFC4.IfcInterceptorTypeEnum> | IFC4.IfcInterceptorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcInterceptorTypeEnum> | IFC4.IfcInterceptorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcInterceptorType;\n        ToTape(): any[];\n    }\n    class IfcIntersectionCurve extends IFC4.IfcSurfaceCurve {\n        constructor(expressID: number, type: number, Curve3D: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), AssociatedGeometry: (Handle<IFC4.IfcPcurve> | IFC4.IfcPcurve)[], MasterRepresentation: (Handle<IFC4.IfcPreferredSurfaceCurveRepresentation> | IFC4.IfcPreferredSurfaceCurveRepresentation));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcIntersectionCurve;\n        ToTape(): any[];\n    }\n    class IfcInventory extends IFC4.IfcGroup {\n        PredefinedType: (Handle<IFC4.IfcInventoryTypeEnum> | IFC4.IfcInventoryTypeEnum) | null;\n        Jurisdiction: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        ResponsiblePersons: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson)[] | null;\n        LastUpdateDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        CurrentValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null;\n        OriginalValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcInventoryTypeEnum> | IFC4.IfcInventoryTypeEnum) | null, Jurisdiction: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, ResponsiblePersons: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson)[] | null, LastUpdateDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, CurrentValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null, OriginalValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcInventory;\n        ToTape(): any[];\n    }\n    class IfcJunctionBoxType extends IFC4.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC4.IfcJunctionBoxTypeEnum> | IFC4.IfcJunctionBoxTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcJunctionBoxTypeEnum> | IFC4.IfcJunctionBoxTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcJunctionBoxType;\n        ToTape(): any[];\n    }\n    class IfcLaborResource extends IFC4.IfcConstructionResource {\n        PredefinedType: (Handle<IFC4.IfcLaborResourceTypeEnum> | IFC4.IfcLaborResourceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcLaborResourceTypeEnum> | IFC4.IfcLaborResourceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLaborResource;\n        ToTape(): any[];\n    }\n    class IfcLampType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcLampTypeEnum> | IFC4.IfcLampTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcLampTypeEnum> | IFC4.IfcLampTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLampType;\n        ToTape(): any[];\n    }\n    class IfcLightFixtureType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcLightFixtureTypeEnum> | IFC4.IfcLightFixtureTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcLightFixtureTypeEnum> | IFC4.IfcLightFixtureTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightFixtureType;\n        ToTape(): any[];\n    }\n    class IfcMechanicalFastener extends IFC4.IfcElementComponent {\n        NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        NominalLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        PredefinedType: (Handle<IFC4.IfcMechanicalFastenerTypeEnum> | IFC4.IfcMechanicalFastenerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, NominalLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcMechanicalFastenerTypeEnum> | IFC4.IfcMechanicalFastenerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalFastener;\n        ToTape(): any[];\n    }\n    class IfcMechanicalFastenerType extends IFC4.IfcElementComponentType {\n        PredefinedType: (Handle<IFC4.IfcMechanicalFastenerTypeEnum> | IFC4.IfcMechanicalFastenerTypeEnum);\n        NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        NominalLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcMechanicalFastenerTypeEnum> | IFC4.IfcMechanicalFastenerTypeEnum), NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, NominalLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMechanicalFastenerType;\n        ToTape(): any[];\n    }\n    class IfcMedicalDeviceType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcMedicalDeviceTypeEnum> | IFC4.IfcMedicalDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcMedicalDeviceTypeEnum> | IFC4.IfcMedicalDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMedicalDeviceType;\n        ToTape(): any[];\n    }\n    class IfcMemberType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcMemberTypeEnum> | IFC4.IfcMemberTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcMemberTypeEnum> | IFC4.IfcMemberTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMemberType;\n        ToTape(): any[];\n    }\n    class IfcMotorConnectionType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcMotorConnectionTypeEnum> | IFC4.IfcMotorConnectionTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcMotorConnectionTypeEnum> | IFC4.IfcMotorConnectionTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMotorConnectionType;\n        ToTape(): any[];\n    }\n    class IfcOccupant extends IFC4.IfcActor {\n        PredefinedType: (Handle<IFC4.IfcOccupantTypeEnum> | IFC4.IfcOccupantTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TheActor: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect), PredefinedType: (Handle<IFC4.IfcOccupantTypeEnum> | IFC4.IfcOccupantTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOccupant;\n        ToTape(): any[];\n    }\n    class IfcOpeningElement extends IFC4.IfcFeatureElementSubtraction {\n        PredefinedType: (Handle<IFC4.IfcOpeningElementTypeEnum> | IFC4.IfcOpeningElementTypeEnum) | null;\n        HasFillings: (Handle<IFC4.IfcRelFillsElement> | IFC4.IfcRelFillsElement)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcOpeningElementTypeEnum> | IFC4.IfcOpeningElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOpeningElement;\n        ToTape(): any[];\n    }\n    class IfcOpeningStandardCase extends IFC4.IfcOpeningElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcOpeningElementTypeEnum> | IFC4.IfcOpeningElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOpeningStandardCase;\n        ToTape(): any[];\n    }\n    class IfcOutletType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcOutletTypeEnum> | IFC4.IfcOutletTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcOutletTypeEnum> | IFC4.IfcOutletTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOutletType;\n        ToTape(): any[];\n    }\n    class IfcPerformanceHistory extends IFC4.IfcControl {\n        LifeCyclePhase: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel);\n        PredefinedType: (Handle<IFC4.IfcPerformanceHistoryTypeEnum> | IFC4.IfcPerformanceHistoryTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LifeCyclePhase: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel), PredefinedType: (Handle<IFC4.IfcPerformanceHistoryTypeEnum> | IFC4.IfcPerformanceHistoryTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPerformanceHistory;\n        ToTape(): any[];\n    }\n    class IfcPermeableCoveringProperties extends IFC4.IfcPreDefinedPropertySet {\n        OperationType: (Handle<IFC4.IfcPermeableCoveringOperationEnum> | IFC4.IfcPermeableCoveringOperationEnum);\n        PanelPosition: (Handle<IFC4.IfcWindowPanelPositionEnum> | IFC4.IfcWindowPanelPositionEnum);\n        FrameDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        FrameThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, OperationType: (Handle<IFC4.IfcPermeableCoveringOperationEnum> | IFC4.IfcPermeableCoveringOperationEnum), PanelPosition: (Handle<IFC4.IfcWindowPanelPositionEnum> | IFC4.IfcWindowPanelPositionEnum), FrameDepth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, FrameThickness: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, ShapeAspectStyle: (Handle<IFC4.IfcShapeAspect> | IFC4.IfcShapeAspect) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPermeableCoveringProperties;\n        ToTape(): any[];\n    }\n    class IfcPermit extends IFC4.IfcControl {\n        PredefinedType: (Handle<IFC4.IfcPermitTypeEnum> | IFC4.IfcPermitTypeEnum) | null;\n        Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcPermitTypeEnum> | IFC4.IfcPermitTypeEnum) | null, Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPermit;\n        ToTape(): any[];\n    }\n    class IfcPileType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcPileTypeEnum> | IFC4.IfcPileTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcPileTypeEnum> | IFC4.IfcPileTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPileType;\n        ToTape(): any[];\n    }\n    class IfcPipeFittingType extends IFC4.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC4.IfcPipeFittingTypeEnum> | IFC4.IfcPipeFittingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcPipeFittingTypeEnum> | IFC4.IfcPipeFittingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPipeFittingType;\n        ToTape(): any[];\n    }\n    class IfcPipeSegmentType extends IFC4.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC4.IfcPipeSegmentTypeEnum> | IFC4.IfcPipeSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcPipeSegmentTypeEnum> | IFC4.IfcPipeSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPipeSegmentType;\n        ToTape(): any[];\n    }\n    class IfcPlateType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcPlateTypeEnum> | IFC4.IfcPlateTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcPlateTypeEnum> | IFC4.IfcPlateTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlateType;\n        ToTape(): any[];\n    }\n    class IfcPolygonalFaceSet extends IFC4.IfcTessellatedFaceSet {\n        Closed: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        Faces: (Handle<IFC4.IfcIndexedPolygonalFace> | IFC4.IfcIndexedPolygonalFace)[];\n        PnIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[] | null;\n        constructor(expressID: number, type: number, Coordinates: (Handle<IFC4.IfcCartesianPointList3D> | IFC4.IfcCartesianPointList3D), Closed: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, Faces: (Handle<IFC4.IfcIndexedPolygonalFace> | IFC4.IfcIndexedPolygonalFace)[], PnIndex: (Handle<IFC4.IfcPositiveInteger> | IFC4.IfcPositiveInteger)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPolygonalFaceSet;\n        ToTape(): any[];\n    }\n    class IfcPolyline extends IFC4.IfcBoundedCurve {\n        Points: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[];\n        constructor(expressID: number, type: number, Points: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPolyline;\n        ToTape(): any[];\n    }\n    class IfcPort extends IFC4.IfcProduct {\n        ContainedIn: (Handle<IFC4.IfcRelConnectsPortToElement> | IFC4.IfcRelConnectsPortToElement)[] | null;\n        ConnectedFrom: (Handle<IFC4.IfcRelConnectsPorts> | IFC4.IfcRelConnectsPorts)[] | null;\n        ConnectedTo: (Handle<IFC4.IfcRelConnectsPorts> | IFC4.IfcRelConnectsPorts)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPort;\n        ToTape(): any[];\n    }\n    class IfcProcedure extends IFC4.IfcProcess {\n        PredefinedType: (Handle<IFC4.IfcProcedureTypeEnum> | IFC4.IfcProcedureTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, PredefinedType: (Handle<IFC4.IfcProcedureTypeEnum> | IFC4.IfcProcedureTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProcedure;\n        ToTape(): any[];\n    }\n    class IfcProjectOrder extends IFC4.IfcControl {\n        PredefinedType: (Handle<IFC4.IfcProjectOrderTypeEnum> | IFC4.IfcProjectOrderTypeEnum) | null;\n        Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcProjectOrderTypeEnum> | IFC4.IfcProjectOrderTypeEnum) | null, Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectOrder;\n        ToTape(): any[];\n    }\n    class IfcProjectionElement extends IFC4.IfcFeatureElementAddition {\n        PredefinedType: (Handle<IFC4.IfcProjectionElementTypeEnum> | IFC4.IfcProjectionElementTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcProjectionElementTypeEnum> | IFC4.IfcProjectionElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProjectionElement;\n        ToTape(): any[];\n    }\n    class IfcProtectiveDeviceType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTypeEnum> | IFC4.IfcProtectiveDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTypeEnum> | IFC4.IfcProtectiveDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDeviceType;\n        ToTape(): any[];\n    }\n    class IfcPumpType extends IFC4.IfcFlowMovingDeviceType {\n        PredefinedType: (Handle<IFC4.IfcPumpTypeEnum> | IFC4.IfcPumpTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcPumpTypeEnum> | IFC4.IfcPumpTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPumpType;\n        ToTape(): any[];\n    }\n    class IfcRailingType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcRailingTypeEnum> | IFC4.IfcRailingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcRailingTypeEnum> | IFC4.IfcRailingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRailingType;\n        ToTape(): any[];\n    }\n    class IfcRampFlightType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcRampFlightTypeEnum> | IFC4.IfcRampFlightTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcRampFlightTypeEnum> | IFC4.IfcRampFlightTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRampFlightType;\n        ToTape(): any[];\n    }\n    class IfcRampType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcRampTypeEnum> | IFC4.IfcRampTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcRampTypeEnum> | IFC4.IfcRampTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRampType;\n        ToTape(): any[];\n    }\n    class IfcRationalBSplineSurfaceWithKnots extends IFC4.IfcBSplineSurfaceWithKnots {\n        WeightsData: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[];\n        constructor(expressID: number, type: number, UDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), VDegree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[], SurfaceForm: (Handle<IFC4.IfcBSplineSurfaceForm> | IFC4.IfcBSplineSurfaceForm), UClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), VClosed: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), UMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], VMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], UKnots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[], VKnots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[], KnotSpec: (Handle<IFC4.IfcKnotType> | IFC4.IfcKnotType), WeightsData: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRationalBSplineSurfaceWithKnots;\n        ToTape(): any[];\n    }\n    class IfcReinforcingElement extends IFC4.IfcElementComponent {\n        SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingElement;\n        ToTape(): any[];\n    }\n    class IfcReinforcingElementType extends IFC4.IfcElementComponentType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingElementType;\n        ToTape(): any[];\n    }\n    class IfcReinforcingMesh extends IFC4.IfcReinforcingElement {\n        MeshLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        MeshWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        LongitudinalBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        TransverseBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        LongitudinalBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        TransverseBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        LongitudinalBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        TransverseBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        PredefinedType: (Handle<IFC4.IfcReinforcingMeshTypeEnum> | IFC4.IfcReinforcingMeshTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, MeshLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, MeshWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, LongitudinalBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, TransverseBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, LongitudinalBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, TransverseBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, LongitudinalBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, TransverseBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcReinforcingMeshTypeEnum> | IFC4.IfcReinforcingMeshTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingMesh;\n        ToTape(): any[];\n    }\n    class IfcReinforcingMeshType extends IFC4.IfcReinforcingElementType {\n        PredefinedType: (Handle<IFC4.IfcReinforcingMeshTypeEnum> | IFC4.IfcReinforcingMeshTypeEnum);\n        MeshLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        MeshWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        LongitudinalBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        TransverseBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        LongitudinalBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        TransverseBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        LongitudinalBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        TransverseBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        BendingShapeCode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        BendingParameters: (Handle<IFC4.IfcBendingParameterSelect> | IFC4.IfcBendingParameterSelect)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcReinforcingMeshTypeEnum> | IFC4.IfcReinforcingMeshTypeEnum), MeshLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, MeshWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, LongitudinalBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, TransverseBarNominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, LongitudinalBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, TransverseBarCrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, LongitudinalBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, TransverseBarSpacing: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, BendingShapeCode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BendingParameters: (Handle<IFC4.IfcBendingParameterSelect> | IFC4.IfcBendingParameterSelect)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingMeshType;\n        ToTape(): any[];\n    }\n    class IfcRelAggregates extends IFC4.IfcRelDecomposes {\n        RelatingObject: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition);\n        RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[];\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, RelatingObject: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition), RelatedObjects: (Handle<IFC4.IfcObjectDefinition> | IFC4.IfcObjectDefinition)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRelAggregates;\n        ToTape(): any[];\n    }\n    class IfcRoofType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcRoofTypeEnum> | IFC4.IfcRoofTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcRoofTypeEnum> | IFC4.IfcRoofTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoofType;\n        ToTape(): any[];\n    }\n    class IfcSanitaryTerminalType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcSanitaryTerminalTypeEnum> | IFC4.IfcSanitaryTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSanitaryTerminalTypeEnum> | IFC4.IfcSanitaryTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSanitaryTerminalType;\n        ToTape(): any[];\n    }\n    class IfcSeamCurve extends IFC4.IfcSurfaceCurve {\n        constructor(expressID: number, type: number, Curve3D: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), AssociatedGeometry: (Handle<IFC4.IfcPcurve> | IFC4.IfcPcurve)[], MasterRepresentation: (Handle<IFC4.IfcPreferredSurfaceCurveRepresentation> | IFC4.IfcPreferredSurfaceCurveRepresentation));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSeamCurve;\n        ToTape(): any[];\n    }\n    class IfcShadingDeviceType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcShadingDeviceTypeEnum> | IFC4.IfcShadingDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcShadingDeviceTypeEnum> | IFC4.IfcShadingDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShadingDeviceType;\n        ToTape(): any[];\n    }\n    class IfcSite extends IFC4.IfcSpatialStructureElement {\n        RefLatitude: (Handle<IFC4.IfcCompoundPlaneAngleMeasure> | IFC4.IfcCompoundPlaneAngleMeasure) | null;\n        RefLongitude: (Handle<IFC4.IfcCompoundPlaneAngleMeasure> | IFC4.IfcCompoundPlaneAngleMeasure) | null;\n        RefElevation: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        LandTitleNumber: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        SiteAddress: (Handle<IFC4.IfcPostalAddress> | IFC4.IfcPostalAddress) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CompositionType: (Handle<IFC4.IfcElementCompositionEnum> | IFC4.IfcElementCompositionEnum) | null, RefLatitude: (Handle<IFC4.IfcCompoundPlaneAngleMeasure> | IFC4.IfcCompoundPlaneAngleMeasure) | null, RefLongitude: (Handle<IFC4.IfcCompoundPlaneAngleMeasure> | IFC4.IfcCompoundPlaneAngleMeasure) | null, RefElevation: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null, LandTitleNumber: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, SiteAddress: (Handle<IFC4.IfcPostalAddress> | IFC4.IfcPostalAddress) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSite;\n        ToTape(): any[];\n    }\n    class IfcSlabType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcSlabTypeEnum> | IFC4.IfcSlabTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSlabTypeEnum> | IFC4.IfcSlabTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlabType;\n        ToTape(): any[];\n    }\n    class IfcSolarDeviceType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcSolarDeviceTypeEnum> | IFC4.IfcSolarDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSolarDeviceTypeEnum> | IFC4.IfcSolarDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSolarDeviceType;\n        ToTape(): any[];\n    }\n    class IfcSpace extends IFC4.IfcSpatialStructureElement {\n        PredefinedType: (Handle<IFC4.IfcSpaceTypeEnum> | IFC4.IfcSpaceTypeEnum) | null;\n        ElevationWithFlooring: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null;\n        HasCoverings: (Handle<IFC4.IfcRelCoversSpaces> | IFC4.IfcRelCoversSpaces)[] | null;\n        BoundedBy: (Handle<IFC4.IfcRelSpaceBoundary> | IFC4.IfcRelSpaceBoundary)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, CompositionType: (Handle<IFC4.IfcElementCompositionEnum> | IFC4.IfcElementCompositionEnum) | null, PredefinedType: (Handle<IFC4.IfcSpaceTypeEnum> | IFC4.IfcSpaceTypeEnum) | null, ElevationWithFlooring: (Handle<IFC4.IfcLengthMeasure> | IFC4.IfcLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpace;\n        ToTape(): any[];\n    }\n    class IfcSpaceHeaterType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcSpaceHeaterTypeEnum> | IFC4.IfcSpaceHeaterTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSpaceHeaterTypeEnum> | IFC4.IfcSpaceHeaterTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceHeaterType;\n        ToTape(): any[];\n    }\n    class IfcSpaceType extends IFC4.IfcSpatialStructureElementType {\n        PredefinedType: (Handle<IFC4.IfcSpaceTypeEnum> | IFC4.IfcSpaceTypeEnum);\n        LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSpaceTypeEnum> | IFC4.IfcSpaceTypeEnum), LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceType;\n        ToTape(): any[];\n    }\n    class IfcStackTerminalType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcStackTerminalTypeEnum> | IFC4.IfcStackTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcStackTerminalTypeEnum> | IFC4.IfcStackTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStackTerminalType;\n        ToTape(): any[];\n    }\n    class IfcStairFlightType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcStairFlightTypeEnum> | IFC4.IfcStairFlightTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcStairFlightTypeEnum> | IFC4.IfcStairFlightTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStairFlightType;\n        ToTape(): any[];\n    }\n    class IfcStairType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcStairTypeEnum> | IFC4.IfcStairTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcStairTypeEnum> | IFC4.IfcStairTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStairType;\n        ToTape(): any[];\n    }\n    class IfcStructuralAction extends IFC4.IfcStructuralActivity {\n        DestabilizingLoad: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), DestabilizingLoad: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralConnection extends IFC4.IfcStructuralItem {\n        AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null;\n        ConnectsStructuralMembers: (Handle<IFC4.IfcRelConnectsStructuralMember> | IFC4.IfcRelConnectsStructuralMember)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralConnection;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveAction extends IFC4.IfcStructuralAction {\n        ProjectedOrTrue: (Handle<IFC4.IfcProjectedOrTrueLengthEnum> | IFC4.IfcProjectedOrTrueLengthEnum) | null;\n        PredefinedType: (Handle<IFC4.IfcStructuralCurveActivityTypeEnum> | IFC4.IfcStructuralCurveActivityTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), DestabilizingLoad: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, ProjectedOrTrue: (Handle<IFC4.IfcProjectedOrTrueLengthEnum> | IFC4.IfcProjectedOrTrueLengthEnum) | null, PredefinedType: (Handle<IFC4.IfcStructuralCurveActivityTypeEnum> | IFC4.IfcStructuralCurveActivityTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveConnection extends IFC4.IfcStructuralConnection {\n        Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null, Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveConnection;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveMember extends IFC4.IfcStructuralMember {\n        PredefinedType: (Handle<IFC4.IfcStructuralCurveMemberTypeEnum> | IFC4.IfcStructuralCurveMemberTypeEnum);\n        Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC4.IfcStructuralCurveMemberTypeEnum> | IFC4.IfcStructuralCurveMemberTypeEnum), Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveMember;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveMemberVarying extends IFC4.IfcStructuralCurveMember {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, PredefinedType: (Handle<IFC4.IfcStructuralCurveMemberTypeEnum> | IFC4.IfcStructuralCurveMemberTypeEnum), Axis: (Handle<IFC4.IfcDirection> | IFC4.IfcDirection));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveMemberVarying;\n        ToTape(): any[];\n    }\n    class IfcStructuralCurveReaction extends IFC4.IfcStructuralReaction {\n        PredefinedType: (Handle<IFC4.IfcStructuralCurveActivityTypeEnum> | IFC4.IfcStructuralCurveActivityTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), PredefinedType: (Handle<IFC4.IfcStructuralCurveActivityTypeEnum> | IFC4.IfcStructuralCurveActivityTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralCurveReaction;\n        ToTape(): any[];\n    }\n    class IfcStructuralLinearAction extends IFC4.IfcStructuralCurveAction {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), DestabilizingLoad: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, ProjectedOrTrue: (Handle<IFC4.IfcProjectedOrTrueLengthEnum> | IFC4.IfcProjectedOrTrueLengthEnum) | null, PredefinedType: (Handle<IFC4.IfcStructuralCurveActivityTypeEnum> | IFC4.IfcStructuralCurveActivityTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLinearAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadGroup extends IFC4.IfcGroup {\n        PredefinedType: (Handle<IFC4.IfcLoadGroupTypeEnum> | IFC4.IfcLoadGroupTypeEnum);\n        ActionType: (Handle<IFC4.IfcActionTypeEnum> | IFC4.IfcActionTypeEnum);\n        ActionSource: (Handle<IFC4.IfcActionSourceTypeEnum> | IFC4.IfcActionSourceTypeEnum);\n        Coefficient: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure) | null;\n        Purpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        SourceOfResultGroup: (Handle<IFC4.IfcStructuralResultGroup> | IFC4.IfcStructuralResultGroup)[] | null;\n        LoadGroupFor: (Handle<IFC4.IfcStructuralAnalysisModel> | IFC4.IfcStructuralAnalysisModel)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcLoadGroupTypeEnum> | IFC4.IfcLoadGroupTypeEnum), ActionType: (Handle<IFC4.IfcActionTypeEnum> | IFC4.IfcActionTypeEnum), ActionSource: (Handle<IFC4.IfcActionSourceTypeEnum> | IFC4.IfcActionSourceTypeEnum), Coefficient: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure) | null, Purpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadGroup;\n        ToTape(): any[];\n    }\n    class IfcStructuralPointAction extends IFC4.IfcStructuralAction {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), DestabilizingLoad: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralPointConnection extends IFC4.IfcStructuralConnection {\n        ConditionCoordinateSystem: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null, ConditionCoordinateSystem: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointConnection;\n        ToTape(): any[];\n    }\n    class IfcStructuralPointReaction extends IFC4.IfcStructuralReaction {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPointReaction;\n        ToTape(): any[];\n    }\n    class IfcStructuralResultGroup extends IFC4.IfcGroup {\n        TheoryType: (Handle<IFC4.IfcAnalysisTheoryTypeEnum> | IFC4.IfcAnalysisTheoryTypeEnum);\n        ResultForLoadGroup: (Handle<IFC4.IfcStructuralLoadGroup> | IFC4.IfcStructuralLoadGroup) | null;\n        IsLinear: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        ResultGroupFor: (Handle<IFC4.IfcStructuralAnalysisModel> | IFC4.IfcStructuralAnalysisModel)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, TheoryType: (Handle<IFC4.IfcAnalysisTheoryTypeEnum> | IFC4.IfcAnalysisTheoryTypeEnum), ResultForLoadGroup: (Handle<IFC4.IfcStructuralLoadGroup> | IFC4.IfcStructuralLoadGroup) | null, IsLinear: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralResultGroup;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceAction extends IFC4.IfcStructuralAction {\n        ProjectedOrTrue: (Handle<IFC4.IfcProjectedOrTrueLengthEnum> | IFC4.IfcProjectedOrTrueLengthEnum) | null;\n        PredefinedType: (Handle<IFC4.IfcStructuralSurfaceActivityTypeEnum> | IFC4.IfcStructuralSurfaceActivityTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), DestabilizingLoad: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, ProjectedOrTrue: (Handle<IFC4.IfcProjectedOrTrueLengthEnum> | IFC4.IfcProjectedOrTrueLengthEnum) | null, PredefinedType: (Handle<IFC4.IfcStructuralSurfaceActivityTypeEnum> | IFC4.IfcStructuralSurfaceActivityTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceAction;\n        ToTape(): any[];\n    }\n    class IfcStructuralSurfaceConnection extends IFC4.IfcStructuralConnection {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedCondition: (Handle<IFC4.IfcBoundaryCondition> | IFC4.IfcBoundaryCondition) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralSurfaceConnection;\n        ToTape(): any[];\n    }\n    class IfcSubContractResource extends IFC4.IfcConstructionResource {\n        PredefinedType: (Handle<IFC4.IfcSubContractResourceTypeEnum> | IFC4.IfcSubContractResourceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcSubContractResourceTypeEnum> | IFC4.IfcSubContractResourceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSubContractResource;\n        ToTape(): any[];\n    }\n    class IfcSurfaceFeature extends IFC4.IfcFeatureElement {\n        PredefinedType: (Handle<IFC4.IfcSurfaceFeatureTypeEnum> | IFC4.IfcSurfaceFeatureTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSurfaceFeatureTypeEnum> | IFC4.IfcSurfaceFeatureTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSurfaceFeature;\n        ToTape(): any[];\n    }\n    class IfcSwitchingDeviceType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcSwitchingDeviceTypeEnum> | IFC4.IfcSwitchingDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSwitchingDeviceTypeEnum> | IFC4.IfcSwitchingDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSwitchingDeviceType;\n        ToTape(): any[];\n    }\n    class IfcSystem extends IFC4.IfcGroup {\n        ServicesBuildings: (Handle<IFC4.IfcRelServicesBuildings> | IFC4.IfcRelServicesBuildings)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSystem;\n        ToTape(): any[];\n    }\n    class IfcSystemFurnitureElement extends IFC4.IfcFurnishingElement {\n        PredefinedType: (Handle<IFC4.IfcSystemFurnitureElementTypeEnum> | IFC4.IfcSystemFurnitureElementTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSystemFurnitureElementTypeEnum> | IFC4.IfcSystemFurnitureElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSystemFurnitureElement;\n        ToTape(): any[];\n    }\n    class IfcTankType extends IFC4.IfcFlowStorageDeviceType {\n        PredefinedType: (Handle<IFC4.IfcTankTypeEnum> | IFC4.IfcTankTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTankTypeEnum> | IFC4.IfcTankTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTankType;\n        ToTape(): any[];\n    }\n    class IfcTendon extends IFC4.IfcReinforcingElement {\n        PredefinedType: (Handle<IFC4.IfcTendonTypeEnum> | IFC4.IfcTendonTypeEnum) | null;\n        NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        TensionForce: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null;\n        PreStress: (Handle<IFC4.IfcPressureMeasure> | IFC4.IfcPressureMeasure) | null;\n        FrictionCoefficient: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null;\n        AnchorageSlip: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        MinCurvatureRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTendonTypeEnum> | IFC4.IfcTendonTypeEnum) | null, NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, TensionForce: (Handle<IFC4.IfcForceMeasure> | IFC4.IfcForceMeasure) | null, PreStress: (Handle<IFC4.IfcPressureMeasure> | IFC4.IfcPressureMeasure) | null, FrictionCoefficient: (Handle<IFC4.IfcNormalisedRatioMeasure> | IFC4.IfcNormalisedRatioMeasure) | null, AnchorageSlip: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, MinCurvatureRadius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTendon;\n        ToTape(): any[];\n    }\n    class IfcTendonAnchor extends IFC4.IfcReinforcingElement {\n        PredefinedType: (Handle<IFC4.IfcTendonAnchorTypeEnum> | IFC4.IfcTendonAnchorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTendonAnchorTypeEnum> | IFC4.IfcTendonAnchorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTendonAnchor;\n        ToTape(): any[];\n    }\n    class IfcTendonAnchorType extends IFC4.IfcReinforcingElementType {\n        PredefinedType: (Handle<IFC4.IfcTendonAnchorTypeEnum> | IFC4.IfcTendonAnchorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTendonAnchorTypeEnum> | IFC4.IfcTendonAnchorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTendonAnchorType;\n        ToTape(): any[];\n    }\n    class IfcTendonType extends IFC4.IfcReinforcingElementType {\n        PredefinedType: (Handle<IFC4.IfcTendonTypeEnum> | IFC4.IfcTendonTypeEnum);\n        NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        SheathDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTendonTypeEnum> | IFC4.IfcTendonTypeEnum), NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, SheathDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTendonType;\n        ToTape(): any[];\n    }\n    class IfcTransformerType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcTransformerTypeEnum> | IFC4.IfcTransformerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTransformerTypeEnum> | IFC4.IfcTransformerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTransformerType;\n        ToTape(): any[];\n    }\n    class IfcTransportElement extends IFC4.IfcElement {\n        PredefinedType: (Handle<IFC4.IfcTransportElementTypeEnum> | IFC4.IfcTransportElementTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcTransportElementTypeEnum> | IFC4.IfcTransportElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTransportElement;\n        ToTape(): any[];\n    }\n    class IfcTrimmedCurve extends IFC4.IfcBoundedCurve {\n        BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve);\n        Trim1: (Handle<IFC4.IfcTrimmingSelect> | IFC4.IfcTrimmingSelect)[];\n        Trim2: (Handle<IFC4.IfcTrimmingSelect> | IFC4.IfcTrimmingSelect)[];\n        SenseAgreement: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean);\n        MasterRepresentation: (Handle<IFC4.IfcTrimmingPreference> | IFC4.IfcTrimmingPreference);\n        constructor(expressID: number, type: number, BasisCurve: (Handle<IFC4.IfcCurve> | IFC4.IfcCurve), Trim1: (Handle<IFC4.IfcTrimmingSelect> | IFC4.IfcTrimmingSelect)[], Trim2: (Handle<IFC4.IfcTrimmingSelect> | IFC4.IfcTrimmingSelect)[], SenseAgreement: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean), MasterRepresentation: (Handle<IFC4.IfcTrimmingPreference> | IFC4.IfcTrimmingPreference));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTrimmedCurve;\n        ToTape(): any[];\n    }\n    class IfcTubeBundleType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcTubeBundleTypeEnum> | IFC4.IfcTubeBundleTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcTubeBundleTypeEnum> | IFC4.IfcTubeBundleTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTubeBundleType;\n        ToTape(): any[];\n    }\n    class IfcUnitaryEquipmentType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcUnitaryEquipmentTypeEnum> | IFC4.IfcUnitaryEquipmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcUnitaryEquipmentTypeEnum> | IFC4.IfcUnitaryEquipmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryEquipmentType;\n        ToTape(): any[];\n    }\n    class IfcValveType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcValveTypeEnum> | IFC4.IfcValveTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcValveTypeEnum> | IFC4.IfcValveTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcValveType;\n        ToTape(): any[];\n    }\n    class IfcVibrationIsolator extends IFC4.IfcElementComponent {\n        PredefinedType: (Handle<IFC4.IfcVibrationIsolatorTypeEnum> | IFC4.IfcVibrationIsolatorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcVibrationIsolatorTypeEnum> | IFC4.IfcVibrationIsolatorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVibrationIsolator;\n        ToTape(): any[];\n    }\n    class IfcVibrationIsolatorType extends IFC4.IfcElementComponentType {\n        PredefinedType: (Handle<IFC4.IfcVibrationIsolatorTypeEnum> | IFC4.IfcVibrationIsolatorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcVibrationIsolatorTypeEnum> | IFC4.IfcVibrationIsolatorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVibrationIsolatorType;\n        ToTape(): any[];\n    }\n    class IfcVirtualElement extends IFC4.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVirtualElement;\n        ToTape(): any[];\n    }\n    class IfcVoidingFeature extends IFC4.IfcFeatureElementSubtraction {\n        PredefinedType: (Handle<IFC4.IfcVoidingFeatureTypeEnum> | IFC4.IfcVoidingFeatureTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcVoidingFeatureTypeEnum> | IFC4.IfcVoidingFeatureTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcVoidingFeature;\n        ToTape(): any[];\n    }\n    class IfcWallType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcWallTypeEnum> | IFC4.IfcWallTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcWallTypeEnum> | IFC4.IfcWallTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWallType;\n        ToTape(): any[];\n    }\n    class IfcWasteTerminalType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcWasteTerminalTypeEnum> | IFC4.IfcWasteTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcWasteTerminalTypeEnum> | IFC4.IfcWasteTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWasteTerminalType;\n        ToTape(): any[];\n    }\n    class IfcWindowType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcWindowTypeEnum> | IFC4.IfcWindowTypeEnum);\n        PartitioningType: (Handle<IFC4.IfcWindowTypePartitioningEnum> | IFC4.IfcWindowTypePartitioningEnum);\n        ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null;\n        UserDefinedPartitioningType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcWindowTypeEnum> | IFC4.IfcWindowTypeEnum), PartitioningType: (Handle<IFC4.IfcWindowTypePartitioningEnum> | IFC4.IfcWindowTypePartitioningEnum), ParameterTakesPrecedence: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, UserDefinedPartitioningType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowType;\n        ToTape(): any[];\n    }\n    class IfcWorkCalendar extends IFC4.IfcControl {\n        WorkingTimes: (Handle<IFC4.IfcWorkTime> | IFC4.IfcWorkTime)[] | null;\n        ExceptionTimes: (Handle<IFC4.IfcWorkTime> | IFC4.IfcWorkTime)[] | null;\n        PredefinedType: (Handle<IFC4.IfcWorkCalendarTypeEnum> | IFC4.IfcWorkCalendarTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, WorkingTimes: (Handle<IFC4.IfcWorkTime> | IFC4.IfcWorkTime)[] | null, ExceptionTimes: (Handle<IFC4.IfcWorkTime> | IFC4.IfcWorkTime)[] | null, PredefinedType: (Handle<IFC4.IfcWorkCalendarTypeEnum> | IFC4.IfcWorkCalendarTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkCalendar;\n        ToTape(): any[];\n    }\n    class IfcWorkControl extends IFC4.IfcControl {\n        CreationDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime);\n        Creators: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson)[] | null;\n        Purpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        Duration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        TotalFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null;\n        StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime);\n        FinishTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, CreationDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), Creators: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson)[] | null, Purpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Duration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, TotalFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), FinishTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkControl;\n        ToTape(): any[];\n    }\n    class IfcWorkPlan extends IFC4.IfcWorkControl {\n        PredefinedType: (Handle<IFC4.IfcWorkPlanTypeEnum> | IFC4.IfcWorkPlanTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, CreationDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), Creators: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson)[] | null, Purpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Duration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, TotalFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), FinishTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, PredefinedType: (Handle<IFC4.IfcWorkPlanTypeEnum> | IFC4.IfcWorkPlanTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkPlan;\n        ToTape(): any[];\n    }\n    class IfcWorkSchedule extends IFC4.IfcWorkControl {\n        PredefinedType: (Handle<IFC4.IfcWorkScheduleTypeEnum> | IFC4.IfcWorkScheduleTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, CreationDate: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), Creators: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson)[] | null, Purpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Duration: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, TotalFloat: (Handle<IFC4.IfcDuration> | IFC4.IfcDuration) | null, StartTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime), FinishTime: (Handle<IFC4.IfcDateTime> | IFC4.IfcDateTime) | null, PredefinedType: (Handle<IFC4.IfcWorkScheduleTypeEnum> | IFC4.IfcWorkScheduleTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWorkSchedule;\n        ToTape(): any[];\n    }\n    class IfcZone extends IFC4.IfcSystem {\n        LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcZone;\n        ToTape(): any[];\n    }\n    class IfcActionRequest extends IFC4.IfcControl {\n        PredefinedType: (Handle<IFC4.IfcActionRequestTypeEnum> | IFC4.IfcActionRequestTypeEnum) | null;\n        Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcActionRequestTypeEnum> | IFC4.IfcActionRequestTypeEnum) | null, Status: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActionRequest;\n        ToTape(): any[];\n    }\n    class IfcAirTerminalBoxType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcAirTerminalBoxTypeEnum> | IFC4.IfcAirTerminalBoxTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcAirTerminalBoxTypeEnum> | IFC4.IfcAirTerminalBoxTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalBoxType;\n        ToTape(): any[];\n    }\n    class IfcAirTerminalType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcAirTerminalTypeEnum> | IFC4.IfcAirTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcAirTerminalTypeEnum> | IFC4.IfcAirTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalType;\n        ToTape(): any[];\n    }\n    class IfcAirToAirHeatRecoveryType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcAirToAirHeatRecoveryTypeEnum> | IFC4.IfcAirToAirHeatRecoveryTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcAirToAirHeatRecoveryTypeEnum> | IFC4.IfcAirToAirHeatRecoveryTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirToAirHeatRecoveryType;\n        ToTape(): any[];\n    }\n    class IfcAsset extends IFC4.IfcGroup {\n        Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null;\n        OriginalValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null;\n        CurrentValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null;\n        TotalReplacementCost: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null;\n        Owner: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        User: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null;\n        ResponsiblePerson: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson) | null;\n        IncorporationDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null;\n        DepreciatedValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, OriginalValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null, CurrentValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null, TotalReplacementCost: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null, Owner: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, User: (Handle<IFC4.IfcActorSelect> | IFC4.IfcActorSelect) | null, ResponsiblePerson: (Handle<IFC4.IfcPerson> | IFC4.IfcPerson) | null, IncorporationDate: (Handle<IFC4.IfcDate> | IFC4.IfcDate) | null, DepreciatedValue: (Handle<IFC4.IfcCostValue> | IFC4.IfcCostValue) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAsset;\n        ToTape(): any[];\n    }\n    class IfcAudioVisualApplianceType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcAudioVisualApplianceTypeEnum> | IFC4.IfcAudioVisualApplianceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcAudioVisualApplianceTypeEnum> | IFC4.IfcAudioVisualApplianceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAudioVisualApplianceType;\n        ToTape(): any[];\n    }\n    class IfcBSplineCurve extends IFC4.IfcBoundedCurve {\n        Degree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger);\n        ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[];\n        CurveForm: (Handle<IFC4.IfcBSplineCurveForm> | IFC4.IfcBSplineCurveForm);\n        ClosedCurve: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical);\n        constructor(expressID: number, type: number, Degree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[], CurveForm: (Handle<IFC4.IfcBSplineCurveForm> | IFC4.IfcBSplineCurveForm), ClosedCurve: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineCurve;\n        ToTape(): any[];\n    }\n    class IfcBSplineCurveWithKnots extends IFC4.IfcBSplineCurve {\n        KnotMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[];\n        Knots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[];\n        KnotSpec: (Handle<IFC4.IfcKnotType> | IFC4.IfcKnotType);\n        constructor(expressID: number, type: number, Degree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[], CurveForm: (Handle<IFC4.IfcBSplineCurveForm> | IFC4.IfcBSplineCurveForm), ClosedCurve: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), KnotMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], Knots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[], KnotSpec: (Handle<IFC4.IfcKnotType> | IFC4.IfcKnotType));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBSplineCurveWithKnots;\n        ToTape(): any[];\n    }\n    class IfcBeamType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcBeamTypeEnum> | IFC4.IfcBeamTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcBeamTypeEnum> | IFC4.IfcBeamTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBeamType;\n        ToTape(): any[];\n    }\n    class IfcBoilerType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcBoilerTypeEnum> | IFC4.IfcBoilerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcBoilerTypeEnum> | IFC4.IfcBoilerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoilerType;\n        ToTape(): any[];\n    }\n    class IfcBoundaryCurve extends IFC4.IfcCompositeCurveOnSurface {\n        constructor(expressID: number, type: number, Segments: (Handle<IFC4.IfcCompositeCurveSegment> | IFC4.IfcCompositeCurveSegment)[], SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoundaryCurve;\n        ToTape(): any[];\n    }\n    class IfcBuildingElement extends IFC4.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElement;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementPart extends IFC4.IfcElementComponent {\n        PredefinedType: (Handle<IFC4.IfcBuildingElementPartTypeEnum> | IFC4.IfcBuildingElementPartTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcBuildingElementPartTypeEnum> | IFC4.IfcBuildingElementPartTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementPart;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementPartType extends IFC4.IfcElementComponentType {\n        PredefinedType: (Handle<IFC4.IfcBuildingElementPartTypeEnum> | IFC4.IfcBuildingElementPartTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcBuildingElementPartTypeEnum> | IFC4.IfcBuildingElementPartTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementPartType;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementProxy extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcBuildingElementProxyTypeEnum> | IFC4.IfcBuildingElementProxyTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcBuildingElementProxyTypeEnum> | IFC4.IfcBuildingElementProxyTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementProxy;\n        ToTape(): any[];\n    }\n    class IfcBuildingElementProxyType extends IFC4.IfcBuildingElementType {\n        PredefinedType: (Handle<IFC4.IfcBuildingElementProxyTypeEnum> | IFC4.IfcBuildingElementProxyTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcBuildingElementProxyTypeEnum> | IFC4.IfcBuildingElementProxyTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingElementProxyType;\n        ToTape(): any[];\n    }\n    class IfcBuildingSystem extends IFC4.IfcSystem {\n        PredefinedType: (Handle<IFC4.IfcBuildingSystemTypeEnum> | IFC4.IfcBuildingSystemTypeEnum) | null;\n        LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcBuildingSystemTypeEnum> | IFC4.IfcBuildingSystemTypeEnum) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBuildingSystem;\n        ToTape(): any[];\n    }\n    class IfcBurnerType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcBurnerTypeEnum> | IFC4.IfcBurnerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcBurnerTypeEnum> | IFC4.IfcBurnerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBurnerType;\n        ToTape(): any[];\n    }\n    class IfcCableCarrierFittingType extends IFC4.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC4.IfcCableCarrierFittingTypeEnum> | IFC4.IfcCableCarrierFittingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCableCarrierFittingTypeEnum> | IFC4.IfcCableCarrierFittingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierFittingType;\n        ToTape(): any[];\n    }\n    class IfcCableCarrierSegmentType extends IFC4.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC4.IfcCableCarrierSegmentTypeEnum> | IFC4.IfcCableCarrierSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCableCarrierSegmentTypeEnum> | IFC4.IfcCableCarrierSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierSegmentType;\n        ToTape(): any[];\n    }\n    class IfcCableFittingType extends IFC4.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC4.IfcCableFittingTypeEnum> | IFC4.IfcCableFittingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCableFittingTypeEnum> | IFC4.IfcCableFittingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableFittingType;\n        ToTape(): any[];\n    }\n    class IfcCableSegmentType extends IFC4.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC4.IfcCableSegmentTypeEnum> | IFC4.IfcCableSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCableSegmentTypeEnum> | IFC4.IfcCableSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableSegmentType;\n        ToTape(): any[];\n    }\n    class IfcChillerType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcChillerTypeEnum> | IFC4.IfcChillerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcChillerTypeEnum> | IFC4.IfcChillerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcChillerType;\n        ToTape(): any[];\n    }\n    class IfcChimney extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcChimneyTypeEnum> | IFC4.IfcChimneyTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcChimneyTypeEnum> | IFC4.IfcChimneyTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcChimney;\n        ToTape(): any[];\n    }\n    class IfcCircle extends IFC4.IfcConic {\n        Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure);\n        constructor(expressID: number, type: number, Position: (Handle<IFC4.IfcAxis2Placement> | IFC4.IfcAxis2Placement), Radius: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCircle;\n        ToTape(): any[];\n    }\n    class IfcCivilElement extends IFC4.IfcElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCivilElement;\n        ToTape(): any[];\n    }\n    class IfcCoilType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcCoilTypeEnum> | IFC4.IfcCoilTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCoilTypeEnum> | IFC4.IfcCoilTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoilType;\n        ToTape(): any[];\n    }\n    class IfcColumn extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcColumnTypeEnum> | IFC4.IfcColumnTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcColumnTypeEnum> | IFC4.IfcColumnTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColumn;\n        ToTape(): any[];\n    }\n    class IfcColumnStandardCase extends IFC4.IfcColumn {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcColumnTypeEnum> | IFC4.IfcColumnTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcColumnStandardCase;\n        ToTape(): any[];\n    }\n    class IfcCommunicationsApplianceType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcCommunicationsApplianceTypeEnum> | IFC4.IfcCommunicationsApplianceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCommunicationsApplianceTypeEnum> | IFC4.IfcCommunicationsApplianceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCommunicationsApplianceType;\n        ToTape(): any[];\n    }\n    class IfcCompressorType extends IFC4.IfcFlowMovingDeviceType {\n        PredefinedType: (Handle<IFC4.IfcCompressorTypeEnum> | IFC4.IfcCompressorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCompressorTypeEnum> | IFC4.IfcCompressorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompressorType;\n        ToTape(): any[];\n    }\n    class IfcCondenserType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcCondenserTypeEnum> | IFC4.IfcCondenserTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCondenserTypeEnum> | IFC4.IfcCondenserTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCondenserType;\n        ToTape(): any[];\n    }\n    class IfcConstructionEquipmentResource extends IFC4.IfcConstructionResource {\n        PredefinedType: (Handle<IFC4.IfcConstructionEquipmentResourceTypeEnum> | IFC4.IfcConstructionEquipmentResourceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcConstructionEquipmentResourceTypeEnum> | IFC4.IfcConstructionEquipmentResourceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionEquipmentResource;\n        ToTape(): any[];\n    }\n    class IfcConstructionMaterialResource extends IFC4.IfcConstructionResource {\n        PredefinedType: (Handle<IFC4.IfcConstructionMaterialResourceTypeEnum> | IFC4.IfcConstructionMaterialResourceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcConstructionMaterialResourceTypeEnum> | IFC4.IfcConstructionMaterialResourceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionMaterialResource;\n        ToTape(): any[];\n    }\n    class IfcConstructionProductResource extends IFC4.IfcConstructionResource {\n        PredefinedType: (Handle<IFC4.IfcConstructionProductResourceTypeEnum> | IFC4.IfcConstructionProductResourceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Identification: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, LongDescription: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, Usage: (Handle<IFC4.IfcResourceTime> | IFC4.IfcResourceTime) | null, BaseCosts: (Handle<IFC4.IfcAppliedValue> | IFC4.IfcAppliedValue)[] | null, BaseQuantity: (Handle<IFC4.IfcPhysicalQuantity> | IFC4.IfcPhysicalQuantity) | null, PredefinedType: (Handle<IFC4.IfcConstructionProductResourceTypeEnum> | IFC4.IfcConstructionProductResourceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcConstructionProductResource;\n        ToTape(): any[];\n    }\n    class IfcCooledBeamType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcCooledBeamTypeEnum> | IFC4.IfcCooledBeamTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCooledBeamTypeEnum> | IFC4.IfcCooledBeamTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCooledBeamType;\n        ToTape(): any[];\n    }\n    class IfcCoolingTowerType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcCoolingTowerTypeEnum> | IFC4.IfcCoolingTowerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcCoolingTowerTypeEnum> | IFC4.IfcCoolingTowerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoolingTowerType;\n        ToTape(): any[];\n    }\n    class IfcCovering extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcCoveringTypeEnum> | IFC4.IfcCoveringTypeEnum) | null;\n        CoversSpaces: (Handle<IFC4.IfcRelCoversSpaces> | IFC4.IfcRelCoversSpaces)[] | null;\n        CoversElements: (Handle<IFC4.IfcRelCoversBldgElements> | IFC4.IfcRelCoversBldgElements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCoveringTypeEnum> | IFC4.IfcCoveringTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCovering;\n        ToTape(): any[];\n    }\n    class IfcCurtainWall extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcCurtainWallTypeEnum> | IFC4.IfcCurtainWallTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCurtainWallTypeEnum> | IFC4.IfcCurtainWallTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCurtainWall;\n        ToTape(): any[];\n    }\n    class IfcDamperType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcDamperTypeEnum> | IFC4.IfcDamperTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDamperTypeEnum> | IFC4.IfcDamperTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDamperType;\n        ToTape(): any[];\n    }\n    class IfcDiscreteAccessory extends IFC4.IfcElementComponent {\n        PredefinedType: (Handle<IFC4.IfcDiscreteAccessoryTypeEnum> | IFC4.IfcDiscreteAccessoryTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcDiscreteAccessoryTypeEnum> | IFC4.IfcDiscreteAccessoryTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDiscreteAccessory;\n        ToTape(): any[];\n    }\n    class IfcDiscreteAccessoryType extends IFC4.IfcElementComponentType {\n        PredefinedType: (Handle<IFC4.IfcDiscreteAccessoryTypeEnum> | IFC4.IfcDiscreteAccessoryTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDiscreteAccessoryTypeEnum> | IFC4.IfcDiscreteAccessoryTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDiscreteAccessoryType;\n        ToTape(): any[];\n    }\n    class IfcDistributionChamberElementType extends IFC4.IfcDistributionFlowElementType {\n        PredefinedType: (Handle<IFC4.IfcDistributionChamberElementTypeEnum> | IFC4.IfcDistributionChamberElementTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDistributionChamberElementTypeEnum> | IFC4.IfcDistributionChamberElementTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionChamberElementType;\n        ToTape(): any[];\n    }\n    class IfcDistributionControlElementType extends IFC4.IfcDistributionElementType {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionControlElementType;\n        ToTape(): any[];\n    }\n    class IfcDistributionElement extends IFC4.IfcElement {\n        HasPorts: (Handle<IFC4.IfcRelConnectsPortToElement> | IFC4.IfcRelConnectsPortToElement)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionElement;\n        ToTape(): any[];\n    }\n    class IfcDistributionFlowElement extends IFC4.IfcDistributionElement {\n        HasControlElements: (Handle<IFC4.IfcRelFlowControlElements> | IFC4.IfcRelFlowControlElements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionFlowElement;\n        ToTape(): any[];\n    }\n    class IfcDistributionPort extends IFC4.IfcPort {\n        FlowDirection: (Handle<IFC4.IfcFlowDirectionEnum> | IFC4.IfcFlowDirectionEnum) | null;\n        PredefinedType: (Handle<IFC4.IfcDistributionPortTypeEnum> | IFC4.IfcDistributionPortTypeEnum) | null;\n        SystemType: (Handle<IFC4.IfcDistributionSystemEnum> | IFC4.IfcDistributionSystemEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, FlowDirection: (Handle<IFC4.IfcFlowDirectionEnum> | IFC4.IfcFlowDirectionEnum) | null, PredefinedType: (Handle<IFC4.IfcDistributionPortTypeEnum> | IFC4.IfcDistributionPortTypeEnum) | null, SystemType: (Handle<IFC4.IfcDistributionSystemEnum> | IFC4.IfcDistributionSystemEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionPort;\n        ToTape(): any[];\n    }\n    class IfcDistributionSystem extends IFC4.IfcSystem {\n        LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        PredefinedType: (Handle<IFC4.IfcDistributionSystemEnum> | IFC4.IfcDistributionSystemEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDistributionSystemEnum> | IFC4.IfcDistributionSystemEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionSystem;\n        ToTape(): any[];\n    }\n    class IfcDoor extends IFC4.IfcBuildingElement {\n        OverallHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        PredefinedType: (Handle<IFC4.IfcDoorTypeEnum> | IFC4.IfcDoorTypeEnum) | null;\n        OperationType: (Handle<IFC4.IfcDoorTypeOperationEnum> | IFC4.IfcDoorTypeOperationEnum) | null;\n        UserDefinedOperationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, OverallHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcDoorTypeEnum> | IFC4.IfcDoorTypeEnum) | null, OperationType: (Handle<IFC4.IfcDoorTypeOperationEnum> | IFC4.IfcDoorTypeOperationEnum) | null, UserDefinedOperationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoor;\n        ToTape(): any[];\n    }\n    class IfcDoorStandardCase extends IFC4.IfcDoor {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, OverallHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcDoorTypeEnum> | IFC4.IfcDoorTypeEnum) | null, OperationType: (Handle<IFC4.IfcDoorTypeOperationEnum> | IFC4.IfcDoorTypeOperationEnum) | null, UserDefinedOperationType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDoorStandardCase;\n        ToTape(): any[];\n    }\n    class IfcDuctFittingType extends IFC4.IfcFlowFittingType {\n        PredefinedType: (Handle<IFC4.IfcDuctFittingTypeEnum> | IFC4.IfcDuctFittingTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDuctFittingTypeEnum> | IFC4.IfcDuctFittingTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctFittingType;\n        ToTape(): any[];\n    }\n    class IfcDuctSegmentType extends IFC4.IfcFlowSegmentType {\n        PredefinedType: (Handle<IFC4.IfcDuctSegmentTypeEnum> | IFC4.IfcDuctSegmentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDuctSegmentTypeEnum> | IFC4.IfcDuctSegmentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSegmentType;\n        ToTape(): any[];\n    }\n    class IfcDuctSilencerType extends IFC4.IfcFlowTreatmentDeviceType {\n        PredefinedType: (Handle<IFC4.IfcDuctSilencerTypeEnum> | IFC4.IfcDuctSilencerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDuctSilencerTypeEnum> | IFC4.IfcDuctSilencerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSilencerType;\n        ToTape(): any[];\n    }\n    class IfcElectricApplianceType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcElectricApplianceTypeEnum> | IFC4.IfcElectricApplianceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcElectricApplianceTypeEnum> | IFC4.IfcElectricApplianceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricApplianceType;\n        ToTape(): any[];\n    }\n    class IfcElectricDistributionBoardType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcElectricDistributionBoardTypeEnum> | IFC4.IfcElectricDistributionBoardTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcElectricDistributionBoardTypeEnum> | IFC4.IfcElectricDistributionBoardTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricDistributionBoardType;\n        ToTape(): any[];\n    }\n    class IfcElectricFlowStorageDeviceType extends IFC4.IfcFlowStorageDeviceType {\n        PredefinedType: (Handle<IFC4.IfcElectricFlowStorageDeviceTypeEnum> | IFC4.IfcElectricFlowStorageDeviceTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcElectricFlowStorageDeviceTypeEnum> | IFC4.IfcElectricFlowStorageDeviceTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricFlowStorageDeviceType;\n        ToTape(): any[];\n    }\n    class IfcElectricGeneratorType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcElectricGeneratorTypeEnum> | IFC4.IfcElectricGeneratorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcElectricGeneratorTypeEnum> | IFC4.IfcElectricGeneratorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricGeneratorType;\n        ToTape(): any[];\n    }\n    class IfcElectricMotorType extends IFC4.IfcEnergyConversionDeviceType {\n        PredefinedType: (Handle<IFC4.IfcElectricMotorTypeEnum> | IFC4.IfcElectricMotorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcElectricMotorTypeEnum> | IFC4.IfcElectricMotorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricMotorType;\n        ToTape(): any[];\n    }\n    class IfcElectricTimeControlType extends IFC4.IfcFlowControllerType {\n        PredefinedType: (Handle<IFC4.IfcElectricTimeControlTypeEnum> | IFC4.IfcElectricTimeControlTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcElectricTimeControlTypeEnum> | IFC4.IfcElectricTimeControlTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricTimeControlType;\n        ToTape(): any[];\n    }\n    class IfcEnergyConversionDevice extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEnergyConversionDevice;\n        ToTape(): any[];\n    }\n    class IfcEngine extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcEngineTypeEnum> | IFC4.IfcEngineTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcEngineTypeEnum> | IFC4.IfcEngineTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEngine;\n        ToTape(): any[];\n    }\n    class IfcEvaporativeCooler extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcEvaporativeCoolerTypeEnum> | IFC4.IfcEvaporativeCoolerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcEvaporativeCoolerTypeEnum> | IFC4.IfcEvaporativeCoolerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporativeCooler;\n        ToTape(): any[];\n    }\n    class IfcEvaporator extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcEvaporatorTypeEnum> | IFC4.IfcEvaporatorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcEvaporatorTypeEnum> | IFC4.IfcEvaporatorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcEvaporator;\n        ToTape(): any[];\n    }\n    class IfcExternalSpatialElement extends IFC4.IfcExternalSpatialStructureElement {\n        PredefinedType: (Handle<IFC4.IfcExternalSpatialElementTypeEnum> | IFC4.IfcExternalSpatialElementTypeEnum) | null;\n        BoundedBy: (Handle<IFC4.IfcRelSpaceBoundary> | IFC4.IfcRelSpaceBoundary)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcExternalSpatialElementTypeEnum> | IFC4.IfcExternalSpatialElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcExternalSpatialElement;\n        ToTape(): any[];\n    }\n    class IfcFanType extends IFC4.IfcFlowMovingDeviceType {\n        PredefinedType: (Handle<IFC4.IfcFanTypeEnum> | IFC4.IfcFanTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcFanTypeEnum> | IFC4.IfcFanTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFanType;\n        ToTape(): any[];\n    }\n    class IfcFilterType extends IFC4.IfcFlowTreatmentDeviceType {\n        PredefinedType: (Handle<IFC4.IfcFilterTypeEnum> | IFC4.IfcFilterTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcFilterTypeEnum> | IFC4.IfcFilterTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFilterType;\n        ToTape(): any[];\n    }\n    class IfcFireSuppressionTerminalType extends IFC4.IfcFlowTerminalType {\n        PredefinedType: (Handle<IFC4.IfcFireSuppressionTerminalTypeEnum> | IFC4.IfcFireSuppressionTerminalTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcFireSuppressionTerminalTypeEnum> | IFC4.IfcFireSuppressionTerminalTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFireSuppressionTerminalType;\n        ToTape(): any[];\n    }\n    class IfcFlowController extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowController;\n        ToTape(): any[];\n    }\n    class IfcFlowFitting extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowFitting;\n        ToTape(): any[];\n    }\n    class IfcFlowInstrumentType extends IFC4.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC4.IfcFlowInstrumentTypeEnum> | IFC4.IfcFlowInstrumentTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcFlowInstrumentTypeEnum> | IFC4.IfcFlowInstrumentTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowInstrumentType;\n        ToTape(): any[];\n    }\n    class IfcFlowMeter extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcFlowMeterTypeEnum> | IFC4.IfcFlowMeterTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFlowMeterTypeEnum> | IFC4.IfcFlowMeterTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMeter;\n        ToTape(): any[];\n    }\n    class IfcFlowMovingDevice extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowMovingDevice;\n        ToTape(): any[];\n    }\n    class IfcFlowSegment extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowSegment;\n        ToTape(): any[];\n    }\n    class IfcFlowStorageDevice extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowStorageDevice;\n        ToTape(): any[];\n    }\n    class IfcFlowTerminal extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTerminal;\n        ToTape(): any[];\n    }\n    class IfcFlowTreatmentDevice extends IFC4.IfcDistributionFlowElement {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowTreatmentDevice;\n        ToTape(): any[];\n    }\n    class IfcFooting extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcFootingTypeEnum> | IFC4.IfcFootingTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFootingTypeEnum> | IFC4.IfcFootingTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFooting;\n        ToTape(): any[];\n    }\n    class IfcHeatExchanger extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcHeatExchangerTypeEnum> | IFC4.IfcHeatExchangerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcHeatExchangerTypeEnum> | IFC4.IfcHeatExchangerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHeatExchanger;\n        ToTape(): any[];\n    }\n    class IfcHumidifier extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcHumidifierTypeEnum> | IFC4.IfcHumidifierTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcHumidifierTypeEnum> | IFC4.IfcHumidifierTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcHumidifier;\n        ToTape(): any[];\n    }\n    class IfcInterceptor extends IFC4.IfcFlowTreatmentDevice {\n        PredefinedType: (Handle<IFC4.IfcInterceptorTypeEnum> | IFC4.IfcInterceptorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcInterceptorTypeEnum> | IFC4.IfcInterceptorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcInterceptor;\n        ToTape(): any[];\n    }\n    class IfcJunctionBox extends IFC4.IfcFlowFitting {\n        PredefinedType: (Handle<IFC4.IfcJunctionBoxTypeEnum> | IFC4.IfcJunctionBoxTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcJunctionBoxTypeEnum> | IFC4.IfcJunctionBoxTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcJunctionBox;\n        ToTape(): any[];\n    }\n    class IfcLamp extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcLampTypeEnum> | IFC4.IfcLampTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcLampTypeEnum> | IFC4.IfcLampTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLamp;\n        ToTape(): any[];\n    }\n    class IfcLightFixture extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcLightFixtureTypeEnum> | IFC4.IfcLightFixtureTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcLightFixtureTypeEnum> | IFC4.IfcLightFixtureTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcLightFixture;\n        ToTape(): any[];\n    }\n    class IfcMedicalDevice extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcMedicalDeviceTypeEnum> | IFC4.IfcMedicalDeviceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcMedicalDeviceTypeEnum> | IFC4.IfcMedicalDeviceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMedicalDevice;\n        ToTape(): any[];\n    }\n    class IfcMember extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcMemberTypeEnum> | IFC4.IfcMemberTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcMemberTypeEnum> | IFC4.IfcMemberTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMember;\n        ToTape(): any[];\n    }\n    class IfcMemberStandardCase extends IFC4.IfcMember {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcMemberTypeEnum> | IFC4.IfcMemberTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMemberStandardCase;\n        ToTape(): any[];\n    }\n    class IfcMotorConnection extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcMotorConnectionTypeEnum> | IFC4.IfcMotorConnectionTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcMotorConnectionTypeEnum> | IFC4.IfcMotorConnectionTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcMotorConnection;\n        ToTape(): any[];\n    }\n    class IfcOuterBoundaryCurve extends IFC4.IfcBoundaryCurve {\n        constructor(expressID: number, type: number, Segments: (Handle<IFC4.IfcCompositeCurveSegment> | IFC4.IfcCompositeCurveSegment)[], SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOuterBoundaryCurve;\n        ToTape(): any[];\n    }\n    class IfcOutlet extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcOutletTypeEnum> | IFC4.IfcOutletTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcOutletTypeEnum> | IFC4.IfcOutletTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcOutlet;\n        ToTape(): any[];\n    }\n    class IfcPile extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcPileTypeEnum> | IFC4.IfcPileTypeEnum) | null;\n        ConstructionType: (Handle<IFC4.IfcPileConstructionEnum> | IFC4.IfcPileConstructionEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcPileTypeEnum> | IFC4.IfcPileTypeEnum) | null, ConstructionType: (Handle<IFC4.IfcPileConstructionEnum> | IFC4.IfcPileConstructionEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPile;\n        ToTape(): any[];\n    }\n    class IfcPipeFitting extends IFC4.IfcFlowFitting {\n        PredefinedType: (Handle<IFC4.IfcPipeFittingTypeEnum> | IFC4.IfcPipeFittingTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcPipeFittingTypeEnum> | IFC4.IfcPipeFittingTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPipeFitting;\n        ToTape(): any[];\n    }\n    class IfcPipeSegment extends IFC4.IfcFlowSegment {\n        PredefinedType: (Handle<IFC4.IfcPipeSegmentTypeEnum> | IFC4.IfcPipeSegmentTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcPipeSegmentTypeEnum> | IFC4.IfcPipeSegmentTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPipeSegment;\n        ToTape(): any[];\n    }\n    class IfcPlate extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcPlateTypeEnum> | IFC4.IfcPlateTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcPlateTypeEnum> | IFC4.IfcPlateTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlate;\n        ToTape(): any[];\n    }\n    class IfcPlateStandardCase extends IFC4.IfcPlate {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcPlateTypeEnum> | IFC4.IfcPlateTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPlateStandardCase;\n        ToTape(): any[];\n    }\n    class IfcProtectiveDevice extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTypeEnum> | IFC4.IfcProtectiveDeviceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTypeEnum> | IFC4.IfcProtectiveDeviceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDevice;\n        ToTape(): any[];\n    }\n    class IfcProtectiveDeviceTrippingUnitType extends IFC4.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum> | IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum> | IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDeviceTrippingUnitType;\n        ToTape(): any[];\n    }\n    class IfcPump extends IFC4.IfcFlowMovingDevice {\n        PredefinedType: (Handle<IFC4.IfcPumpTypeEnum> | IFC4.IfcPumpTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcPumpTypeEnum> | IFC4.IfcPumpTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcPump;\n        ToTape(): any[];\n    }\n    class IfcRailing extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcRailingTypeEnum> | IFC4.IfcRailingTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcRailingTypeEnum> | IFC4.IfcRailingTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRailing;\n        ToTape(): any[];\n    }\n    class IfcRamp extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcRampTypeEnum> | IFC4.IfcRampTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcRampTypeEnum> | IFC4.IfcRampTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRamp;\n        ToTape(): any[];\n    }\n    class IfcRampFlight extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcRampFlightTypeEnum> | IFC4.IfcRampFlightTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcRampFlightTypeEnum> | IFC4.IfcRampFlightTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRampFlight;\n        ToTape(): any[];\n    }\n    class IfcRationalBSplineCurveWithKnots extends IFC4.IfcBSplineCurveWithKnots {\n        WeightsData: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[];\n        constructor(expressID: number, type: number, Degree: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger), ControlPointsList: (Handle<IFC4.IfcCartesianPoint> | IFC4.IfcCartesianPoint)[], CurveForm: (Handle<IFC4.IfcBSplineCurveForm> | IFC4.IfcBSplineCurveForm), ClosedCurve: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), SelfIntersect: (Handle<IFC4.IfcLogical> | IFC4.IfcLogical), KnotMultiplicities: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger)[], Knots: (Handle<IFC4.IfcParameterValue> | IFC4.IfcParameterValue)[], KnotSpec: (Handle<IFC4.IfcKnotType> | IFC4.IfcKnotType), WeightsData: (Handle<IFC4.IfcReal> | IFC4.IfcReal)[]);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRationalBSplineCurveWithKnots;\n        ToTape(): any[];\n    }\n    class IfcReinforcingBar extends IFC4.IfcReinforcingElement {\n        NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        BarLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        PredefinedType: (Handle<IFC4.IfcReinforcingBarTypeEnum> | IFC4.IfcReinforcingBarTypeEnum) | null;\n        BarSurface: (Handle<IFC4.IfcReinforcingBarSurfaceEnum> | IFC4.IfcReinforcingBarSurfaceEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, SteelGrade: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, BarLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcReinforcingBarTypeEnum> | IFC4.IfcReinforcingBarTypeEnum) | null, BarSurface: (Handle<IFC4.IfcReinforcingBarSurfaceEnum> | IFC4.IfcReinforcingBarSurfaceEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingBar;\n        ToTape(): any[];\n    }\n    class IfcReinforcingBarType extends IFC4.IfcReinforcingElementType {\n        PredefinedType: (Handle<IFC4.IfcReinforcingBarTypeEnum> | IFC4.IfcReinforcingBarTypeEnum);\n        NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null;\n        BarLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        BarSurface: (Handle<IFC4.IfcReinforcingBarSurfaceEnum> | IFC4.IfcReinforcingBarSurfaceEnum) | null;\n        BendingShapeCode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        BendingParameters: (Handle<IFC4.IfcBendingParameterSelect> | IFC4.IfcBendingParameterSelect)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcReinforcingBarTypeEnum> | IFC4.IfcReinforcingBarTypeEnum), NominalDiameter: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, CrossSectionArea: (Handle<IFC4.IfcAreaMeasure> | IFC4.IfcAreaMeasure) | null, BarLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, BarSurface: (Handle<IFC4.IfcReinforcingBarSurfaceEnum> | IFC4.IfcReinforcingBarSurfaceEnum) | null, BendingShapeCode: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, BendingParameters: (Handle<IFC4.IfcBendingParameterSelect> | IFC4.IfcBendingParameterSelect)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcReinforcingBarType;\n        ToTape(): any[];\n    }\n    class IfcRoof extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcRoofTypeEnum> | IFC4.IfcRoofTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcRoofTypeEnum> | IFC4.IfcRoofTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcRoof;\n        ToTape(): any[];\n    }\n    class IfcSanitaryTerminal extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcSanitaryTerminalTypeEnum> | IFC4.IfcSanitaryTerminalTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSanitaryTerminalTypeEnum> | IFC4.IfcSanitaryTerminalTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSanitaryTerminal;\n        ToTape(): any[];\n    }\n    class IfcSensorType extends IFC4.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC4.IfcSensorTypeEnum> | IFC4.IfcSensorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcSensorTypeEnum> | IFC4.IfcSensorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSensorType;\n        ToTape(): any[];\n    }\n    class IfcShadingDevice extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcShadingDeviceTypeEnum> | IFC4.IfcShadingDeviceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcShadingDeviceTypeEnum> | IFC4.IfcShadingDeviceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcShadingDevice;\n        ToTape(): any[];\n    }\n    class IfcSlab extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcSlabTypeEnum> | IFC4.IfcSlabTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSlabTypeEnum> | IFC4.IfcSlabTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlab;\n        ToTape(): any[];\n    }\n    class IfcSlabElementedCase extends IFC4.IfcSlab {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSlabTypeEnum> | IFC4.IfcSlabTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlabElementedCase;\n        ToTape(): any[];\n    }\n    class IfcSlabStandardCase extends IFC4.IfcSlab {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSlabTypeEnum> | IFC4.IfcSlabTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSlabStandardCase;\n        ToTape(): any[];\n    }\n    class IfcSolarDevice extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcSolarDeviceTypeEnum> | IFC4.IfcSolarDeviceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSolarDeviceTypeEnum> | IFC4.IfcSolarDeviceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSolarDevice;\n        ToTape(): any[];\n    }\n    class IfcSpaceHeater extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcSpaceHeaterTypeEnum> | IFC4.IfcSpaceHeaterTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSpaceHeaterTypeEnum> | IFC4.IfcSpaceHeaterTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSpaceHeater;\n        ToTape(): any[];\n    }\n    class IfcStackTerminal extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcStackTerminalTypeEnum> | IFC4.IfcStackTerminalTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcStackTerminalTypeEnum> | IFC4.IfcStackTerminalTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStackTerminal;\n        ToTape(): any[];\n    }\n    class IfcStair extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcStairTypeEnum> | IFC4.IfcStairTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcStairTypeEnum> | IFC4.IfcStairTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStair;\n        ToTape(): any[];\n    }\n    class IfcStairFlight extends IFC4.IfcBuildingElement {\n        NumberOfRisers: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        NumberOfTreads: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null;\n        RiserHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        TreadLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        PredefinedType: (Handle<IFC4.IfcStairFlightTypeEnum> | IFC4.IfcStairFlightTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, NumberOfRisers: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, NumberOfTreads: (Handle<IFC4.IfcInteger> | IFC4.IfcInteger) | null, RiserHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, TreadLength: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcStairFlightTypeEnum> | IFC4.IfcStairFlightTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStairFlight;\n        ToTape(): any[];\n    }\n    class IfcStructuralAnalysisModel extends IFC4.IfcSystem {\n        PredefinedType: (Handle<IFC4.IfcAnalysisModelTypeEnum> | IFC4.IfcAnalysisModelTypeEnum);\n        OrientationOf2DPlane: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null;\n        LoadedBy: (Handle<IFC4.IfcStructuralLoadGroup> | IFC4.IfcStructuralLoadGroup)[] | null;\n        HasResults: (Handle<IFC4.IfcStructuralResultGroup> | IFC4.IfcStructuralResultGroup)[] | null;\n        SharedPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcAnalysisModelTypeEnum> | IFC4.IfcAnalysisModelTypeEnum), OrientationOf2DPlane: (Handle<IFC4.IfcAxis2Placement3D> | IFC4.IfcAxis2Placement3D) | null, LoadedBy: (Handle<IFC4.IfcStructuralLoadGroup> | IFC4.IfcStructuralLoadGroup)[] | null, HasResults: (Handle<IFC4.IfcStructuralResultGroup> | IFC4.IfcStructuralResultGroup)[] | null, SharedPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralAnalysisModel;\n        ToTape(): any[];\n    }\n    class IfcStructuralLoadCase extends IFC4.IfcStructuralLoadGroup {\n        SelfWeightCoefficients: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcLoadGroupTypeEnum> | IFC4.IfcLoadGroupTypeEnum), ActionType: (Handle<IFC4.IfcActionTypeEnum> | IFC4.IfcActionTypeEnum), ActionSource: (Handle<IFC4.IfcActionSourceTypeEnum> | IFC4.IfcActionSourceTypeEnum), Coefficient: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure) | null, Purpose: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, SelfWeightCoefficients: (Handle<IFC4.IfcRatioMeasure> | IFC4.IfcRatioMeasure)[] | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralLoadCase;\n        ToTape(): any[];\n    }\n    class IfcStructuralPlanarAction extends IFC4.IfcStructuralSurfaceAction {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, AppliedLoad: (Handle<IFC4.IfcStructuralLoad> | IFC4.IfcStructuralLoad), GlobalOrLocal: (Handle<IFC4.IfcGlobalOrLocalEnum> | IFC4.IfcGlobalOrLocalEnum), DestabilizingLoad: (Handle<IFC4.IfcBoolean> | IFC4.IfcBoolean) | null, ProjectedOrTrue: (Handle<IFC4.IfcProjectedOrTrueLengthEnum> | IFC4.IfcProjectedOrTrueLengthEnum) | null, PredefinedType: (Handle<IFC4.IfcStructuralSurfaceActivityTypeEnum> | IFC4.IfcStructuralSurfaceActivityTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcStructuralPlanarAction;\n        ToTape(): any[];\n    }\n    class IfcSwitchingDevice extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcSwitchingDeviceTypeEnum> | IFC4.IfcSwitchingDeviceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSwitchingDeviceTypeEnum> | IFC4.IfcSwitchingDeviceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSwitchingDevice;\n        ToTape(): any[];\n    }\n    class IfcTank extends IFC4.IfcFlowStorageDevice {\n        PredefinedType: (Handle<IFC4.IfcTankTypeEnum> | IFC4.IfcTankTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcTankTypeEnum> | IFC4.IfcTankTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTank;\n        ToTape(): any[];\n    }\n    class IfcTransformer extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcTransformerTypeEnum> | IFC4.IfcTransformerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcTransformerTypeEnum> | IFC4.IfcTransformerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTransformer;\n        ToTape(): any[];\n    }\n    class IfcTubeBundle extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcTubeBundleTypeEnum> | IFC4.IfcTubeBundleTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcTubeBundleTypeEnum> | IFC4.IfcTubeBundleTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcTubeBundle;\n        ToTape(): any[];\n    }\n    class IfcUnitaryControlElementType extends IFC4.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC4.IfcUnitaryControlElementTypeEnum> | IFC4.IfcUnitaryControlElementTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcUnitaryControlElementTypeEnum> | IFC4.IfcUnitaryControlElementTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryControlElementType;\n        ToTape(): any[];\n    }\n    class IfcUnitaryEquipment extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcUnitaryEquipmentTypeEnum> | IFC4.IfcUnitaryEquipmentTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcUnitaryEquipmentTypeEnum> | IFC4.IfcUnitaryEquipmentTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryEquipment;\n        ToTape(): any[];\n    }\n    class IfcValve extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcValveTypeEnum> | IFC4.IfcValveTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcValveTypeEnum> | IFC4.IfcValveTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcValve;\n        ToTape(): any[];\n    }\n    class IfcWall extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcWallTypeEnum> | IFC4.IfcWallTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcWallTypeEnum> | IFC4.IfcWallTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWall;\n        ToTape(): any[];\n    }\n    class IfcWallElementedCase extends IFC4.IfcWall {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcWallTypeEnum> | IFC4.IfcWallTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWallElementedCase;\n        ToTape(): any[];\n    }\n    class IfcWallStandardCase extends IFC4.IfcWall {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcWallTypeEnum> | IFC4.IfcWallTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWallStandardCase;\n        ToTape(): any[];\n    }\n    class IfcWasteTerminal extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcWasteTerminalTypeEnum> | IFC4.IfcWasteTerminalTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcWasteTerminalTypeEnum> | IFC4.IfcWasteTerminalTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWasteTerminal;\n        ToTape(): any[];\n    }\n    class IfcWindow extends IFC4.IfcBuildingElement {\n        OverallHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null;\n        PredefinedType: (Handle<IFC4.IfcWindowTypeEnum> | IFC4.IfcWindowTypeEnum) | null;\n        PartitioningType: (Handle<IFC4.IfcWindowTypePartitioningEnum> | IFC4.IfcWindowTypePartitioningEnum) | null;\n        UserDefinedPartitioningType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, OverallHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcWindowTypeEnum> | IFC4.IfcWindowTypeEnum) | null, PartitioningType: (Handle<IFC4.IfcWindowTypePartitioningEnum> | IFC4.IfcWindowTypePartitioningEnum) | null, UserDefinedPartitioningType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindow;\n        ToTape(): any[];\n    }\n    class IfcWindowStandardCase extends IFC4.IfcWindow {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, OverallHeight: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, OverallWidth: (Handle<IFC4.IfcPositiveLengthMeasure> | IFC4.IfcPositiveLengthMeasure) | null, PredefinedType: (Handle<IFC4.IfcWindowTypeEnum> | IFC4.IfcWindowTypeEnum) | null, PartitioningType: (Handle<IFC4.IfcWindowTypePartitioningEnum> | IFC4.IfcWindowTypePartitioningEnum) | null, UserDefinedPartitioningType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcWindowStandardCase;\n        ToTape(): any[];\n    }\n    class IfcActuatorType extends IFC4.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC4.IfcActuatorTypeEnum> | IFC4.IfcActuatorTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcActuatorTypeEnum> | IFC4.IfcActuatorTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActuatorType;\n        ToTape(): any[];\n    }\n    class IfcAirTerminal extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcAirTerminalTypeEnum> | IFC4.IfcAirTerminalTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcAirTerminalTypeEnum> | IFC4.IfcAirTerminalTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminal;\n        ToTape(): any[];\n    }\n    class IfcAirTerminalBox extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcAirTerminalBoxTypeEnum> | IFC4.IfcAirTerminalBoxTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcAirTerminalBoxTypeEnum> | IFC4.IfcAirTerminalBoxTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirTerminalBox;\n        ToTape(): any[];\n    }\n    class IfcAirToAirHeatRecovery extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcAirToAirHeatRecoveryTypeEnum> | IFC4.IfcAirToAirHeatRecoveryTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcAirToAirHeatRecoveryTypeEnum> | IFC4.IfcAirToAirHeatRecoveryTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAirToAirHeatRecovery;\n        ToTape(): any[];\n    }\n    class IfcAlarmType extends IFC4.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC4.IfcAlarmTypeEnum> | IFC4.IfcAlarmTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcAlarmTypeEnum> | IFC4.IfcAlarmTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAlarmType;\n        ToTape(): any[];\n    }\n    class IfcAudioVisualAppliance extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcAudioVisualApplianceTypeEnum> | IFC4.IfcAudioVisualApplianceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcAudioVisualApplianceTypeEnum> | IFC4.IfcAudioVisualApplianceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAudioVisualAppliance;\n        ToTape(): any[];\n    }\n    class IfcBeam extends IFC4.IfcBuildingElement {\n        PredefinedType: (Handle<IFC4.IfcBeamTypeEnum> | IFC4.IfcBeamTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcBeamTypeEnum> | IFC4.IfcBeamTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBeam;\n        ToTape(): any[];\n    }\n    class IfcBeamStandardCase extends IFC4.IfcBeam {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcBeamTypeEnum> | IFC4.IfcBeamTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBeamStandardCase;\n        ToTape(): any[];\n    }\n    class IfcBoiler extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcBoilerTypeEnum> | IFC4.IfcBoilerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcBoilerTypeEnum> | IFC4.IfcBoilerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBoiler;\n        ToTape(): any[];\n    }\n    class IfcBurner extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcBurnerTypeEnum> | IFC4.IfcBurnerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcBurnerTypeEnum> | IFC4.IfcBurnerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcBurner;\n        ToTape(): any[];\n    }\n    class IfcCableCarrierFitting extends IFC4.IfcFlowFitting {\n        PredefinedType: (Handle<IFC4.IfcCableCarrierFittingTypeEnum> | IFC4.IfcCableCarrierFittingTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCableCarrierFittingTypeEnum> | IFC4.IfcCableCarrierFittingTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierFitting;\n        ToTape(): any[];\n    }\n    class IfcCableCarrierSegment extends IFC4.IfcFlowSegment {\n        PredefinedType: (Handle<IFC4.IfcCableCarrierSegmentTypeEnum> | IFC4.IfcCableCarrierSegmentTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCableCarrierSegmentTypeEnum> | IFC4.IfcCableCarrierSegmentTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableCarrierSegment;\n        ToTape(): any[];\n    }\n    class IfcCableFitting extends IFC4.IfcFlowFitting {\n        PredefinedType: (Handle<IFC4.IfcCableFittingTypeEnum> | IFC4.IfcCableFittingTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCableFittingTypeEnum> | IFC4.IfcCableFittingTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableFitting;\n        ToTape(): any[];\n    }\n    class IfcCableSegment extends IFC4.IfcFlowSegment {\n        PredefinedType: (Handle<IFC4.IfcCableSegmentTypeEnum> | IFC4.IfcCableSegmentTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCableSegmentTypeEnum> | IFC4.IfcCableSegmentTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCableSegment;\n        ToTape(): any[];\n    }\n    class IfcChiller extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcChillerTypeEnum> | IFC4.IfcChillerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcChillerTypeEnum> | IFC4.IfcChillerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcChiller;\n        ToTape(): any[];\n    }\n    class IfcCoil extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcCoilTypeEnum> | IFC4.IfcCoilTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCoilTypeEnum> | IFC4.IfcCoilTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoil;\n        ToTape(): any[];\n    }\n    class IfcCommunicationsAppliance extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcCommunicationsApplianceTypeEnum> | IFC4.IfcCommunicationsApplianceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCommunicationsApplianceTypeEnum> | IFC4.IfcCommunicationsApplianceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCommunicationsAppliance;\n        ToTape(): any[];\n    }\n    class IfcCompressor extends IFC4.IfcFlowMovingDevice {\n        PredefinedType: (Handle<IFC4.IfcCompressorTypeEnum> | IFC4.IfcCompressorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCompressorTypeEnum> | IFC4.IfcCompressorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCompressor;\n        ToTape(): any[];\n    }\n    class IfcCondenser extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcCondenserTypeEnum> | IFC4.IfcCondenserTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCondenserTypeEnum> | IFC4.IfcCondenserTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCondenser;\n        ToTape(): any[];\n    }\n    class IfcControllerType extends IFC4.IfcDistributionControlElementType {\n        PredefinedType: (Handle<IFC4.IfcControllerTypeEnum> | IFC4.IfcControllerTypeEnum);\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ApplicableOccurrence: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, HasPropertySets: (Handle<IFC4.IfcPropertySetDefinition> | IFC4.IfcPropertySetDefinition)[] | null, RepresentationMaps: (Handle<IFC4.IfcRepresentationMap> | IFC4.IfcRepresentationMap)[] | null, Tag: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ElementType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcControllerTypeEnum> | IFC4.IfcControllerTypeEnum));\n        static FromTape(expressID: number, type: number, tape: any[]): IfcControllerType;\n        ToTape(): any[];\n    }\n    class IfcCooledBeam extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcCooledBeamTypeEnum> | IFC4.IfcCooledBeamTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCooledBeamTypeEnum> | IFC4.IfcCooledBeamTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCooledBeam;\n        ToTape(): any[];\n    }\n    class IfcCoolingTower extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcCoolingTowerTypeEnum> | IFC4.IfcCoolingTowerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcCoolingTowerTypeEnum> | IFC4.IfcCoolingTowerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcCoolingTower;\n        ToTape(): any[];\n    }\n    class IfcDamper extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcDamperTypeEnum> | IFC4.IfcDamperTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcDamperTypeEnum> | IFC4.IfcDamperTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDamper;\n        ToTape(): any[];\n    }\n    class IfcDistributionChamberElement extends IFC4.IfcDistributionFlowElement {\n        PredefinedType: (Handle<IFC4.IfcDistributionChamberElementTypeEnum> | IFC4.IfcDistributionChamberElementTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcDistributionChamberElementTypeEnum> | IFC4.IfcDistributionChamberElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionChamberElement;\n        ToTape(): any[];\n    }\n    class IfcDistributionCircuit extends IFC4.IfcDistributionSystem {\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, LongName: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, PredefinedType: (Handle<IFC4.IfcDistributionSystemEnum> | IFC4.IfcDistributionSystemEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionCircuit;\n        ToTape(): any[];\n    }\n    class IfcDistributionControlElement extends IFC4.IfcDistributionElement {\n        AssignedToFlowElement: (Handle<IFC4.IfcRelFlowControlElements> | IFC4.IfcRelFlowControlElements)[] | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDistributionControlElement;\n        ToTape(): any[];\n    }\n    class IfcDuctFitting extends IFC4.IfcFlowFitting {\n        PredefinedType: (Handle<IFC4.IfcDuctFittingTypeEnum> | IFC4.IfcDuctFittingTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcDuctFittingTypeEnum> | IFC4.IfcDuctFittingTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctFitting;\n        ToTape(): any[];\n    }\n    class IfcDuctSegment extends IFC4.IfcFlowSegment {\n        PredefinedType: (Handle<IFC4.IfcDuctSegmentTypeEnum> | IFC4.IfcDuctSegmentTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcDuctSegmentTypeEnum> | IFC4.IfcDuctSegmentTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSegment;\n        ToTape(): any[];\n    }\n    class IfcDuctSilencer extends IFC4.IfcFlowTreatmentDevice {\n        PredefinedType: (Handle<IFC4.IfcDuctSilencerTypeEnum> | IFC4.IfcDuctSilencerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcDuctSilencerTypeEnum> | IFC4.IfcDuctSilencerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcDuctSilencer;\n        ToTape(): any[];\n    }\n    class IfcElectricAppliance extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcElectricApplianceTypeEnum> | IFC4.IfcElectricApplianceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcElectricApplianceTypeEnum> | IFC4.IfcElectricApplianceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricAppliance;\n        ToTape(): any[];\n    }\n    class IfcElectricDistributionBoard extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcElectricDistributionBoardTypeEnum> | IFC4.IfcElectricDistributionBoardTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcElectricDistributionBoardTypeEnum> | IFC4.IfcElectricDistributionBoardTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricDistributionBoard;\n        ToTape(): any[];\n    }\n    class IfcElectricFlowStorageDevice extends IFC4.IfcFlowStorageDevice {\n        PredefinedType: (Handle<IFC4.IfcElectricFlowStorageDeviceTypeEnum> | IFC4.IfcElectricFlowStorageDeviceTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcElectricFlowStorageDeviceTypeEnum> | IFC4.IfcElectricFlowStorageDeviceTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricFlowStorageDevice;\n        ToTape(): any[];\n    }\n    class IfcElectricGenerator extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcElectricGeneratorTypeEnum> | IFC4.IfcElectricGeneratorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcElectricGeneratorTypeEnum> | IFC4.IfcElectricGeneratorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricGenerator;\n        ToTape(): any[];\n    }\n    class IfcElectricMotor extends IFC4.IfcEnergyConversionDevice {\n        PredefinedType: (Handle<IFC4.IfcElectricMotorTypeEnum> | IFC4.IfcElectricMotorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcElectricMotorTypeEnum> | IFC4.IfcElectricMotorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricMotor;\n        ToTape(): any[];\n    }\n    class IfcElectricTimeControl extends IFC4.IfcFlowController {\n        PredefinedType: (Handle<IFC4.IfcElectricTimeControlTypeEnum> | IFC4.IfcElectricTimeControlTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcElectricTimeControlTypeEnum> | IFC4.IfcElectricTimeControlTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcElectricTimeControl;\n        ToTape(): any[];\n    }\n    class IfcFan extends IFC4.IfcFlowMovingDevice {\n        PredefinedType: (Handle<IFC4.IfcFanTypeEnum> | IFC4.IfcFanTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFanTypeEnum> | IFC4.IfcFanTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFan;\n        ToTape(): any[];\n    }\n    class IfcFilter extends IFC4.IfcFlowTreatmentDevice {\n        PredefinedType: (Handle<IFC4.IfcFilterTypeEnum> | IFC4.IfcFilterTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFilterTypeEnum> | IFC4.IfcFilterTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFilter;\n        ToTape(): any[];\n    }\n    class IfcFireSuppressionTerminal extends IFC4.IfcFlowTerminal {\n        PredefinedType: (Handle<IFC4.IfcFireSuppressionTerminalTypeEnum> | IFC4.IfcFireSuppressionTerminalTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFireSuppressionTerminalTypeEnum> | IFC4.IfcFireSuppressionTerminalTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFireSuppressionTerminal;\n        ToTape(): any[];\n    }\n    class IfcFlowInstrument extends IFC4.IfcDistributionControlElement {\n        PredefinedType: (Handle<IFC4.IfcFlowInstrumentTypeEnum> | IFC4.IfcFlowInstrumentTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcFlowInstrumentTypeEnum> | IFC4.IfcFlowInstrumentTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcFlowInstrument;\n        ToTape(): any[];\n    }\n    class IfcProtectiveDeviceTrippingUnit extends IFC4.IfcDistributionControlElement {\n        PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum> | IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum> | IFC4.IfcProtectiveDeviceTrippingUnitTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcProtectiveDeviceTrippingUnit;\n        ToTape(): any[];\n    }\n    class IfcSensor extends IFC4.IfcDistributionControlElement {\n        PredefinedType: (Handle<IFC4.IfcSensorTypeEnum> | IFC4.IfcSensorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcSensorTypeEnum> | IFC4.IfcSensorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcSensor;\n        ToTape(): any[];\n    }\n    class IfcUnitaryControlElement extends IFC4.IfcDistributionControlElement {\n        PredefinedType: (Handle<IFC4.IfcUnitaryControlElementTypeEnum> | IFC4.IfcUnitaryControlElementTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcUnitaryControlElementTypeEnum> | IFC4.IfcUnitaryControlElementTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcUnitaryControlElement;\n        ToTape(): any[];\n    }\n    class IfcActuator extends IFC4.IfcDistributionControlElement {\n        PredefinedType: (Handle<IFC4.IfcActuatorTypeEnum> | IFC4.IfcActuatorTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcActuatorTypeEnum> | IFC4.IfcActuatorTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcActuator;\n        ToTape(): any[];\n    }\n    class IfcAlarm extends IFC4.IfcDistributionControlElement {\n        PredefinedType: (Handle<IFC4.IfcAlarmTypeEnum> | IFC4.IfcAlarmTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcAlarmTypeEnum> | IFC4.IfcAlarmTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcAlarm;\n        ToTape(): any[];\n    }\n    class IfcController extends IFC4.IfcDistributionControlElement {\n        PredefinedType: (Handle<IFC4.IfcControllerTypeEnum> | IFC4.IfcControllerTypeEnum) | null;\n        constructor(expressID: number, type: number, GlobalId: (Handle<IFC4.IfcGloballyUniqueId> | IFC4.IfcGloballyUniqueId), OwnerHistory: (Handle<IFC4.IfcOwnerHistory> | IFC4.IfcOwnerHistory) | null, Name: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, Description: (Handle<IFC4.IfcText> | IFC4.IfcText) | null, ObjectType: (Handle<IFC4.IfcLabel> | IFC4.IfcLabel) | null, ObjectPlacement: (Handle<IFC4.IfcObjectPlacement> | IFC4.IfcObjectPlacement) | null, Representation: (Handle<IFC4.IfcProductRepresentation> | IFC4.IfcProductRepresentation) | null, Tag: (Handle<IFC4.IfcIdentifier> | IFC4.IfcIdentifier) | null, PredefinedType: (Handle<IFC4.IfcControllerTypeEnum> | IFC4.IfcControllerTypeEnum) | null);\n        static FromTape(expressID: number, type: number, tape: any[]): IfcController;\n        ToTape(): any[];\n    }\n}\n";
    export let ifc_schema = " declare const FILE_SCHEMA = 1109904537;\n declare const FILE_NAME = 1390159747;\n declare const FILE_DESCRIPTION = 599546466;\n declare const IFCACTORROLE = 3630933823;\n declare const IFCADDRESS = 618182010;\n declare const IFCAPPLICATION = 639542469;\n declare const IFCAPPLIEDVALUE = 411424972;\n declare const IFCAPPLIEDVALUERELATIONSHIP = 1110488051;\n declare const IFCAPPROVAL = 130549933;\n declare const IFCAPPROVALACTORRELATIONSHIP = 2080292479;\n declare const IFCAPPROVALPROPERTYRELATIONSHIP = 390851274;\n declare const IFCAPPROVALRELATIONSHIP = 3869604511;\n declare const IFCBOUNDARYCONDITION = 4037036970;\n declare const IFCBOUNDARYEDGECONDITION = 1560379544;\n declare const IFCBOUNDARYFACECONDITION = 3367102660;\n declare const IFCBOUNDARYNODECONDITION = 1387855156;\n declare const IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\n declare const IFCCALENDARDATE = 622194075;\n declare const IFCCLASSIFICATION = 747523909;\n declare const IFCCLASSIFICATIONITEM = 1767535486;\n declare const IFCCLASSIFICATIONITEMRELATIONSHIP = 1098599126;\n declare const IFCCLASSIFICATIONNOTATION = 938368621;\n declare const IFCCLASSIFICATIONNOTATIONFACET = 3639012971;\n declare const IFCCOLOURSPECIFICATION = 3264961684;\n declare const IFCCONNECTIONGEOMETRY = 2859738748;\n declare const IFCCONNECTIONPOINTGEOMETRY = 2614616156;\n declare const IFCCONNECTIONPORTGEOMETRY = 4257277454;\n declare const IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\n declare const IFCCONSTRAINT = 1959218052;\n declare const IFCCONSTRAINTAGGREGATIONRELATIONSHIP = 1658513725;\n declare const IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP = 613356794;\n declare const IFCCONSTRAINTRELATIONSHIP = 347226245;\n declare const IFCCOORDINATEDUNIVERSALTIMEOFFSET = 1065062679;\n declare const IFCCOSTVALUE = 602808272;\n declare const IFCCURRENCYRELATIONSHIP = 539742890;\n declare const IFCCURVESTYLEFONT = 1105321065;\n declare const IFCCURVESTYLEFONTANDSCALING = 2367409068;\n declare const IFCCURVESTYLEFONTPATTERN = 3510044353;\n declare const IFCDATEANDTIME = 1072939445;\n declare const IFCDERIVEDUNIT = 1765591967;\n declare const IFCDERIVEDUNITELEMENT = 1045800335;\n declare const IFCDIMENSIONALEXPONENTS = 2949456006;\n declare const IFCDOCUMENTELECTRONICFORMAT = 1376555844;\n declare const IFCDOCUMENTINFORMATION = 1154170062;\n declare const IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\n declare const IFCDRAUGHTINGCALLOUTRELATIONSHIP = 3796139169;\n declare const IFCENVIRONMENTALIMPACTVALUE = 1648886627;\n declare const IFCEXTERNALREFERENCE = 3200245327;\n declare const IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\n declare const IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\n declare const IFCEXTERNALLYDEFINEDSYMBOL = 3207319532;\n declare const IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\n declare const IFCGRIDAXIS = 852622518;\n declare const IFCIRREGULARTIMESERIESVALUE = 3020489413;\n declare const IFCLIBRARYINFORMATION = 2655187982;\n declare const IFCLIBRARYREFERENCE = 3452421091;\n declare const IFCLIGHTDISTRIBUTIONDATA = 4162380809;\n declare const IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\n declare const IFCLOCALTIME = 30780891;\n declare const IFCMATERIAL = 1838606355;\n declare const IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\n declare const IFCMATERIALLAYER = 248100487;\n declare const IFCMATERIALLAYERSET = 3303938423;\n declare const IFCMATERIALLAYERSETUSAGE = 1303795690;\n declare const IFCMATERIALLIST = 2199411900;\n declare const IFCMATERIALPROPERTIES = 3265635763;\n declare const IFCMEASUREWITHUNIT = 2597039031;\n declare const IFCMECHANICALMATERIALPROPERTIES = 4256014907;\n declare const IFCMECHANICALSTEELMATERIALPROPERTIES = 677618848;\n declare const IFCMETRIC = 3368373690;\n declare const IFCMONETARYUNIT = 2706619895;\n declare const IFCNAMEDUNIT = 1918398963;\n declare const IFCOBJECTPLACEMENT = 3701648758;\n declare const IFCOBJECTIVE = 2251480897;\n declare const IFCOPTICALMATERIALPROPERTIES = 1227763645;\n declare const IFCORGANIZATION = 4251960020;\n declare const IFCORGANIZATIONRELATIONSHIP = 1411181986;\n declare const IFCOWNERHISTORY = 1207048766;\n declare const IFCPERSON = 2077209135;\n declare const IFCPERSONANDORGANIZATION = 101040310;\n declare const IFCPHYSICALQUANTITY = 2483315170;\n declare const IFCPHYSICALSIMPLEQUANTITY = 2226359599;\n declare const IFCPOSTALADDRESS = 3355820592;\n declare const IFCPREDEFINEDITEM = 3727388367;\n declare const IFCPREDEFINEDSYMBOL = 990879717;\n declare const IFCPREDEFINEDTERMINATORSYMBOL = 3213052703;\n declare const IFCPREDEFINEDTEXTFONT = 1775413392;\n declare const IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\n declare const IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\n declare const IFCPRESENTATIONSTYLE = 3119450353;\n declare const IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\n declare const IFCPRODUCTREPRESENTATION = 2095639259;\n declare const IFCPRODUCTSOFCOMBUSTIONPROPERTIES = 2267347899;\n declare const IFCPROFILEDEF = 3958567839;\n declare const IFCPROFILEPROPERTIES = 2802850158;\n declare const IFCPROPERTY = 2598011224;\n declare const IFCPROPERTYCONSTRAINTRELATIONSHIP = 3896028662;\n declare const IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\n declare const IFCPROPERTYENUMERATION = 3710013099;\n declare const IFCQUANTITYAREA = 2044713172;\n declare const IFCQUANTITYCOUNT = 2093928680;\n declare const IFCQUANTITYLENGTH = 931644368;\n declare const IFCQUANTITYTIME = 3252649465;\n declare const IFCQUANTITYVOLUME = 2405470396;\n declare const IFCQUANTITYWEIGHT = 825690147;\n declare const IFCREFERENCESVALUEDOCUMENT = 2692823254;\n declare const IFCREINFORCEMENTBARPROPERTIES = 1580146022;\n declare const IFCRELAXATION = 1222501353;\n declare const IFCREPRESENTATION = 1076942058;\n declare const IFCREPRESENTATIONCONTEXT = 3377609919;\n declare const IFCREPRESENTATIONITEM = 3008791417;\n declare const IFCREPRESENTATIONMAP = 1660063152;\n declare const IFCRIBPLATEPROFILEPROPERTIES = 3679540991;\n declare const IFCROOT = 2341007311;\n declare const IFCSIUNIT = 448429030;\n declare const IFCSECTIONPROPERTIES = 2042790032;\n declare const IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\n declare const IFCSHAPEASPECT = 867548509;\n declare const IFCSHAPEMODEL = 3982875396;\n declare const IFCSHAPEREPRESENTATION = 4240577450;\n declare const IFCSIMPLEPROPERTY = 3692461612;\n declare const IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\n declare const IFCSTRUCTURALLOAD = 2162789131;\n declare const IFCSTRUCTURALLOADSTATIC = 2525727697;\n declare const IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\n declare const IFCSTYLEMODEL = 2830218821;\n declare const IFCSTYLEDITEM = 3958052878;\n declare const IFCSTYLEDREPRESENTATION = 3049322572;\n declare const IFCSURFACESTYLE = 1300840506;\n declare const IFCSURFACESTYLELIGHTING = 3303107099;\n declare const IFCSURFACESTYLEREFRACTION = 1607154358;\n declare const IFCSURFACESTYLESHADING = 846575682;\n declare const IFCSURFACESTYLEWITHTEXTURES = 1351298697;\n declare const IFCSURFACETEXTURE = 626085974;\n declare const IFCSYMBOLSTYLE = 1290481447;\n declare const IFCTABLE = 985171141;\n declare const IFCTABLEROW = 531007025;\n declare const IFCTELECOMADDRESS = 912023232;\n declare const IFCTEXTSTYLE = 1447204868;\n declare const IFCTEXTSTYLEFONTMODEL = 1983826977;\n declare const IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\n declare const IFCTEXTSTYLETEXTMODEL = 1640371178;\n declare const IFCTEXTSTYLEWITHBOXCHARACTERISTICS = 1484833681;\n declare const IFCTEXTURECOORDINATE = 280115917;\n declare const IFCTEXTURECOORDINATEGENERATOR = 1742049831;\n declare const IFCTEXTUREMAP = 2552916305;\n declare const IFCTEXTUREVERTEX = 1210645708;\n declare const IFCTHERMALMATERIALPROPERTIES = 3317419933;\n declare const IFCTIMESERIES = 3101149627;\n declare const IFCTIMESERIESREFERENCERELATIONSHIP = 1718945513;\n declare const IFCTIMESERIESVALUE = 581633288;\n declare const IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\n declare const IFCTOPOLOGYREPRESENTATION = 1735638870;\n declare const IFCUNITASSIGNMENT = 180925521;\n declare const IFCVERTEX = 2799835756;\n declare const IFCVERTEXBASEDTEXTUREMAP = 3304826586;\n declare const IFCVERTEXPOINT = 1907098498;\n declare const IFCVIRTUALGRIDINTERSECTION = 891718957;\n declare const IFCWATERPROPERTIES = 1065908215;\n declare const IFCANNOTATIONOCCURRENCE = 2442683028;\n declare const IFCANNOTATIONSURFACEOCCURRENCE = 962685235;\n declare const IFCANNOTATIONSYMBOLOCCURRENCE = 3612888222;\n declare const IFCANNOTATIONTEXTOCCURRENCE = 2297822566;\n declare const IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\n declare const IFCARBITRARYOPENPROFILEDEF = 1310608509;\n declare const IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\n declare const IFCBLOBTEXTURE = 616511568;\n declare const IFCCENTERLINEPROFILEDEF = 3150382593;\n declare const IFCCLASSIFICATIONREFERENCE = 647927063;\n declare const IFCCOLOURRGB = 776857604;\n declare const IFCCOMPLEXPROPERTY = 2542286263;\n declare const IFCCOMPOSITEPROFILEDEF = 1485152156;\n declare const IFCCONNECTEDFACESET = 370225590;\n declare const IFCCONNECTIONCURVEGEOMETRY = 1981873012;\n declare const IFCCONNECTIONPOINTECCENTRICITY = 45288368;\n declare const IFCCONTEXTDEPENDENTUNIT = 3050246964;\n declare const IFCCONVERSIONBASEDUNIT = 2889183280;\n declare const IFCCURVESTYLE = 3800577675;\n declare const IFCDERIVEDPROFILEDEF = 3632507154;\n declare const IFCDIMENSIONCALLOUTRELATIONSHIP = 2273265877;\n declare const IFCDIMENSIONPAIR = 1694125774;\n declare const IFCDOCUMENTREFERENCE = 3732053477;\n declare const IFCDRAUGHTINGPREDEFINEDTEXTFONT = 4170525392;\n declare const IFCEDGE = 3900360178;\n declare const IFCEDGECURVE = 476780140;\n declare const IFCEXTENDEDMATERIALPROPERTIES = 1860660968;\n declare const IFCFACE = 2556980723;\n declare const IFCFACEBOUND = 1809719519;\n declare const IFCFACEOUTERBOUND = 803316827;\n declare const IFCFACESURFACE = 3008276851;\n declare const IFCFAILURECONNECTIONCONDITION = 4219587988;\n declare const IFCFILLAREASTYLE = 738692330;\n declare const IFCFUELPROPERTIES = 3857492461;\n declare const IFCGENERALMATERIALPROPERTIES = 803998398;\n declare const IFCGENERALPROFILEPROPERTIES = 1446786286;\n declare const IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\n declare const IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\n declare const IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\n declare const IFCGEOMETRICSET = 3590301190;\n declare const IFCGRIDPLACEMENT = 178086475;\n declare const IFCHALFSPACESOLID = 812098782;\n declare const IFCHYGROSCOPICMATERIALPROPERTIES = 2445078500;\n declare const IFCIMAGETEXTURE = 3905492369;\n declare const IFCIRREGULARTIMESERIES = 3741457305;\n declare const IFCLIGHTSOURCE = 1402838566;\n declare const IFCLIGHTSOURCEAMBIENT = 125510826;\n declare const IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\n declare const IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\n declare const IFCLIGHTSOURCEPOSITIONAL = 1520743889;\n declare const IFCLIGHTSOURCESPOT = 3422422726;\n declare const IFCLOCALPLACEMENT = 2624227202;\n declare const IFCLOOP = 1008929658;\n declare const IFCMAPPEDITEM = 2347385850;\n declare const IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\n declare const IFCMECHANICALCONCRETEMATERIALPROPERTIES = 1430189142;\n declare const IFCOBJECTDEFINITION = 219451334;\n declare const IFCONEDIRECTIONREPEATFACTOR = 2833995503;\n declare const IFCOPENSHELL = 2665983363;\n declare const IFCORIENTEDEDGE = 1029017970;\n declare const IFCPARAMETERIZEDPROFILEDEF = 2529465313;\n declare const IFCPATH = 2519244187;\n declare const IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\n declare const IFCPIXELTEXTURE = 597895409;\n declare const IFCPLACEMENT = 2004835150;\n declare const IFCPLANAREXTENT = 1663979128;\n declare const IFCPOINT = 2067069095;\n declare const IFCPOINTONCURVE = 4022376103;\n declare const IFCPOINTONSURFACE = 1423911732;\n declare const IFCPOLYLOOP = 2924175390;\n declare const IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\n declare const IFCPREDEFINEDCOLOUR = 759155922;\n declare const IFCPREDEFINEDCURVEFONT = 2559016684;\n declare const IFCPREDEFINEDDIMENSIONSYMBOL = 433424934;\n declare const IFCPREDEFINEDPOINTMARKERSYMBOL = 179317114;\n declare const IFCPRODUCTDEFINITIONSHAPE = 673634403;\n declare const IFCPROPERTYBOUNDEDVALUE = 871118103;\n declare const IFCPROPERTYDEFINITION = 1680319473;\n declare const IFCPROPERTYENUMERATEDVALUE = 4166981789;\n declare const IFCPROPERTYLISTVALUE = 2752243245;\n declare const IFCPROPERTYREFERENCEVALUE = 941946838;\n declare const IFCPROPERTYSETDEFINITION = 3357820518;\n declare const IFCPROPERTYSINGLEVALUE = 3650150729;\n declare const IFCPROPERTYTABLEVALUE = 110355661;\n declare const IFCRECTANGLEPROFILEDEF = 3615266464;\n declare const IFCREGULARTIMESERIES = 3413951693;\n declare const IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\n declare const IFCRELATIONSHIP = 478536968;\n declare const IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\n declare const IFCSECTIONEDSPINE = 1509187699;\n declare const IFCSERVICELIFEFACTOR = 2411513650;\n declare const IFCSHELLBASEDSURFACEMODEL = 4124623270;\n declare const IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\n declare const IFCSOLIDMODEL = 723233188;\n declare const IFCSOUNDPROPERTIES = 2485662743;\n declare const IFCSOUNDVALUE = 1202362311;\n declare const IFCSPACETHERMALLOADPROPERTIES = 390701378;\n declare const IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\n declare const IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\n declare const IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\n declare const IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\n declare const IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\n declare const IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\n declare const IFCSTRUCTURALPROFILEPROPERTIES = 3843319758;\n declare const IFCSTRUCTURALSTEELPROFILEPROPERTIES = 3653947884;\n declare const IFCSUBEDGE = 2233826070;\n declare const IFCSURFACE = 2513912981;\n declare const IFCSURFACESTYLERENDERING = 1878645084;\n declare const IFCSWEPTAREASOLID = 2247615214;\n declare const IFCSWEPTDISKSOLID = 1260650574;\n declare const IFCSWEPTSURFACE = 230924584;\n declare const IFCTSHAPEPROFILEDEF = 3071757647;\n declare const IFCTERMINATORSYMBOL = 3028897424;\n declare const IFCTEXTLITERAL = 4282788508;\n declare const IFCTEXTLITERALWITHEXTENT = 3124975700;\n declare const IFCTRAPEZIUMPROFILEDEF = 2715220739;\n declare const IFCTWODIRECTIONREPEATFACTOR = 1345879162;\n declare const IFCTYPEOBJECT = 1628702193;\n declare const IFCTYPEPRODUCT = 2347495698;\n declare const IFCUSHAPEPROFILEDEF = 427810014;\n declare const IFCVECTOR = 1417489154;\n declare const IFCVERTEXLOOP = 2759199220;\n declare const IFCWINDOWLININGPROPERTIES = 336235671;\n declare const IFCWINDOWPANELPROPERTIES = 512836454;\n declare const IFCWINDOWSTYLE = 1299126871;\n declare const IFCZSHAPEPROFILEDEF = 2543172580;\n declare const IFCANNOTATIONCURVEOCCURRENCE = 3288037868;\n declare const IFCANNOTATIONFILLAREA = 669184980;\n declare const IFCANNOTATIONFILLAREAOCCURRENCE = 2265737646;\n declare const IFCANNOTATIONSURFACE = 1302238472;\n declare const IFCAXIS1PLACEMENT = 4261334040;\n declare const IFCAXIS2PLACEMENT2D = 3125803723;\n declare const IFCAXIS2PLACEMENT3D = 2740243338;\n declare const IFCBOOLEANRESULT = 2736907675;\n declare const IFCBOUNDEDSURFACE = 4182860854;\n declare const IFCBOUNDINGBOX = 2581212453;\n declare const IFCBOXEDHALFSPACE = 2713105998;\n declare const IFCCSHAPEPROFILEDEF = 2898889636;\n declare const IFCCARTESIANPOINT = 1123145078;\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\n declare const IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\n declare const IFCCIRCLEPROFILEDEF = 1383045692;\n declare const IFCCLOSEDSHELL = 2205249479;\n declare const IFCCOMPOSITECURVESEGMENT = 2485617015;\n declare const IFCCRANERAILASHAPEPROFILEDEF = 4133800736;\n declare const IFCCRANERAILFSHAPEPROFILEDEF = 194851669;\n declare const IFCCSGPRIMITIVE3D = 2506170314;\n declare const IFCCSGSOLID = 2147822146;\n declare const IFCCURVE = 2601014836;\n declare const IFCCURVEBOUNDEDPLANE = 2827736869;\n declare const IFCDEFINEDSYMBOL = 693772133;\n declare const IFCDIMENSIONCURVE = 606661476;\n declare const IFCDIMENSIONCURVETERMINATOR = 4054601972;\n declare const IFCDIRECTION = 32440307;\n declare const IFCDOORLININGPROPERTIES = 2963535650;\n declare const IFCDOORPANELPROPERTIES = 1714330368;\n declare const IFCDOORSTYLE = 526551008;\n declare const IFCDRAUGHTINGCALLOUT = 3073041342;\n declare const IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\n declare const IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\n declare const IFCEDGELOOP = 1472233963;\n declare const IFCELEMENTQUANTITY = 1883228015;\n declare const IFCELEMENTTYPE = 339256511;\n declare const IFCELEMENTARYSURFACE = 2777663545;\n declare const IFCELLIPSEPROFILEDEF = 2835456948;\n declare const IFCENERGYPROPERTIES = 80994333;\n declare const IFCEXTRUDEDAREASOLID = 477187591;\n declare const IFCFACEBASEDSURFACEMODEL = 2047409740;\n declare const IFCFILLAREASTYLEHATCHING = 374418227;\n declare const IFCFILLAREASTYLETILESYMBOLWITHSTYLE = 4203026998;\n declare const IFCFILLAREASTYLETILES = 315944413;\n declare const IFCFLUIDFLOWPROPERTIES = 3455213021;\n declare const IFCFURNISHINGELEMENTTYPE = 4238390223;\n declare const IFCFURNITURETYPE = 1268542332;\n declare const IFCGEOMETRICCURVESET = 987898635;\n declare const IFCISHAPEPROFILEDEF = 1484403080;\n declare const IFCLSHAPEPROFILEDEF = 572779678;\n declare const IFCLINE = 1281925730;\n declare const IFCMANIFOLDSOLIDBREP = 1425443689;\n declare const IFCOBJECT = 3888040117;\n declare const IFCOFFSETCURVE2D = 3388369263;\n declare const IFCOFFSETCURVE3D = 3505215534;\n declare const IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\n declare const IFCPLANARBOX = 603570806;\n declare const IFCPLANE = 220341763;\n declare const IFCPROCESS = 2945172077;\n declare const IFCPRODUCT = 4208778838;\n declare const IFCPROJECT = 103090709;\n declare const IFCPROJECTIONCURVE = 4194566429;\n declare const IFCPROPERTYSET = 1451395588;\n declare const IFCPROXY = 3219374653;\n declare const IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\n declare const IFCRECTANGULARPYRAMID = 2798486643;\n declare const IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\n declare const IFCRELASSIGNS = 3939117080;\n declare const IFCRELASSIGNSTOACTOR = 1683148259;\n declare const IFCRELASSIGNSTOCONTROL = 2495723537;\n declare const IFCRELASSIGNSTOGROUP = 1307041759;\n declare const IFCRELASSIGNSTOPROCESS = 4278684876;\n declare const IFCRELASSIGNSTOPRODUCT = 2857406711;\n declare const IFCRELASSIGNSTOPROJECTORDER = 3372526763;\n declare const IFCRELASSIGNSTORESOURCE = 205026976;\n declare const IFCRELASSOCIATES = 1865459582;\n declare const IFCRELASSOCIATESAPPLIEDVALUE = 1327628568;\n declare const IFCRELASSOCIATESAPPROVAL = 4095574036;\n declare const IFCRELASSOCIATESCLASSIFICATION = 919958153;\n declare const IFCRELASSOCIATESCONSTRAINT = 2728634034;\n declare const IFCRELASSOCIATESDOCUMENT = 982818633;\n declare const IFCRELASSOCIATESLIBRARY = 3840914261;\n declare const IFCRELASSOCIATESMATERIAL = 2655215786;\n declare const IFCRELASSOCIATESPROFILEPROPERTIES = 2851387026;\n declare const IFCRELCONNECTS = 826625072;\n declare const IFCRELCONNECTSELEMENTS = 1204542856;\n declare const IFCRELCONNECTSPATHELEMENTS = 3945020480;\n declare const IFCRELCONNECTSPORTTOELEMENT = 4201705270;\n declare const IFCRELCONNECTSPORTS = 3190031847;\n declare const IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\n declare const IFCRELCONNECTSSTRUCTURALELEMENT = 3912681535;\n declare const IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\n declare const IFCRELCONNECTSWITHECCENTRICITY = 504942748;\n declare const IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\n declare const IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\n declare const IFCRELCOVERSBLDGELEMENTS = 886880790;\n declare const IFCRELCOVERSSPACES = 2802773753;\n declare const IFCRELDECOMPOSES = 2551354335;\n declare const IFCRELDEFINES = 693640335;\n declare const IFCRELDEFINESBYPROPERTIES = 4186316022;\n declare const IFCRELDEFINESBYTYPE = 781010003;\n declare const IFCRELFILLSELEMENT = 3940055652;\n declare const IFCRELFLOWCONTROLELEMENTS = 279856033;\n declare const IFCRELINTERACTIONREQUIREMENTS = 4189434867;\n declare const IFCRELNESTS = 3268803585;\n declare const IFCRELOCCUPIESSPACES = 2051452291;\n declare const IFCRELOVERRIDESPROPERTIES = 202636808;\n declare const IFCRELPROJECTSELEMENT = 750771296;\n declare const IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\n declare const IFCRELSCHEDULESCOSTITEMS = 1058617721;\n declare const IFCRELSEQUENCE = 4122056220;\n declare const IFCRELSERVICESBUILDINGS = 366585022;\n declare const IFCRELSPACEBOUNDARY = 3451746338;\n declare const IFCRELVOIDSELEMENT = 1401173127;\n declare const IFCRESOURCE = 2914609552;\n declare const IFCREVOLVEDAREASOLID = 1856042241;\n declare const IFCRIGHTCIRCULARCONE = 4158566097;\n declare const IFCRIGHTCIRCULARCYLINDER = 3626867408;\n declare const IFCSPATIALSTRUCTUREELEMENT = 2706606064;\n declare const IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\n declare const IFCSPHERE = 451544542;\n declare const IFCSTRUCTURALACTIVITY = 3544373492;\n declare const IFCSTRUCTURALITEM = 3136571912;\n declare const IFCSTRUCTURALMEMBER = 530289379;\n declare const IFCSTRUCTURALREACTION = 3689010777;\n declare const IFCSTRUCTURALSURFACEMEMBER = 3979015343;\n declare const IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\n declare const IFCSTRUCTUREDDIMENSIONCALLOUT = 4070609034;\n declare const IFCSURFACECURVESWEPTAREASOLID = 2028607225;\n declare const IFCSURFACEOFLINEAREXTRUSION = 2809605785;\n declare const IFCSURFACEOFREVOLUTION = 4124788165;\n declare const IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\n declare const IFCTASK = 3473067441;\n declare const IFCTRANSPORTELEMENTTYPE = 2097647324;\n declare const IFCACTOR = 2296667514;\n declare const IFCANNOTATION = 1674181508;\n declare const IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\n declare const IFCBLOCK = 1334484129;\n declare const IFCBOOLEANCLIPPINGRESULT = 3649129432;\n declare const IFCBOUNDEDCURVE = 1260505505;\n declare const IFCBUILDING = 4031249490;\n declare const IFCBUILDINGELEMENTTYPE = 1950629157;\n declare const IFCBUILDINGSTOREY = 3124254112;\n declare const IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\n declare const IFCCOLUMNTYPE = 300633059;\n declare const IFCCOMPOSITECURVE = 3732776249;\n declare const IFCCONIC = 2510884976;\n declare const IFCCONSTRUCTIONRESOURCE = 2559216714;\n declare const IFCCONTROL = 3293443760;\n declare const IFCCOSTITEM = 3895139033;\n declare const IFCCOSTSCHEDULE = 1419761937;\n declare const IFCCOVERINGTYPE = 1916426348;\n declare const IFCCREWRESOURCE = 3295246426;\n declare const IFCCURTAINWALLTYPE = 1457835157;\n declare const IFCDIMENSIONCURVEDIRECTEDCALLOUT = 681481545;\n declare const IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\n declare const IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\n declare const IFCELECTRICALBASEPROPERTIES = 360485395;\n declare const IFCELEMENT = 1758889154;\n declare const IFCELEMENTASSEMBLY = 4123344466;\n declare const IFCELEMENTCOMPONENT = 1623761950;\n declare const IFCELEMENTCOMPONENTTYPE = 2590856083;\n declare const IFCELLIPSE = 1704287377;\n declare const IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\n declare const IFCEQUIPMENTELEMENT = 1962604670;\n declare const IFCEQUIPMENTSTANDARD = 3272907226;\n declare const IFCEVAPORATIVECOOLERTYPE = 3174744832;\n declare const IFCEVAPORATORTYPE = 3390157468;\n declare const IFCFACETEDBREP = 807026263;\n declare const IFCFACETEDBREPWITHVOIDS = 3737207727;\n declare const IFCFASTENER = 647756555;\n declare const IFCFASTENERTYPE = 2489546625;\n declare const IFCFEATUREELEMENT = 2827207264;\n declare const IFCFEATUREELEMENTADDITION = 2143335405;\n declare const IFCFEATUREELEMENTSUBTRACTION = 1287392070;\n declare const IFCFLOWCONTROLLERTYPE = 3907093117;\n declare const IFCFLOWFITTINGTYPE = 3198132628;\n declare const IFCFLOWMETERTYPE = 3815607619;\n declare const IFCFLOWMOVINGDEVICETYPE = 1482959167;\n declare const IFCFLOWSEGMENTTYPE = 1834744321;\n declare const IFCFLOWSTORAGEDEVICETYPE = 1339347760;\n declare const IFCFLOWTERMINALTYPE = 2297155007;\n declare const IFCFLOWTREATMENTDEVICETYPE = 3009222698;\n declare const IFCFURNISHINGELEMENT = 263784265;\n declare const IFCFURNITURESTANDARD = 814719939;\n declare const IFCGASTERMINALTYPE = 200128114;\n declare const IFCGRID = 3009204131;\n declare const IFCGROUP = 2706460486;\n declare const IFCHEATEXCHANGERTYPE = 1251058090;\n declare const IFCHUMIDIFIERTYPE = 1806887404;\n declare const IFCINVENTORY = 2391368822;\n declare const IFCJUNCTIONBOXTYPE = 4288270099;\n declare const IFCLABORRESOURCE = 3827777499;\n declare const IFCLAMPTYPE = 1051575348;\n declare const IFCLIGHTFIXTURETYPE = 1161773419;\n declare const IFCLINEARDIMENSION = 2506943328;\n declare const IFCMECHANICALFASTENER = 377706215;\n declare const IFCMECHANICALFASTENERTYPE = 2108223431;\n declare const IFCMEMBERTYPE = 3181161470;\n declare const IFCMOTORCONNECTIONTYPE = 977012517;\n declare const IFCMOVE = 1916936684;\n declare const IFCOCCUPANT = 4143007308;\n declare const IFCOPENINGELEMENT = 3588315303;\n declare const IFCORDERACTION = 3425660407;\n declare const IFCOUTLETTYPE = 2837617999;\n declare const IFCPERFORMANCEHISTORY = 2382730787;\n declare const IFCPERMIT = 3327091369;\n declare const IFCPIPEFITTINGTYPE = 804291784;\n declare const IFCPIPESEGMENTTYPE = 4231323485;\n declare const IFCPLATETYPE = 4017108033;\n declare const IFCPOLYLINE = 3724593414;\n declare const IFCPORT = 3740093272;\n declare const IFCPROCEDURE = 2744685151;\n declare const IFCPROJECTORDER = 2904328755;\n declare const IFCPROJECTORDERRECORD = 3642467123;\n declare const IFCPROJECTIONELEMENT = 3651124850;\n declare const IFCPROTECTIVEDEVICETYPE = 1842657554;\n declare const IFCPUMPTYPE = 2250791053;\n declare const IFCRADIUSDIMENSION = 3248260540;\n declare const IFCRAILINGTYPE = 2893384427;\n declare const IFCRAMPFLIGHTTYPE = 2324767716;\n declare const IFCRELAGGREGATES = 160246688;\n declare const IFCRELASSIGNSTASKS = 2863920197;\n declare const IFCSANITARYTERMINALTYPE = 1768891740;\n declare const IFCSCHEDULETIMECONTROL = 3517283431;\n declare const IFCSERVICELIFE = 4105383287;\n declare const IFCSITE = 4097777520;\n declare const IFCSLABTYPE = 2533589738;\n declare const IFCSPACE = 3856911033;\n declare const IFCSPACEHEATERTYPE = 1305183839;\n declare const IFCSPACEPROGRAM = 652456506;\n declare const IFCSPACETYPE = 3812236995;\n declare const IFCSTACKTERMINALTYPE = 3112655638;\n declare const IFCSTAIRFLIGHTTYPE = 1039846685;\n declare const IFCSTRUCTURALACTION = 682877961;\n declare const IFCSTRUCTURALCONNECTION = 1179482911;\n declare const IFCSTRUCTURALCURVECONNECTION = 4243806635;\n declare const IFCSTRUCTURALCURVEMEMBER = 214636428;\n declare const IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\n declare const IFCSTRUCTURALLINEARACTION = 1807405624;\n declare const IFCSTRUCTURALLINEARACTIONVARYING = 1721250024;\n declare const IFCSTRUCTURALLOADGROUP = 1252848954;\n declare const IFCSTRUCTURALPLANARACTION = 1621171031;\n declare const IFCSTRUCTURALPLANARACTIONVARYING = 3987759626;\n declare const IFCSTRUCTURALPOINTACTION = 2082059205;\n declare const IFCSTRUCTURALPOINTCONNECTION = 734778138;\n declare const IFCSTRUCTURALPOINTREACTION = 1235345126;\n declare const IFCSTRUCTURALRESULTGROUP = 2986769608;\n declare const IFCSTRUCTURALSURFACECONNECTION = 1975003073;\n declare const IFCSUBCONTRACTRESOURCE = 148013059;\n declare const IFCSWITCHINGDEVICETYPE = 2315554128;\n declare const IFCSYSTEM = 2254336722;\n declare const IFCTANKTYPE = 5716631;\n declare const IFCTIMESERIESSCHEDULE = 1637806684;\n declare const IFCTRANSFORMERTYPE = 1692211062;\n declare const IFCTRANSPORTELEMENT = 1620046519;\n declare const IFCTRIMMEDCURVE = 3593883385;\n declare const IFCTUBEBUNDLETYPE = 1600972822;\n declare const IFCUNITARYEQUIPMENTTYPE = 1911125066;\n declare const IFCVALVETYPE = 728799441;\n declare const IFCVIRTUALELEMENT = 2769231204;\n declare const IFCWALLTYPE = 1898987631;\n declare const IFCWASTETERMINALTYPE = 1133259667;\n declare const IFCWORKCONTROL = 1028945134;\n declare const IFCWORKPLAN = 4218914973;\n declare const IFCWORKSCHEDULE = 3342526732;\n declare const IFCZONE = 1033361043;\n declare const IFC2DCOMPOSITECURVE = 1213861670;\n declare const IFCACTIONREQUEST = 3821786052;\n declare const IFCAIRTERMINALBOXTYPE = 1411407467;\n declare const IFCAIRTERMINALTYPE = 3352864051;\n declare const IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\n declare const IFCANGULARDIMENSION = 2470393545;\n declare const IFCASSET = 3460190687;\n declare const IFCBSPLINECURVE = 1967976161;\n declare const IFCBEAMTYPE = 819618141;\n declare const IFCBEZIERCURVE = 1916977116;\n declare const IFCBOILERTYPE = 231477066;\n declare const IFCBUILDINGELEMENT = 3299480353;\n declare const IFCBUILDINGELEMENTCOMPONENT = 52481810;\n declare const IFCBUILDINGELEMENTPART = 2979338954;\n declare const IFCBUILDINGELEMENTPROXY = 1095909175;\n declare const IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\n declare const IFCCABLECARRIERFITTINGTYPE = 395041908;\n declare const IFCCABLECARRIERSEGMENTTYPE = 3293546465;\n declare const IFCCABLESEGMENTTYPE = 1285652485;\n declare const IFCCHILLERTYPE = 2951183804;\n declare const IFCCIRCLE = 2611217952;\n declare const IFCCOILTYPE = 2301859152;\n declare const IFCCOLUMN = 843113511;\n declare const IFCCOMPRESSORTYPE = 3850581409;\n declare const IFCCONDENSERTYPE = 2816379211;\n declare const IFCCONDITION = 2188551683;\n declare const IFCCONDITIONCRITERION = 1163958913;\n declare const IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\n declare const IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\n declare const IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\n declare const IFCCOOLEDBEAMTYPE = 335055490;\n declare const IFCCOOLINGTOWERTYPE = 2954562838;\n declare const IFCCOVERING = 1973544240;\n declare const IFCCURTAINWALL = 3495092785;\n declare const IFCDAMPERTYPE = 3961806047;\n declare const IFCDIAMETERDIMENSION = 4147604152;\n declare const IFCDISCRETEACCESSORY = 1335981549;\n declare const IFCDISCRETEACCESSORYTYPE = 2635815018;\n declare const IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\n declare const IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\n declare const IFCDISTRIBUTIONELEMENT = 1945004755;\n declare const IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\n declare const IFCDISTRIBUTIONPORT = 3041715199;\n declare const IFCDOOR = 395920057;\n declare const IFCDUCTFITTINGTYPE = 869906466;\n declare const IFCDUCTSEGMENTTYPE = 3760055223;\n declare const IFCDUCTSILENCERTYPE = 2030761528;\n declare const IFCEDGEFEATURE = 855621170;\n declare const IFCELECTRICAPPLIANCETYPE = 663422040;\n declare const IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\n declare const IFCELECTRICGENERATORTYPE = 1534661035;\n declare const IFCELECTRICHEATERTYPE = 1365060375;\n declare const IFCELECTRICMOTORTYPE = 1217240411;\n declare const IFCELECTRICTIMECONTROLTYPE = 712377611;\n declare const IFCELECTRICALCIRCUIT = 1634875225;\n declare const IFCELECTRICALELEMENT = 857184966;\n declare const IFCENERGYCONVERSIONDEVICE = 1658829314;\n declare const IFCFANTYPE = 346874300;\n declare const IFCFILTERTYPE = 1810631287;\n declare const IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\n declare const IFCFLOWCONTROLLER = 2058353004;\n declare const IFCFLOWFITTING = 4278956645;\n declare const IFCFLOWINSTRUMENTTYPE = 4037862832;\n declare const IFCFLOWMOVINGDEVICE = 3132237377;\n declare const IFCFLOWSEGMENT = 987401354;\n declare const IFCFLOWSTORAGEDEVICE = 707683696;\n declare const IFCFLOWTERMINAL = 2223149337;\n declare const IFCFLOWTREATMENTDEVICE = 3508470533;\n declare const IFCFOOTING = 900683007;\n declare const IFCMEMBER = 1073191201;\n declare const IFCPILE = 1687234759;\n declare const IFCPLATE = 3171933400;\n declare const IFCRAILING = 2262370178;\n declare const IFCRAMP = 3024970846;\n declare const IFCRAMPFLIGHT = 3283111854;\n declare const IFCRATIONALBEZIERCURVE = 3055160366;\n declare const IFCREINFORCINGELEMENT = 3027567501;\n declare const IFCREINFORCINGMESH = 2320036040;\n declare const IFCROOF = 2016517767;\n declare const IFCROUNDEDEDGEFEATURE = 1376911519;\n declare const IFCSENSORTYPE = 1783015770;\n declare const IFCSLAB = 1529196076;\n declare const IFCSTAIR = 331165859;\n declare const IFCSTAIRFLIGHT = 4252922144;\n declare const IFCSTRUCTURALANALYSISMODEL = 2515109513;\n declare const IFCTENDON = 3824725483;\n declare const IFCTENDONANCHOR = 2347447852;\n declare const IFCVIBRATIONISOLATORTYPE = 3313531582;\n declare const IFCWALL = 2391406946;\n declare const IFCWALLSTANDARDCASE = 3512223829;\n declare const IFCWINDOW = 3304561284;\n declare const IFCACTUATORTYPE = 2874132201;\n declare const IFCALARMTYPE = 3001207471;\n declare const IFCBEAM = 753842376;\n declare const IFCCHAMFEREDGEFEATURE = 2454782716;\n declare const IFCCONTROLLERTYPE = 578613899;\n declare const IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\n declare const IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\n declare const IFCELECTRICDISTRIBUTIONPOINT = 3700593921;\n declare const IFCREINFORCINGBAR = 979691226;\n declare const IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\n declare const IFCCOORDINATEOPERATION = 1785450214;\n declare const IFCCOORDINATEREFERENCESYSTEM = 1466758467;\n declare const IFCEXTERNALINFORMATION = 4294318154;\n declare const IFCMAPCONVERSION = 3057273783;\n declare const IFCMATERIALDEFINITION = 760658860;\n declare const IFCMATERIALLAYERWITHOFFSETS = 1847252529;\n declare const IFCMATERIALPROFILE = 2235152071;\n declare const IFCMATERIALPROFILESET = 164193824;\n declare const IFCMATERIALPROFILEWITHOFFSETS = 552965576;\n declare const IFCMATERIALUSAGEDEFINITION = 1507914824;\n declare const IFCPRESENTATIONITEM = 677532197;\n declare const IFCPROJECTEDCRS = 3843373140;\n declare const IFCPROPERTYABSTRACTION = 986844984;\n declare const IFCRECURRENCEPATTERN = 3915482550;\n declare const IFCREFERENCE = 2433181523;\n declare const IFCRESOURCELEVELRELATIONSHIP = 2439245199;\n declare const IFCSCHEDULINGTIME = 1054537805;\n declare const IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\n declare const IFCSTRUCTURALLOADORRESULT = 609421318;\n declare const IFCSURFACEREINFORCEMENTAREA = 2934153892;\n declare const IFCTABLECOLUMN = 2043862942;\n declare const IFCTASKTIME = 1549132990;\n declare const IFCTASKTIMERECURRING = 2771591690;\n declare const IFCTEXTUREVERTEXLIST = 3611470254;\n declare const IFCTIMEPERIOD = 1199560280;\n declare const IFCWORKTIME = 1236880293;\n declare const IFCCOLOURRGBLIST = 3285139300;\n declare const IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\n declare const IFCEVENTTIME = 211053100;\n declare const IFCEXTENDEDPROPERTIES = 297599258;\n declare const IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\n declare const IFCINDEXEDCOLOURMAP = 3570813810;\n declare const IFCINDEXEDTEXTUREMAP = 1437953363;\n declare const IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\n declare const IFCLAGTIME = 1585845231;\n declare const IFCMATERIALCONSTITUENT = 3708119000;\n declare const IFCMATERIALCONSTITUENTSET = 2852063980;\n declare const IFCMATERIALPROFILESETUSAGE = 3079605661;\n declare const IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\n declare const IFCMATERIALRELATIONSHIP = 853536259;\n declare const IFCMIRROREDPROFILEDEF = 2998442950;\n declare const IFCPREDEFINEDPROPERTIES = 3778827333;\n declare const IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\n declare const IFCQUANTITYSET = 2090586900;\n declare const IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\n declare const IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\n declare const IFCRESOURCETIME = 1042787934;\n declare const IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\n declare const IFCTESSELLATEDITEM = 901063453;\n declare const IFCTYPEPROCESS = 3736923433;\n declare const IFCTYPERESOURCE = 3698973494;\n declare const IFCADVANCEDFACE = 3406155212;\n declare const IFCCARTESIANPOINTLIST = 574549367;\n declare const IFCCARTESIANPOINTLIST2D = 1675464909;\n declare const IFCCARTESIANPOINTLIST3D = 2059837836;\n declare const IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\n declare const IFCCONTEXT = 3419103109;\n declare const IFCCREWRESOURCETYPE = 1815067380;\n declare const IFCCURVEBOUNDEDSURFACE = 2629017746;\n declare const IFCEVENTTYPE = 4024345920;\n declare const IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\n declare const IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\n declare const IFCGEOGRAPHICELEMENTTYPE = 4095422895;\n declare const IFCINDEXEDPOLYGONALFACE = 178912537;\n declare const IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\n declare const IFCLABORRESOURCETYPE = 428585644;\n declare const IFCPCURVE = 1682466193;\n declare const IFCPREDEFINEDPROPERTYSET = 3967405729;\n declare const IFCPROCEDURETYPE = 569719735;\n declare const IFCPROJECTLIBRARY = 653396225;\n declare const IFCPROPERTYSETTEMPLATE = 492091185;\n declare const IFCPROPERTYTEMPLATE = 3521284610;\n declare const IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\n declare const IFCRELDECLARES = 2565941209;\n declare const IFCRELDEFINESBYOBJECT = 1462361463;\n declare const IFCRELDEFINESBYTEMPLATE = 307848117;\n declare const IFCRELINTERFERESELEMENTS = 427948657;\n declare const IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\n declare const IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\n declare const IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\n declare const IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\n declare const IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\n declare const IFCSPATIALELEMENT = 1412071761;\n declare const IFCSPATIALELEMENTTYPE = 710998568;\n declare const IFCSPATIALZONE = 463610769;\n declare const IFCSPATIALZONETYPE = 2481509218;\n declare const IFCSPHERICALSURFACE = 4015995234;\n declare const IFCSTRUCTURALSURFACEREACTION = 603775116;\n declare const IFCSUBCONTRACTRESOURCETYPE = 4095615324;\n declare const IFCSURFACECURVE = 699246055;\n declare const IFCTASKTYPE = 3206491090;\n declare const IFCTESSELLATEDFACESET = 2387106220;\n declare const IFCTOROIDALSURFACE = 1935646853;\n declare const IFCTRIANGULATEDFACESET = 2916149573;\n declare const IFCADVANCEDBREP = 1635779807;\n declare const IFCADVANCEDBREPWITHVOIDS = 2603310189;\n declare const IFCBSPLINESURFACE = 2887950389;\n declare const IFCBSPLINESURFACEWITHKNOTS = 167062518;\n declare const IFCCHIMNEYTYPE = 2197970202;\n declare const IFCCIVILELEMENTTYPE = 3893394355;\n declare const IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\n declare const IFCCOMPOSITECURVEONSURFACE = 15328376;\n declare const IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\n declare const IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\n declare const IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\n declare const IFCCYLINDRICALSURFACE = 1213902940;\n declare const IFCDOORTYPE = 2323601079;\n declare const IFCELEMENTASSEMBLYTYPE = 2397081782;\n declare const IFCENGINETYPE = 132023988;\n declare const IFCEVENT = 4148101412;\n declare const IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\n declare const IFCFOOTINGTYPE = 1893162501;\n declare const IFCFURNITURE = 1509553395;\n declare const IFCGEOGRAPHICELEMENT = 3493046030;\n declare const IFCINDEXEDPOLYCURVE = 2571569899;\n declare const IFCINTERCEPTORTYPE = 3946677679;\n declare const IFCINTERSECTIONCURVE = 3113134337;\n declare const IFCMEDICALDEVICETYPE = 1114901282;\n declare const IFCOPENINGSTANDARDCASE = 3079942009;\n declare const IFCPILETYPE = 1158309216;\n declare const IFCPOLYGONALFACESET = 2839578677;\n declare const IFCRAMPTYPE = 1469900589;\n declare const IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\n declare const IFCREINFORCINGELEMENTTYPE = 964333572;\n declare const IFCREINFORCINGMESHTYPE = 2310774935;\n declare const IFCROOFTYPE = 2781568857;\n declare const IFCSEAMCURVE = 2157484638;\n declare const IFCSHADINGDEVICETYPE = 4074543187;\n declare const IFCSOLARDEVICETYPE = 1072016465;\n declare const IFCSTAIRTYPE = 338393293;\n declare const IFCSTRUCTURALCURVEACTION = 1004757350;\n declare const IFCSTRUCTURALCURVEREACTION = 2757150158;\n declare const IFCSTRUCTURALSURFACEACTION = 3657597509;\n declare const IFCSURFACEFEATURE = 3101698114;\n declare const IFCSYSTEMFURNITUREELEMENT = 413509423;\n declare const IFCTENDONANCHORTYPE = 3081323446;\n declare const IFCTENDONTYPE = 2415094496;\n declare const IFCVIBRATIONISOLATOR = 2391383451;\n declare const IFCVOIDINGFEATURE = 926996030;\n declare const IFCWINDOWTYPE = 4009809668;\n declare const IFCWORKCALENDAR = 4088093105;\n declare const IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\n declare const IFCBSPLINECURVEWITHKNOTS = 2461110595;\n declare const IFCBOUNDARYCURVE = 1136057603;\n declare const IFCBUILDINGELEMENTPARTTYPE = 39481116;\n declare const IFCBUILDINGSYSTEM = 1177604601;\n declare const IFCBURNERTYPE = 2188180465;\n declare const IFCCABLEFITTINGTYPE = 2674252688;\n declare const IFCCHIMNEY = 3296154744;\n declare const IFCCIVILELEMENT = 1677625105;\n declare const IFCCOLUMNSTANDARDCASE = 905975707;\n declare const IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\n declare const IFCDISTRIBUTIONSYSTEM = 3205830791;\n declare const IFCDOORSTANDARDCASE = 3242481149;\n declare const IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\n declare const IFCENGINE = 2814081492;\n declare const IFCEVAPORATIVECOOLER = 3747195512;\n declare const IFCEVAPORATOR = 484807127;\n declare const IFCEXTERNALSPATIALELEMENT = 1209101575;\n declare const IFCFLOWMETER = 2188021234;\n declare const IFCHEATEXCHANGER = 3319311131;\n declare const IFCHUMIDIFIER = 2068733104;\n declare const IFCINTERCEPTOR = 4175244083;\n declare const IFCJUNCTIONBOX = 2176052936;\n declare const IFCLAMP = 76236018;\n declare const IFCLIGHTFIXTURE = 629592764;\n declare const IFCMEDICALDEVICE = 1437502449;\n declare const IFCMEMBERSTANDARDCASE = 1911478936;\n declare const IFCMOTORCONNECTION = 2474470126;\n declare const IFCOUTERBOUNDARYCURVE = 144952367;\n declare const IFCOUTLET = 3694346114;\n declare const IFCPIPEFITTING = 310824031;\n declare const IFCPIPESEGMENT = 3612865200;\n declare const IFCPLATESTANDARDCASE = 1156407060;\n declare const IFCPROTECTIVEDEVICE = 738039164;\n declare const IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\n declare const IFCPUMP = 90941305;\n declare const IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\n declare const IFCREINFORCINGBARTYPE = 2572171363;\n declare const IFCSANITARYTERMINAL = 3053780830;\n declare const IFCSHADINGDEVICE = 1329646415;\n declare const IFCSLABELEMENTEDCASE = 3127900445;\n declare const IFCSLABSTANDARDCASE = 3027962421;\n declare const IFCSOLARDEVICE = 3420628829;\n declare const IFCSPACEHEATER = 1999602285;\n declare const IFCSTACKTERMINAL = 1404847402;\n declare const IFCSTRUCTURALLOADCASE = 385403989;\n declare const IFCSWITCHINGDEVICE = 1162798199;\n declare const IFCTANK = 812556717;\n declare const IFCTRANSFORMER = 3825984169;\n declare const IFCTUBEBUNDLE = 3026737570;\n declare const IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\n declare const IFCUNITARYEQUIPMENT = 4292641817;\n declare const IFCVALVE = 4207607924;\n declare const IFCWALLELEMENTEDCASE = 4156078855;\n declare const IFCWASTETERMINAL = 4237592921;\n declare const IFCWINDOWSTANDARDCASE = 486154966;\n declare const IFCAIRTERMINAL = 1634111441;\n declare const IFCAIRTERMINALBOX = 177149247;\n declare const IFCAIRTOAIRHEATRECOVERY = 2056796094;\n declare const IFCAUDIOVISUALAPPLIANCE = 277319702;\n declare const IFCBEAMSTANDARDCASE = 2906023776;\n declare const IFCBOILER = 32344328;\n declare const IFCBURNER = 2938176219;\n declare const IFCCABLECARRIERFITTING = 635142910;\n declare const IFCCABLECARRIERSEGMENT = 3758799889;\n declare const IFCCABLEFITTING = 1051757585;\n declare const IFCCABLESEGMENT = 4217484030;\n declare const IFCCHILLER = 3902619387;\n declare const IFCCOIL = 639361253;\n declare const IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\n declare const IFCCOMPRESSOR = 3571504051;\n declare const IFCCONDENSER = 2272882330;\n declare const IFCCOOLEDBEAM = 4136498852;\n declare const IFCCOOLINGTOWER = 3640358203;\n declare const IFCDAMPER = 4074379575;\n declare const IFCDISTRIBUTIONCIRCUIT = 562808652;\n declare const IFCDUCTFITTING = 342316401;\n declare const IFCDUCTSEGMENT = 3518393246;\n declare const IFCDUCTSILENCER = 1360408905;\n declare const IFCELECTRICAPPLIANCE = 1904799276;\n declare const IFCELECTRICDISTRIBUTIONBOARD = 862014818;\n declare const IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\n declare const IFCELECTRICGENERATOR = 264262732;\n declare const IFCELECTRICMOTOR = 402227799;\n declare const IFCELECTRICTIMECONTROL = 1003880860;\n declare const IFCFAN = 3415622556;\n declare const IFCFILTER = 819412036;\n declare const IFCFIRESUPPRESSIONTERMINAL = 1426591983;\n declare const IFCFLOWINSTRUMENT = 182646315;\n declare const IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\n declare const IFCSENSOR = 4086658281;\n declare const IFCUNITARYCONTROLELEMENT = 630975310;\n declare const IFCACTUATOR = 4288193352;\n declare const IFCALARM = 3087945054;\n declare const IFCCONTROLLER = 25142252;\n declare const IfcEntities: {\n    [key: number]: string;\n};\n";

